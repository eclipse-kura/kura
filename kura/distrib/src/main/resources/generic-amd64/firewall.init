#!/bin/bash
#
# Copyright (c) 2023 Eurotech and/or its affiliates and others
#
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#  Eurotech
#

#
# iptables-restore script
#
iptables_config_file=/etc/sysconfig/iptables
ipforward_file=/proc/sys/net/ipv4/ip_forward
ip6tables_config_file=/etc/sysconfig/ip6tables
ip6forward_file=/proc/sys/net/ipv6/conf/all/forwarding
enable_ipforwarding=false;

create_filter_chains() {
    iptables_command="$1"
	# create custom chains if needed
	custom_filter_chains=(input-kura output-kura forward-kura)
	for custom_chain in "${custom_filter_chains[@]}"; do
	    chain=("${custom_chain//-/ }")
	    if ! "$iptables_command" -C "${chain[0]^^}" -j "$custom_chain" -t filter > /dev/null 2>&1; then
	        "$iptables_command" -N "$custom_chain" -t filter > /dev/null 2>&1
	        "$iptables_command" -I "${chain[0]^^}" -t filter -j "$custom_chain" > /dev/null 2>&1
	    fi
	done
	custom_filter_chains=(forward-kura-pf forward-kura-ipf)
	for custom_chain in "${custom_filter_chains[@]}"; do
	    if ! "$iptables_command" -C forward-kura -j "$custom_chain" -t filter > /dev/null 2>&1; then
	        "$iptables_command" -N "$custom_chain" -t filter > /dev/null 2>&1
	        "$iptables_command" -I forward-kura -t filter -j "$custom_chain" > /dev/null 2>&1
	    fi
	done
}

create_nat_chains() {
    iptables_command="$1"
	custom_nat_chains=(prerouting-kura postrouting-kura input-kura output-kura)
	for custom_chain in "${custom_nat_chains[@]}"; do
	    chain=("${custom_chain//-/ }"[0])
	    if ! "$iptables_command" -C "${chain[0]^^}" -j "$custom_chain" -t nat > /dev/null 2>&1; then
	        "$iptables_command" -N "$custom_chain" -t nat > /dev/null 2>&1
	        "$iptables_command" -I "${chain[0]^^}" -t nat -j "$custom_chain" > /dev/null 2>&1
	    fi
	done
	if ! "$iptables_command" -C prerouting-kura -j prerouting-kura-pf -t nat > /dev/null 2>&1; then
	    "$iptables_command" -N prerouting-kura-pf -t nat > /dev/null 2>&1
	    "$iptables_command" -I prerouting-kura -t nat -j prerouting-kura-pf > /dev/null 2>&1
	fi
	custom_nat_chains=(postrouting-kura-pf postrouting-kura-ipf)
	for custom_chain in "${custom_nat_chains[@]}"; do
	    if "$iptables_command" -C postrouting-kura -j "$custom_chain" -t nat > /dev/null 2>&1; then
	        "$iptables_command" -N "$custom_chain" -t nat > /dev/null 2>&1
	        "$iptables_command" -I postrouting-kura -t nat -j "$custom_chain" > /dev/null 2>&1
	    fi
	done
}

create_mangle_chains() {
    iptables_command="$1"
	custom_mangle_chains=(prerouting-kura postrouting-kura input-kura output-kura forward-kura)
	for custom_chain in "${custom_mangle_chains[@]}"; do
	    chain=("${custom_chain//-/ }"[0])
	    if ! "$iptables_command" -C "${chain[0]^^}" -j "$custom_chain" -t mangle > /dev/null 2>&1; then
	        "$iptables_command" -N "$custom_chain" -t mangle > /dev/null 2>&1
	        "$iptables_command" -I "${chain[0]^^}" -t mangle -j "$custom_chain" > /dev/null 2>&1
	    fi
	done
}

configure_policies() {
    iptables_command="$1"
	# configure policies for standard chains
	policy=$("$iptables_command" -nL -t filter | grep policy | grep INPUT)
	if [[ "$policy" == *ACCEPT* ]]; then
		"$iptables_command" -P INPUT DROP
	fi
	policy=$("$iptables_command" -nL -t filter | grep policy | grep OUTPUT)
	if [[ "$policy" == *DROP* ]]; then
		"$iptables_command" -P OUTPUT ACCEPT
	fi
	policy=$("$iptables_command" -nL -t filter | grep policy | grep FORWARD)
	if [[ "$policy" == *ACCEPT* ]]; then
		"$iptables_command" -P FORWARD DROP
	fi
}

configure_ip_forwarding() {
    config_file="$1"
    ipforward_config_file="$2"
	# enable ip forwarding if needed
	if [ -f "$config_file" ]; then
		while IFS='' read -r line || [[ -n "$line" ]]; do
		    if [[ $line =~ "-A forward-kura" ]]; then
		        enable_ipforwarding=true
		        break
		    fi
		done < "$config_file"
	fi
	if [ "$enable_ipforwarding" = true ]; then
	    echo "1" > "$ipforward_config_file"
	else
	    echo "0" > "$ipforward_config_file"
	fi
}

if [ -f $iptables_config_file ]; then
	iptables-restore < $iptables_config_file
fi
if [ -f $ip6tables_config_file ]; then
	ip6tables-restore < $ip6tables_config_file
fi

configure_iptables() {
    create_filter_chains "$1"
    create_nat_chains "$1"
    create_mangle_chains "$1"
    configure_policies "$1"
    configure_ip_forwarding "$2" "$3"
}

configure_iptables iptables "$iptables_config_file" "$ipforward_file"
configure_iptables ip6tables "$ip6tables_config_file" "$ip6forward_file"

# source a custom firewall script
if [ -f /etc/init.d/firewall_cust ]; then
    source /etc/init.d/firewall_cust 2> /dev/null
fi