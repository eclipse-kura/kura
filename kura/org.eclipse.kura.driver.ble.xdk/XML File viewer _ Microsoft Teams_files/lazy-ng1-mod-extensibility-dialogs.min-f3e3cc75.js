webpackJsonp([4],{1840:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(1841),n(1843),n(1845),n(1847),n(1849),n(1851),n(1853),n(1855),n(1857),n(1859),n(1861),n(1863),n(1865),n(1867),n(1869),n(1876),n(1878)},1841:function(e,t,n){"use strict";var a=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function a(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(a.prototype=n.prototype,new a)}}(),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++){t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var o=n(1842),s=function(e){function t(t,n){var a=e.call(this,t)||this;return a.errorMessage=t,a.errorCode=n,a}return a(t,e),t}(Error),r="extension_addAppDialogTeamPermission1",p="extension_addAppDialogTeamPermission2",l="extension_addAppDialogIdentityPermission2",c=["bots","staticTabs","galleryTabs","inputExtensions","connectors"],d=function(){function e(e,t,n,a,i,o,r,p,l,c,d,h,g,u,m,v,f,S,y,A,b,D,C,I,T,x){var _=this;this.$q=e,this.$scope=t,this.$timeout=n,this.channelService=a,this.conversationsService=i,this.navigationService=o,this.appsService=r,this.$translate=p,this.resources=l,this.localizationService=c,this.loggingService=d,this.settingsService=h,this.dialogService=u,this.eventingService=m,this.extensionManifestService=v,this.constants=f,this.sxConfig=S,this.filesAsyncMediaService=y,this.inputExtensionService=A,this.analyticsService=b,this.teamMembershipPropertiesService=D,this.teamSettingsService=C,this.userAppsDispatcher=I,this.utilityService=T,this.$window=x,this.appCapabilities=[],this.alreadyAddedToTeam=!1,this.alreadyAddedToGroupChat=!1,this.alreadyAddedToPersonalScope=!1,this.emptySpaceVisible=!1,this.hideContent=!0,this.isAppScreenshotsCollapsed=!1,this.isPersonalCapabilityCollapsed=!1,this.isTeamCapabilityCollapsed=!1,this.isGroupChatCapabilityCollapsed=!1,this.isPrivateAndPermissionsCollapsed=!1,this.isAboutCollapsed=!0,this.isChatSelected=!1,this.isFullDescriptionShowed=!1,this.isTeamAppInstallDisabled=!1,this.isTeamArchived=!1,this.mediaScrollOffset=0,this.mediaSize=0,this.permissions=[],this.requestedPermissions=[],this.selectedTeamIndex=-1,this.showLoadingButton=!1,this.showDialogLoadingSpinner=!1,this.showChatAndTeamSelector=!0,this.showTeamSelector=!0,this.showChannelSelector=!1,this.supportedLanguages=[],this.teams=[],this.wait=!1,this.autoNavigationOnDone=!1,this.installedAppCapabilities=[],this.installOptionFlags=teamspace.components.AddAppDialogInstallOptionFlag.Personal|teamspace.components.AddAppDialogInstallOptionFlag.Team,this.isInstallationTriggered=!1,this.skipInstalledSuccess=!1,this.viewScenario=d.newScenario(f.scenarios.extensibility.apps.addAppDialog.view),this.enableAppUpgradeNotification=h.valueAsBoolean(f.settings.names.enableAppUpgradeNotification),this.enableSideloadedAppsInGroupChat=h.valueAsBoolean(f.settings.names.enableSideloadedAppsInGroupChat),this.enableInstallChatAppsFromStore=h.valueAsBoolean(f.settings.names.enableInstallChatAppsFromStore),this.enableSideloadAppByZip=h.valueAsBoolean(f.settings.names.enableSideloadAppByZip),this.enableAppScreenshots=h.valueAsBoolean(f.settings.names.enableAppScreenshots),this.enableAppDetailDialogV3=h.valueAsBoolean(f.settings.names.enableAppDetailDialogV3),this.appFallbackIcon=f.fallbackImages.appFallbackImage,this.enableBotsInGroupChat=h.valueAsBoolean(f.settings.names.enableBotsInGroupChat),this.isPersonalCapabilityCollapsed=this.enableAppScreenshots,this.isTeamCapabilityCollapsed=this.enableAppScreenshots,this.enableInstallChatAppsFromStore&&(this.installOptionFlags|=teamspace.components.AddAppDialogInstallOptionFlag.GroupChat),this.dialogTitle=p.instant(l.strings.extension_addAppDialogTitle_new);var P=angular.isDefined(t.ngDialogData.action)?t.ngDialogData.action:teamspace.components.AddAppDialogAction.Install;if(this.upgradeFlow=P==teamspace.components.AddAppDialogAction.Consent,P==teamspace.components.AddAppDialogAction.View?this.footerButtons=[{text:p.instant(l.strings.teams_okButtonText),func:function(){return _.back()},disabled:!1,tid:"addAppDialog-ok",clickSilent:!0}]:this.upgradeFlow?this.footerButtons=[{text:p.instant(l.strings.extension_addAppDialog_back),func:function(){return _.back()},disabled:!1,secondaryStyle:!0,outcome:teamspace.components.PanelActionOutcome.closeDialog,scenario:teamspace.components.PanelActionScenario.upgradeAppDialog,type:teamspace.components.PanelModuleType.button,name:teamspace.components.PanelModuleName.cancelAddAppButton,summary:"Cancel upgrading an app",scenarioType:teamspace.components.PanelActionScenarioType.appMgmt,tid:"addAppDialog-back",dataBagFunc:function(){return teamspace.components.AppAnalyticsHelper.getAppAnalyticsData(_.app,_.teamId,_.channelId)}},{text:p.instant(l.strings.extension_addAppDialog_allow),func:function(){return _.upgrade()},disabled:!1,outcome:teamspace.components.PanelActionOutcome.submit,scenario:teamspace.components.PanelActionScenario.upgradeAppDialog,type:teamspace.components.PanelModuleType.button,name:teamspace.components.PanelModuleName.addAppButton,summary:"Consent to upgrade an app",scenarioType:teamspace.components.PanelActionScenarioType.appMgmt,tid:"addAppDialog-upgrade",dataBagFunc:function(){return teamspace.components.AppAnalyticsHelper.getAppAnalyticsData(_.app,_.teamId,_.channelId)}}]:(this.footerButtons=[{text:p.instant(l.strings.extension_addAppDialog_install),func:function(){return _.approve()},disabled:!1,tid:"addAppDialog-approve",clickSilent:!0}],this.enableBotsInGroupChat&&t.ngDialogData&&t.ngDialogData.source===f.extensibility.contextualStoreDialog&&this.getBackButtonForContextualStore()),t.$on("$destroy",function(){_.isInstallationTriggered||_.logViewAppActionForTelemetry(_.app,P),_.isFullDescriptionShowed=!1,_.viewScenario&&_.viewScenario.cancel(_.getScenarioEventData()),_.createScenarioPersonal&&_.createScenarioPersonal.cancel(_.getScenarioEventData()),_.createScenarioTeam&&_.createScenarioTeam.cancel(_.getScenarioEventData()),_.createScenarioGroupChat&&_.createScenarioGroupChat.cancel(_.getScenarioEventData()),_.upgradeScenario&&_.upgradeScenario.cancel()}),!1===g.getSettingValue(SkypeX.Services.TenantSettingsStorageKey.isAppsEnabled))return this.onError(new Error("Add app not allowed!"),l.strings.extension_addAppDialogTenantDisabled),void(this.footerButtons=[{text:p.instant(l.strings.extension_addAppDialog_back),func:function(){return _.back()},disabled:!1,scenarioType:teamspace.components.PanelActionScenarioType.appMgmt,tid:"addAppDialog-back",clickSilent:!0}]);try{if(!t.ngDialogData||!t.ngDialogData.appID&&!t.ngDialogData.appDefinitionSideloaded)throw new Error("Invalid Add App Dialog input");t.ngDialogData.appID&&(this.appID=t.ngDialogData.appID),t.ngDialogData.teamId&&(this.teamId=t.ngDialogData.teamId,h.valueAsBoolean(f.settings.names.enableTeamArchive)&&a.getTeamById(this.teamId).then(function(e){_.isTeamArchived=e.isArchived})),t.ngDialogData.teamName&&(this.teamName=t.ngDialogData.teamName),t.ngDialogData.appDefinitionSideloaded&&(this.app=t.ngDialogData.appDefinitionSideloaded),t.ngDialogData.autoNavigationOnDone&&(this.autoNavigationOnDone=t.ngDialogData.autoNavigationOnDone),t.ngDialogData.skipInstalledSuccess&&(this.skipInstalledSuccess=t.ngDialogData.skipInstalledSuccess),t.ngDialogData.messageId&&(this.messageId=t.ngDialogData.messageId),t.ngDialogData.installOptionFlags&&(this.installOptionFlags=t.ngDialogData.installOptionFlags),t.ngDialogData.channelId&&(this.channelId=t.ngDialogData.channelId),t.ngDialogData.category&&(this.category=t.ngDialogData.category),t.ngDialogData.chatId&&(this.chatId=t.ngDialogData.chatId),this.storeLaunchFromChat=!!t.ngDialogData.storeLaunchFromChat,this.dialogIntent=void 0!=t.ngDialogData.intent?t.ngDialogData.intent:teamspace.components.AddAppDialogIntent.Ambiguous,this.preselectTeam=t.ngDialogData.preselectTeam,this.preselectChannel=t.ngDialogData.preselectChannel,this.preselectChat=t.ngDialogData.preselectChat,this.dialogAction=angular.isDefined(t.ngDialogData.action)?t.ngDialogData.action:teamspace.components.AddAppDialogAction.Install,this.viewOnlyDialog=this.dialogAction===teamspace.components.AddAppDialogAction.View||this.upgradeFlow,this.showDialogLoadingSpinner=!0;var w=void 0;if(w=this.upgradeFlow?this.dialogIntent==teamspace.components.AddAppDialogIntent.Team?r.getInstalledAppForTeam(this.teamId,this.appID).then(function(e){return e&&e.appDefinition}):this.dialogIntent===teamspace.components.AddAppDialogIntent.GroupChat?r.getInstalledAppForGroupChat(this.chatId,this.appID).then(function(e){return e&&e.appDefinition}):r.getInstalledAppForUser(this.appID).then(function(e){return e&&e.appDefinition}):this.app?e.resolve(this.app.appDefinition):this.dialogIntent==teamspace.components.AddAppDialogIntent.Team?r.getTeamAppDefinition(this.teamId,this.appID,"add-app-dialog-v2"):this.dialogIntent===teamspace.components.AddAppDialogIntent.GroupChat?r.getGroupChatAppDefinition(this.chatId,this.appID,"add-app-dialog-v2"):r.getUserAppDefinition(this.appID,"add-app-dialog-v2"),(this.dialogIntent==teamspace.components.AddAppDialogIntent.Team&&!this.preselectTeam||this.viewOnlyDialog)&&(this.showTeamSelector=!1,this.showChatAndTeamSelector=!1),this.dialogIntent==teamspace.components.AddAppDialogIntent.GroupChat&&(this.isChatSelected=!0,this.preselectChat||(this.showChatAndTeamSelector=!1)),this.dialogIntent==teamspace.components.AddAppDialogIntent.Team&&(this.retrieveTeamId(),a.getTeamById(this.teamId).then(function(e){_.dialogTitle=p.instant(l.strings.extension_addAppDialogTitleTeamIntent_new)})),this.appID){var k=r.getInstalledAppForUser(this.appID);e.all([w,k]).then(function(e){e[1]&&(_.alreadyAddedToPersonalScope=e[1].appDefinition.isInstalledPersonally&&teamspace.services.AppsServiceUtils.isAppInstalled(e[1]),_.userInstalledAppDefinition=_.alreadyAddedToPersonalScope?e[1]:null),e[0]?_.onAppDefinitionRetrieved(e[0],e[1]?e[1].appEntitlement:{id:e[0].id,state:"NotInstalled"}):_.onError(new s(p.instant(l.strings.extension_addAppDialogErrorMessage)))}).catch(function(e){_.onError(e)})}else w.then(function(e){e?_.onAppDefinitionRetrieved(e,{id:e.id,state:"Installed"}):_.onError(new s(p.instant(l.strings.extension_addAppDialogErrorMessage)))}).catch(function(e){_.onError(e)})}catch(e){this.onError(e)}}return e.$inject=["$q","$scope","$timeout","channelService","conversationsService","navigationService","appsService","$translate","resources","localizationService","loggingService","settingsService","tenantSettingsStore","dialogService","eventingService","extensionManifestService","constants","sxConfig","filesAsyncMediaService","inputExtensionService","analyticsService","teamMembershipPropertiesService","teamSettingsService","userAppsDispatcher","utilityService","$window"],Object.defineProperty(e.prototype,"navCtx",{get:function(){return"add-app-dialog-v2"},enumerable:!0,configurable:!0}),e.prototype.back=function(){this.$scope.closeThisDialog()},e.prototype.backToContextualStore=function(){this.$scope.closeThisDialog(),this.$scope.ngDialogData.onBackButtonClicked()},e.prototype.expandCollapseAppScreenshots=function(){this.isAppScreenshotsCollapsed=!this.isAppScreenshotsCollapsed,this.isAppScreenshotsCollapsed||this.handleArrows()},e.prototype.expandCollapsePersonalCapabilities=function(){this.isPersonalCapabilityCollapsed=!this.isPersonalCapabilityCollapsed},e.prototype.expandCollapseTeamCapabilities=function(){this.isTeamCapabilityCollapsed=!this.isTeamCapabilityCollapsed},e.prototype.expandCollapseGroupChatCapabilities=function(){this.isGroupChatCapabilityCollapsed=!this.isGroupChatCapabilityCollapsed},e.prototype.expandCollapseAboutSection=function(){this.isAboutCollapsed=!this.isAboutCollapsed},e.prototype.expandCollapsePrivateAndPermissions=function(){this.isPrivateAndPermissionsCollapsed=!this.isPrivateAndPermissionsCollapsed},Object.defineProperty(e.prototype,"teamToggleSwitchDisabled",{get:function(){return this.alreadyAddedToTeam||this.wait||this.isTeamAppInstallDisabled},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"chatToggleSwitchDisabled",{get:function(){return this.alreadyAddedToGroupChat||this.wait},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"personalToggleSwitchDisabled",{get:function(){return this.alreadyAddedToPersonalScope||this.wait},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"shouldShowTeamInstallOption",{get:function(){return!!(this.installOptionFlags&teamspace.components.AddAppDialogInstallOptionFlag.Team)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"shouldShowGroupChatInstallOption",{get:function(){return!!(this.installOptionFlags&teamspace.components.AddAppDialogInstallOptionFlag.GroupChat)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"shouldShowPersonalInstallOption",{get:function(){return!!(this.installOptionFlags&teamspace.components.AddAppDialogInstallOptionFlag.Personal)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"shouldShowTeamOrChatInstallOption",{get:function(){return this.shouldShowTeamInstallOption&&this.appHasTeamScope||this.shouldShowGroupChatInstallOption&&this.appHasGroupChatScope},enumerable:!0,configurable:!0}),e.prototype.personalToggleChange=function(e){this.togglePersonalInstall=e,this.updateInstallButtonState()},e.prototype.teamToggleChange=function(e){this.toggleTeamInstall=e,this.toggleChatInstall=!1,this.updateInstallButtonState()},e.prototype.chatToggleChange=function(e){this.toggleChatInstall=e,this.toggleTeamInstall=!1,this.updateInstallButtonState()},e.prototype.approve=function(){var e=this;this.wait=!0,this.isInstallationTriggered=!0,this.evaluateApproveButtonEnabled(),this.toggleDisabledForInstallButton();var t=this.appsService.isSideloadedApp(this.app.appDefinition),n=!this.alreadyAddedToTeam&&this.shouldShowTeamInstallOption&&this.toggleTeamInstall&&!!this.teamId,a=!this.alreadyAddedToPersonalScope&&this.shouldShowPersonalInstallOption&&this.togglePersonalInstall,i=!this.alreadyAddedToGroupChat&&this.shouldShowGroupChatInstallOption&&!!this.chatId&&(!this.enableInstallChatAppsFromStore||this.toggleChatInstall);try{var o=[],r=[];n&&(r.push(teamspace.components.PanelAppScope.team),this.createScenarioTeam=this.loggingService.newScenario(this.constants.scenarios.extensibility.apps.addAppDialog.createTeam),o.push(t?this.sideloadAppForTeam():this.installAppForTeam())),a&&(r.push(teamspace.components.PanelAppScope.personal),this.createScenarioPersonal=this.loggingService.newScenario(this.constants.scenarios.extensibility.apps.addAppDialog.createPersonal),o.push(t?this.sideloadAppForUser():this.installAppForUser())),i&&(r.push(teamspace.components.PanelAppScope.group),this.createScenarioGroupChat=this.loggingService.newScenario(this.constants.scenarios.extensibility.apps.addAppDialog.createGroupChat),o.push(t?this.sideloadAppForChat():this.installAppForChat())),this.$q.all(o).then(function(){e.logInstallAppActionForTelemetry(r,e.app),e.completeInstallation(n,a,i)}).catch(function(t){t.data&&t.data.errorCode&&t.data.errorCode===e.constants.extensibility.apps.errorCodes.unableToParseTeamsAppManifest&&t.data.message?e.onError(new s(t.data.message,t.data.errorCode)):e.onError(t)})}catch(e){this.onError(e)}},e.prototype.left=function(){this.isLeftArrowVisible&&this.positionCardStrip(-1)},e.prototype.right=function(){this.isRightArrowVisible&&this.positionCardStrip(1)},e.prototype.focusOnVideo=function(){var e=document.activeElement.getElementsByTagName("iframe"),t=document.activeElement.getElementsByTagName("webview");(e&&e[0]||t&&t[0]).focus()},e.prototype.setPreActive=function(e){document.activeElement.setAttribute("id","media-preview-preactive-element"),this.logViewAppActionForTelemetry(this.app,teamspace.components.AddAppDialogAction.OpenImage,e)},e.prototype.toggleShowFullDescription=function(e){this.isFullDescriptionShowed=e;var t=angular.element(".ts-add-app-dialog-header-text-long-description"),n=angular.element(".scroll-parent");if(t&&n){this.maxContentScrollHeight=this.maxContentScrollHeight||n.height(),this.headerDescriptionHeightDiff=this.headerDescriptionHeightDiff||t[0].scrollHeight-t[0].clientHeight;var a=this.isFullDescriptionShowed?this.maxContentScrollHeight-this.headerDescriptionHeightDiff<0?0:this.maxContentScrollHeight-this.headerDescriptionHeightDiff:this.maxContentScrollHeight;n.height(a)}this.$timeout(function(){(e?angular.element("#add-app-dialog-view-less"):angular.element("#add-app-dialog-view-more")).focus()},0,!1)},e.prototype.getBackButtonForContextualStore=function(){var e=this;this.footerButtons.unshift({text:this.$translate.instant(this.resources.strings.extension_addAppDialog_back),func:function(){return e.backToContextualStore()},disabled:!1,secondaryStyle:!0,outcome:teamspace.components.PanelActionOutcome.closeDialog,scenario:teamspace.components.PanelActionScenario.backToTabGallery,type:teamspace.components.PanelModuleType.nav,name:teamspace.components.PanelModuleName.tabBackButtonClick,summary:"Back Button to Tab Gallery",scenarioType:teamspace.components.PanelActionScenarioType.appMgmt,tid:"addAppDialog-back",dataBagFunc:function(){return teamspace.components.AppAnalyticsHelper.getAppAnalyticsData(e.app,e.teamId,e.channelId)}})},e.prototype.getLanguageForCode=function(e){var t=this.localizationService.getLanguageForCode(e);if(!t)return null;var n=t.nativeName;if(!n)return null;var a=e.contains("-"),i=n.indexOf(" (");return!a&&i>-1?n.substr(0,i):n},e.prototype.positionCardStrip=function(e){this.screenshotArea=this.screenshotArea||$("#ts-add-app-dialog-screenshots-scrollable"),this.screenshotsStripe=this.screenshotsStripe||$(".screenshots-scrollable-wrapper"),this.mediaScrollOffset=this.screenshotArea.scrollLeft()+e*(this.screenshotsStripe.width()/this.mediaSize),this.screenshotArea.animate({scrollLeft:this.mediaScrollOffset},500),this.handleArrows()},e.prototype.onKeydown=function(e){e.keyCode===this.constants.keyCodes.left?this.left():e.keyCode===this.constants.keyCodes.right&&this.right()},e.prototype.handleArrows=function(){this.rightIcon=this.rightIcon||$(".right.carousel-control"),this.leftIcon=this.leftIcon||$(".left.carousel-control"),this.isLeftArrowVisible=this.mediaScrollOffset>0,this.isRightArrowVisible=this.mediaScrollOffset<this.screenshotsStripe.width()-this.screenshotArea.width()},e.prototype.getVideoUrl=function(e){var t=null;if(e.indexOf("youtube.com/")>0){var n=e.indexOf("v=");n>=0?t=e.substring(n+2):e.indexOf("/embed/")>0&&(this.videoUrl=e)}else if(e.indexOf("youtu.be/")>0)(a=e.lastIndexOf("/"))>=0&&(t=e.substring(a+1));else if(e.indexOf("vimeo.com/")>0){var a=e.lastIndexOf("/");if(a>=0){var i=e.substring(a+1);this.videoUrl=this.constants.urls.store.vimeoUrlFormat.replace("{vimeoId}",i)}}t&&!this.videoUrl&&(this.videoUrl=this.constants.urls.store.youtubeUrlFormat.replace("{youtubeId}",t))},e.prototype.installAppForTeam=function(){var e=this;return this.appsService.createTeamAppEntitlement(this.teamId,this.app.appDefinition).then(function(){e.alreadyAddedToTeam=!0,e.teamInstalledAppDefinition={appDefinition:e.app.appDefinition,appEntitlement:{state:e.constants.extensibility.apps.appStates.installed}}})},e.prototype.installAppForUser=function(){var e=this;return(this.app.appDefinition.inputExtensions&&this.app.appDefinition.inputExtensions.length>0?this.inputExtensionService.installAndFavorite(this.app.appDefinition):this.appsService.createUserAppEntitlement(this.app.appDefinition)).then(function(){e.alreadyAddedToPersonalScope=!0,e.userInstalledAppDefinition={appDefinition:i({},e.app.appDefinition,{isInstalledPersonally:!0}),appEntitlement:{state:e.constants.extensibility.apps.appStates.installed}},e.userInstalledAppDefinition.appEntitlement.state=e.constants.extensibility.apps.appStates.installed})},e.prototype.installAppForChat=function(){var e=this;return this.appsService.createGroupChatAppEntitlement(this.chatId,this.app.appDefinition).then(function(){e.alreadyAddedToGroupChat=!0,e.groupChatInstalledAppDefinition={appDefinition:e.app.appDefinition,appEntitlement:{state:e.constants.extensibility.apps.appStates.installed}}})},e.prototype.sideloadAppForTeam=function(){var e=this,t=this.appsService.getInstalledAppsForTeam(this.teamId),n=_.cloneDeep(this.app),a=[];this.enableSideloadAppByZip||(0===n.appDefinition.smallImageUrl.indexOf("data:")&&a.push(this.uploadBase64DataIcon(n.appDefinition.smallImageUrl,"teamScope").then(function(e){return n.appDefinition.smallImageUrl=e})),0===n.appDefinition.largeImageUrl.indexOf("data:")&&a.push(this.uploadBase64DataIcon(n.appDefinition.largeImageUrl,"teamScope").then(function(e){return n.appDefinition.largeImageUrl=e})));var i=this.enableSideloadAppByZip?this.extensionManifestService.getZipStreamPromise(this.$scope.ngDialogData.file):this.$q.resolve();return this.$q.all([t,i].concat(a)).then(function(t){for(var a=n.appDefinition.externalId.toLowerCase(),i=t[0],o=t[1],s=0;s<i.length;s++){var r=i[s];if(teamspace.services.AppsServiceUtils.isAppInstalled(r)&&r.appDefinition.externalId&&a===r.appDefinition.externalId.toLowerCase()&&!r.appDefinition.tenantId)return n.appDefinition.id=r.appDefinition.id,(e.enableSideloadAppByZip?e.appsService.updateTeamAppDefinitionFromZip(e.teamId,r.appDefinition.id,o):e.appsService.updateTeamAppDefinition(e.teamId,n.appDefinition)).then(function(){e.alreadyAddedToTeam=!0,e.teamInstalledAppDefinition={appDefinition:n.appDefinition}})}return(e.enableSideloadAppByZip?e.appsService.createTeamAppDefinitionFromZip(e.teamId,o):e.appsService.createTeamAppDefinition(e.teamId,n.appDefinition)).then(function(t){e.alreadyAddedToTeam=!0,e.teamInstalledAppDefinition={appDefinition:t}})})},e.prototype.sideloadAppForUser=function(){var e=this,t=this.appsService.getAggregatedInstalledAppsForUser(!1),n=_.cloneDeep(this.app),a=[];this.enableSideloadAppByZip||(0===n.appDefinition.smallImageUrl.indexOf("data:")&&a.push(this.uploadBase64DataIcon(n.appDefinition.smallImageUrl,"personalScope").then(function(e){return n.appDefinition.smallImageUrl=e})),0===n.appDefinition.largeImageUrl.indexOf("data:")&&a.push(this.uploadBase64DataIcon(n.appDefinition.largeImageUrl,"personalScope").then(function(e){return n.appDefinition.largeImageUrl=e})));var i=this.enableSideloadAppByZip?this.extensionManifestService.getZipStreamPromise(this.$scope.ngDialogData.file):this.$q.resolve();return this.$q.all([t,i].concat(a)).then(function(t){for(var a=n.appDefinition.externalId.toLowerCase(),i=t[0],o=t[1],s=0;s<i.length;s++){var r=i[s];if(teamspace.services.AppsServiceUtils.isAppInstalled(r)&&r.appDefinition.externalId&&a===r.appDefinition.externalId.toLowerCase()&&!r.appDefinition.tenantId)return n.appDefinition.id=r.appDefinition.id,(e.enableSideloadAppByZip?e.appsService.updateUserAppDefinitionFromZip(n.appDefinition.id,o):e.appsService.updateUserAppDefinition(n.appDefinition)).then(function(){e.alreadyAddedToPersonalScope=!0,e.userInstalledAppDefinition={appDefinition:n.appDefinition}})}return(e.enableSideloadAppByZip?e.appsService.createUserAppDefinitionFromZip(o):e.appsService.createUserAppDefinition(n.appDefinition)).then(function(t){e.alreadyAddedToPersonalScope=!0,e.userInstalledAppDefinition={appDefinition:t}})})},e.prototype.sideloadAppForChat=function(){var e=this,t=this.appsService.getInstalledAppsForGroupChat(this.chatId),n=_.cloneDeep(this.app),a=[];this.enableSideloadAppByZip||(0===n.appDefinition.smallImageUrl.indexOf("data:")&&a.push(this.uploadBase64DataIcon(n.appDefinition.smallImageUrl,"groupchatScope").then(function(e){return n.appDefinition.smallImageUrl=e})),0===n.appDefinition.largeImageUrl.indexOf("data:")&&a.push(this.uploadBase64DataIcon(n.appDefinition.largeImageUrl,"groupchatScope").then(function(e){return n.appDefinition.largeImageUrl=e})));var i=this.enableSideloadAppByZip?this.extensionManifestService.getZipStreamPromise(this.$scope.ngDialogData.file):this.$q.resolve();return this.$q.all([t,i].concat(a)).then(function(t){for(var a=n.appDefinition.externalId.toLowerCase(),i=t[0],o=t[1],s=0;s<i.length;s++){var r=i[s].appDefinition;if(teamspace.services.AppsServiceUtils.isAppInstalled(i[s])&&r.externalId&&a===r.externalId.toLowerCase())return n.appDefinition.id=r.id,(e.enableSideloadAppByZip?e.appsService.updateGroupChatAppDefinitionFromZip(e.chatId,n.appDefinition.id,o):e.appsService.updateGroupChatAppDefinition(e.chatId,n.appDefinition)).then(function(){e.alreadyAddedToGroupChat=!0,e.groupChatInstalledAppDefinition=n})}return(e.enableSideloadAppByZip?e.appsService.createGroupChatAppDefinitionFromZip(e.chatId,o):e.appsService.createGroupChatAppDefinition(e.chatId,n.appDefinition)).then(function(t){e.alreadyAddedToGroupChat=!0,e.groupChatInstalledAppDefinition={appDefinition:t}})})},e.prototype.completeInstallation=function(e,t,n){var a,i,o=this;e?(a=this.teamInstalledAppDefinition,i="teamScope"):t?(a=this.userInstalledAppDefinition,i="personalScope"):n&&(a=this.groupChatInstalledAppDefinition,i="groupchatScope");var s,r=a.appDefinition.bots&&a.appDefinition.bots.length>0&&this.constants.bots.keyPrefix+a.appDefinition.bots[0].id;if(t&&r){var p=this.conversationsService.getChatConversationWith(r);s=this.conversationsService.ensureConversationCreated(p.id)}else s=this.$q.resolve(null);s.then(function(){o.wait=!1,o.createScenarioTeam&&(o.createScenarioTeam.stop(o.getScenarioEventData()),o.createScenarioTeam=void 0),o.createScenarioPersonal&&(o.createScenarioPersonal.stop(o.getScenarioEventData()),o.createScenarioPersonal=void 0),o.createScenarioGroupChat&&(o.createScenarioGroupChat.stop(o.getScenarioEventData()),o.createScenarioGroupChat=void 0);var e={installSucceeded:!0,botMri:r,botDisplayName:a.appDefinition.name,appId:a.appDefinition.id};o.eventingService.$emit(o.constants.events.app.installed,{result:e}),o.skipInstalledSuccess?o.closeDialogAndCallback(e,i):o.goToPostInstallDialog(i)}).catch(function(e){o.onError(e)})},e.prototype.goToPostInstallDialog=function(e){var t,n;switch(e){case"teamScope":t=this.teamInstalledAppDefinition||{appDefinition:this.app.appDefinition},n=teamspace.components.AddAppDialogIntent.Team;break;case"personalScope":t=this.userInstalledAppDefinition||{appDefinition:this.app.appDefinition},n=teamspace.components.AddAppDialogIntent.User,this.dispatchANewAppInstalledAction(this.app);break;case"groupchatScope":t=this.groupChatInstalledAppDefinition||{appDefinition:this.app.appDefinition},n=teamspace.components.AddAppDialogIntent.GroupChat;break;default:t={appDefinition:this.app.appDefinition},n=teamspace.components.AddAppDialogIntent.Ambiguous}this.dialogService.openLazyDialog(this.constants.lazyDialogs.appInstalledV2,this.constants.lazyModules.extensibilityDialogs,{app:t,autoNavigationOnDone:this.autoNavigationOnDone,teamId:this.teamId,chatId:this.chatId,messageId:this.messageId,teamName:this.teamName,channelId:this.channelId,dialogIntent:n,botMri:t.appDefinition.bots&&t.appDefinition.bots.length>0?this.constants.bots.keyPrefix+t.appDefinition.bots[0].id:void 0,preselectChannel:this.preselectChannel,category:this.category,storeLaunchFromChat:this.storeLaunchFromChat}),this.$scope.closeThisDialog()},e.prototype.upgrade=function(){var e=this;if(this.enableAppUpgradeNotification){this.upgradeScenario=this.loggingService.newScenario(this.constants.scenarios.extensibility.apps.addAppDialog.consent);var t;if(this.dialogIntent==teamspace.components.AddAppDialogIntent.User)t=this.appsService.upgradeUserAppEntitlement(this.app.appDefinition);else if(this.dialogIntent==teamspace.components.AddAppDialogIntent.Team)t=this.appsService.upgradeTeamAppEntitlement(this.teamId,this.app.appDefinition);else if(this.dialogIntent==teamspace.components.AddAppDialogIntent.TeamAndUser)t=this.$q.all([this.appsService.upgradeUserAppEntitlement(this.app.appDefinition),this.appsService.upgradeTeamAppEntitlement(this.teamId,this.app.appDefinition)]);else{if(this.dialogIntent!=teamspace.components.AddAppDialogIntent.GroupChat)return void this.onError("Add App Dialog intent missing!");t=this.appsService.upgradeChatAppEntitlement(this.chatId,this.app.appDefinition)}this.wait=!0,this.evaluateApproveButtonEnabled(),t.then(function(){e.wait=!1,e.upgradeScenario.stop(i({},e.getScenarioEventData(),{teamId:e.teamId,intent:e.dialogIntent})),e.$scope.closeThisDialog({upgradeSucceeded:!0})}).catch(function(t){e.onError(t)})}},e.prototype.dispatchANewAppInstalledAction=function(e){(this.hasPersonalScope(this.app.appDefinition.staticTabs)||this.hasPersonalScope(this.app.appDefinition.bots))&&this.userAppsDispatcher.dispatch({actionType:teamspace.services.userApp.UserAppsActionTypes.NOTIFY_APP,payload:e.appDefinition.id})},e.prototype.toggleDisabledForInstallButton=function(){var e=angular.element($("button[data-tid='addAppDialog-approve']"));e&&(this.showLoadingButton=!this.showLoadingButton,e.attr("disabled")?e.removeAttr("disabled"):e.attr("disabled","disabled"))},e.prototype.uploadBase64DataIcon=function(e,t){for(var n=e.indexOf(","),a=atob(e.substring(n+1)),i=a.length,o=new Uint8Array(new ArrayBuffer(i)),s=0;s<i;s++)o[s]=a.charCodeAt(s);return a?"teamScope"==t?this.uploadIcon(this.teamId,o):"personalScope"==t?this.uploadIcon(this.sxConfig.getCurrentSkypeMri(),o):"groupchatScope"==t?this.uploadIcon(this.chatId,o):this.$q.reject("Can't upload in specified scope"):this.$q.reject("Icon format error")},e.prototype.uploadIcon=function(e,t){var n=this,a={containerId:e};return this.filesAsyncMediaService.uploadItem(a,t).then(function(e){return n.$q.resolve(e.fullsizeUrl)}).catch(function(e){return n.logError("Icon upload error",JSON.stringify(e)),n.$q.reject("Icon upload error:"+JSON.stringify(e))})},e.prototype.teamSelected=function(){-1!=this.selectedTeamIndex&&this.teams[this.selectedTeamIndex]&&this.teams[this.selectedTeamIndex].type==teamspace.components.SelectorItemType.Team&&(this.teamId=this.teams[this.selectedTeamIndex].teamId,this.teamName=this.teams[this.selectedTeamIndex].text,this.isTeamAppInstallDisabled=!this.teams[this.selectedTeamIndex].installAppEnabled),this.updateButtonStateBasedOnSelectedTeam()},e.prototype.updateInstallButtonState=function(){var e,t;if(this.appHasPersonalScope&&this.shouldShowPersonalInstallOption&&(this.appHasTeamScope&&this.shouldShowTeamInstallOption||this.enableInstallChatAppsFromStore&&this.appHasGroupChatScope&&this.shouldShowGroupChatInstallOption))e=this.personalToggleSwitchDisabled&&this.teamToggleSwitchDisabled,this.enableInstallChatAppsFromStore&&this.isChatSelected&&(e=e||this.personalToggleSwitchDisabled&&this.chatToggleSwitchDisabled),t=!this.alreadyAddedToPersonalScope&&(this.appHasTeamScope&&!this.alreadyAddedToTeam||this.enableInstallChatAppsFromStore&&this.appHasGroupChatScope&&!this.alreadyAddedToGroupChat)?this.teamId&&this.appHasTeamScope?!this.togglePersonalInstall&&!this.toggleTeamInstall:this.chatId&&this.appHasGroupChatScope?!this.togglePersonalInstall&&!this.toggleChatInstall:!this.togglePersonalInstall||(this.toggleTeamInstall||this.toggleChatInstall):this.alreadyAddedToPersonalScope?this.teamId&&this.appHasTeamScope?!this.toggleTeamInstall:!this.chatId||!this.appHasGroupChatScope||!this.toggleChatInstall:!this.togglePersonalInstall;else if(this.appHasTeamScope&&this.shouldShowTeamInstallOption||this.enableInstallChatAppsFromStore&&this.appHasGroupChatScope&&this.shouldShowGroupChatInstallOption){var n=this.teamId&&this.appHasTeamScope&&!this.teamToggleSwitchDisabled,a=this.chatId&&this.appHasGroupChatScope&&!this.chatToggleSwitchDisabled;e=!(n||a),t=this.teamId&&this.appHasTeamScope?!this.toggleTeamInstall:!this.chatId||!this.appHasGroupChatScope||!this.toggleChatInstall}else this.appHasPersonalScope&&this.shouldShowPersonalInstallOption?(e=this.personalToggleSwitchDisabled,t=!this.togglePersonalInstall):!this.enableInstallChatAppsFromStore&&this.appHasGroupChatScope&&this.shouldShowGroupChatInstallOption?(e=!1,t=!1):(t=!0,this.loggingService.error("No install option available: "+JSON.stringify({appHasPersonalScope:this.appHasPersonalScope,appHasGroupChatScope:this.appHasGroupChatScope,appHasTeamScope:this.appHasTeamScope,installOptionFlags:this.installOptionFlags})));this.footerButtons[0].disabled=(e||t)&&this.dialogAction!=teamspace.components.AddAppDialogAction.View&&this.dialogAction!=teamspace.components.AddAppDialogAction.Consent},e.prototype.closeDialogAndCallback=function(e,t){var n=this;if(this.skipInstalledSuccess&&this.eventingService.$emit(this.constants.events.app.closeGallery),this.$scope.closeThisDialog(e),this.autoNavigationOnDone)switch(t){case"teamScope":this.teamId&&this.navigationService.navigateToTeam(this.teamId,this.navCtx);break;case"personalScope":if(e.botMri){var a=this.conversationsService.getChatConversationWith(e.botMri);this.conversationsService.ensureConversationCreated(a.id).then(function(e){n.navigateToUserApp()}).catch(function(t){n.navigationService.navigateToChat(a.id,n.navCtx),n.logError("Failed to create real conversation for bot "+e.botMri,t)})}else this.navigateToUserApp();break;case"groupchatScope":this.chatId&&this.navigationService.navigateToChat(this.chatId,this.navCtx)}this.wait=!1},e.prototype.evaluateApproveButtonEnabled=function(){this.dialogAction===teamspace.components.AddAppDialogAction.View||this.appsService.isSideloadedApp(this.app.appDefinition)||(this.alreadyAddedToTeam=this.alreadyAddedToTeam||this.isTeamAppInstallDisabled)},e.prototype.retrieveTeamId=function(){if(!this.teamId){var e=this.channelService.getCurrentTeamAndChannel();if(!e||!e.team)throw new Error("No current team found!");this.teamId=e.team.objectId}},e.prototype.navigateToUserApp=function(){var e=new teamspace.services.userApp.UserApp({appDefinition:this.app.appDefinition},!1);this.navigationService.navigateToUserApp(this.$scope,e)},e.prototype.checkAppDefinition=function(){if(!(this.app&&this.app.appDefinition&&this.app.appDefinition.name))throw new Error("Invalid App Definition Object!")},e.prototype.populateDialogContent=function(){var e=this;if(this.showTeamSelector&&this.areAllTypesPersonalOnly()&&(this.dialogIntent=teamspace.components.AddAppDialogIntent.User),this.appHasTeamScope=this.checkIfAppHasTeamScope(),this.appHasPersonalScope=this.checkIfAppHasPersonalScope(),this.appHasGroupChatScope=this.checkIfAppHasGroupChatScope(),this.appHasOnlyPersonalScope=this.checkIfAppHasOnlyPersonalScope(),this.appHasOnlyTeamOrChatScope=this.checkIfAppHasOnlyTeamOrChatScope(),this.alreadyAddedToTeam=!this.appHasTeamScope&&void 0,this.alreadyAddedToGroupChat=!this.appHasGroupChatScope&&void 0,this.appHasPersonalScope&&(this.togglePersonalInstall=!0,this.updateInstallButtonState()),this.setSectionsToCollapse(),this.enableInstallChatAppsFromStore?(this.populateChatAndTeamSelector(),this.populateAppCapabilities()):this.populateTeamSelector(),this.populatePermissionsInApp(),this.UpdateInstallOptionLabelForTeamOrChat(),this.screenshotUrls=this.app.appDefinition.screenshotUrls,this.app.appDefinition.videoUrl&&this.getVideoUrl(this.app.appDefinition.videoUrl),this.mediaSize=(this.screenshotUrls?this.screenshotUrls.length:0)+(this.videoUrl?1:0),this.isRightArrowVisible=this.mediaSize>1,this.enableAppScreenshots&&this.app.appDefinition.officeAssetId&&this.appsService.getOfficeStoreAppDetails(this.app.appDefinition.officeAssetId).then(function(t){t&&(e.screenshotUrls=t.screenshotUrls||[],t.videoUrl&&e.getVideoUrl(t.videoUrl),e.mediaSize=e.screenshotUrls.length+(e.videoUrl?1:0),e.isRightArrowVisible=!0,e.isLeftArrowVisible=!1,e.mediaSize<=1&&(e.isRightArrowVisible=!1))}),this.enableAppUpgradeNotification&&this.upgradeFlow){(this.dialogIntent==teamspace.components.AddAppDialogIntent.Team?this.appsService.getTeamAppDefinition(this.teamId,this.appID,"add-app-dialog-v2"):this.dialogIntent===teamspace.components.AddAppDialogIntent.GroupChat?this.appsService.getGroupChatAppDefinition(this.chatId,this.appID,"add-app-dialog-v2"):this.appsService.getUserAppDefinition(this.appID,"add-app-dialog-v2")).then(function(t){e.populateRequestedPermissions(t),e.app.appDefinition=t,e.wait=!1,e.evaluateApproveButtonEnabled(),e.hideContent=!1}).catch(function(t){e.onError(t)})}else this.wait=!1,this.evaluateApproveButtonEnabled(),this.hideContent=!1;this.viewScenario&&(this.viewScenario.stop(this.getScenarioEventData()),this.viewScenario=void 0)},e.prototype.populateTeamSelector=function(){var e=this;this.showTeamSelector?this.areAllTypesPersonalOnly()||(this.channelService.getTeams().then(function(t){var n=e.teams.length;t.sort(e.compare.bind(e)),t.forEach(function(t){if(!e.settingsService.valueAsBoolean(e.constants.settings.names.enableTeamArchive)||!t.isArchived){var a=e.conversationsService.getConversation(t.objectId),i=a?a.threadProperties[SkypeX.Services.ChatServiceUtils.ThreadProp_Picture]:null;i=i?i+e.constants.amsImageTemplate.thumbnail:null;var o=e.teamMembershipPropertiesService.isAdmin(t.objectId),s=e.teamSettingsService.canAddApp(t.objectId),r=void 0===o||void 0===s||(o||s),p={type:teamspace.components.SelectorItemType.Team,index:n,teamId:t.objectId,text:t.displayName,channels:[],installAppEnabled:r,teamPicture:i,groupId:t.siteInfo.groupId,thumbnailUri:t.thumbnailUri,pictureETag:t.pictureETag,smtpAddress:t.smtpAddress};e.preselectTeam===t.objectId&&(e.selectedTeamIndex=n),e.teams.push(p),n++}}),e.teamSelected()}),setTimeout(function(){teamspace.common.SafeJQuery.on(e.$scope,$("#ts-add-app-dialog-dropdown"),e.constants.events.dropdownSelect.show,function(t){e.emptySpaceVisible=!0}),teamspace.common.SafeJQuery.on(e.$scope,$("#ts-add-app-dialog-dropdown"),e.constants.events.dropdownSelect.hide,function(t){e.emptySpaceVisible=!1})})):(this.evaluateAppAlreadyInstalledInTeam().then(function(){e.isTeamAppInstallDisabled||e.evaluateApproveButtonEnabled()}),this.dialogIntent!=teamspace.components.AddAppDialogIntent.Team||this.preselectTeam||(this.toggleTeamInstall=!0),this.updateInstallButtonState())},e.prototype.populateChatAndTeamSelector=function(){var e=this;this.chatId&&this.appHasGroupChatScope?this.evaluateAppAlreadyInstalledInChat().then(function(){e.evaluateApproveButtonEnabled()}):this.teamId&&this.appHasTeamScope?this.evaluateAppAlreadyInstalledInTeam().then(function(){e.isTeamAppInstallDisabled||e.evaluateApproveButtonEnabled()}):this.appHasPersonalScope&&!this.alreadyAddedToPersonalScope?this.toggleTeamInstall=!1:this.toggleTeamInstall=!0,this.dialogIntent!=teamspace.components.AddAppDialogIntent.Team||this.preselectTeam||(this.toggleTeamInstall=!0),this.dialogIntent!=teamspace.components.AddAppDialogIntent.GroupChat||this.preselectChat||(this.toggleChatInstall=!0),this.updateInstallButtonState()},e.prototype.setSectionsToCollapse=function(){this.isPrivateAndPermissionsCollapsed=!0,this.alreadyAddedToPersonalScope&&(this.isPersonalCapabilityCollapsed=!0),this.viewOnlyDialog&&(this.isTeamCapabilityCollapsed=!0)},e.prototype.populatePermissionsInApp=function(){this.permissions.length=0,this.$window.desktopSettings&&this.$window.desktopSettings.devicePermissionsEnabledV2&&this.app.appDefinition.devicePermissions&&this.populateDevicePermissions(),this.populatePermissionStrings("extension_addAppDialogBasicPermission1",teamspace.components.PermissionMapPersonalScope),this.populatePermissionStrings("extension_addAppDialogBasicPermission2",teamspace.components.PermissionMapPersonalScope),this.populatePermissionStrings("extension_addAppDialogIdentityPermission1",teamspace.components.PermissionMapPersonalScope),1==this.installedAppCapabilities.length&&this.installedAppCapabilities.includes("bots")&&this.dialogIntent==teamspace.components.AddAppDialogIntent.User||(this.enableInstallChatAppsFromStore?this.appHasTeamScope&&this.appHasGroupChatScope?(this.populatePermissionStrings("extension_addAppDialogTeamAndChatPermission1",teamspace.components.PermissionMapTeamAndChatScope),this.populatePermissionStrings("extension_addAppDialogTeamAndChatPermission2",teamspace.components.PermissionMapTeamAndChatScope),this.populatePermissionStrings("extension_addAppDialogIdentityTeamAndChatPermission",teamspace.components.PermissionMapTeamAndChatScope)):this.appHasTeamScope?(this.populatePermissionStrings(r,teamspace.components.PermissionMapTeamScope),this.populatePermissionStrings(p,teamspace.components.PermissionMapTeamScope),this.populatePermissionStrings(l,teamspace.components.PermissionMapTeamScope)):this.appHasGroupChatScope&&(this.populatePermissionStrings("extension_addAppDialogChatPermission1",teamspace.components.PermissionMapChatScope),this.populatePermissionStrings("extension_addAppDialogChatPermission2",teamspace.components.PermissionMapChatScope),this.populatePermissionStrings("extension_addAppDialogIdentityChatPermission",teamspace.components.PermissionMapChatScope)):(this.populatePermissionStrings(r,teamspace.components.PermissionMapTeamScope),this.populatePermissionStrings(p,teamspace.components.PermissionMapTeamScope),this.populatePermissionStrings(l,teamspace.components.PermissionMapTeamScope))),this.handleSpecialFlowPermission()},e.prototype.populateRequestedPermissions=function(e){if(this.enableAppUpgradeNotification&&angular.isDefined(e)){var t=this.findAppCapabilities(e);this.requestedPermissions=[],this.populateRequestedPermissionStrings("extension_addAppDialogBasicPermission1",teamspace.components.PermissionMapPersonalScope,t),this.populateRequestedPermissionStrings("extension_addAppDialogBasicPermission2",teamspace.components.PermissionMapPersonalScope,t),this.populateRequestedPermissionStrings("extension_addAppDialogIdentityPermission1",teamspace.components.PermissionMapPersonalScope,t),1==this.installedAppCapabilities.length&&this.installedAppCapabilities.includes("bots")&&this.dialogIntent==teamspace.components.AddAppDialogIntent.User||(this.enableInstallChatAppsFromStore?this.appHasTeamScope&&this.appHasGroupChatScope?(this.populateRequestedPermissionStrings("extension_addAppDialogTeamAndChatPermission1",teamspace.components.PermissionMapTeamAndChatScope,t),this.populateRequestedPermissionStrings("extension_addAppDialogTeamAndChatPermission2",teamspace.components.PermissionMapTeamAndChatScope,t),this.populateRequestedPermissionStrings("extension_addAppDialogIdentityTeamAndChatPermission",teamspace.components.PermissionMapTeamAndChatScope,t)):this.appHasTeamScope?(this.populateRequestedPermissionStrings(r,teamspace.components.PermissionMapTeamScope,t),this.populateRequestedPermissionStrings(p,teamspace.components.PermissionMapTeamScope,t),this.populateRequestedPermissionStrings(l,teamspace.components.PermissionMapTeamScope,t)):this.appHasGroupChatScope&&(this.populateRequestedPermissionStrings("extension_addAppDialogChatPermission1",teamspace.components.PermissionMapChatScope,t),this.populateRequestedPermissionStrings("extension_addAppDialogChatPermission2",teamspace.components.PermissionMapChatScope,t),this.populateRequestedPermissionStrings("extension_addAppDialogIdentityChatPermission",teamspace.components.PermissionMapChatScope,t)):(this.populateRequestedPermissionStrings(r,teamspace.components.PermissionMapTeamScope,t),this.populateRequestedPermissionStrings(p,teamspace.components.PermissionMapTeamScope,t),this.populateRequestedPermissionStrings(l,teamspace.components.PermissionMapTeamScope,t)))}},e.prototype.findAppCapabilities=function(e){if(!angular.isDefined(e))return[];var t=[];return c.forEach(function(n){e[n]&&t.push(n)}),t},e.prototype.populateDevicePermissions=function(){var e=this;(this.installedAppCapabilities.includes("staticTabs")||this.installedAppCapabilities.includes("galleryTabs"))&&this.app.appDefinition.devicePermissions.forEach(function(t){switch(t){case e.constants.deviceTypeForAppPermission.media:e.permissions.push(e.$translate.instant(e.resources.strings.extension_addAppDialogDeviceConsent));break;case e.constants.deviceTypeForAppPermission.geolocation:e.permissions.push(e.$translate.instant(e.resources.strings.extension_addAppDialogLocationConsent));break;case e.constants.deviceTypeForAppPermission.notifications:e.permissions.push(e.$translate.instant(e.resources.strings.extension_addAppDialogNotificationsConsent));break;case e.constants.deviceTypeForAppPermission.openExternal:e.permissions.push(e.$translate.instant(e.resources.strings.extension_addAppDialogExternalLinkContent));break;case e.constants.deviceTypeForAppPermission.midi:e.permissions.push(e.$translate.instant(e.resources.strings.extension_addAppDialogMIDIContent))}})},e.prototype.onAppDefinitionRetrieved=function(e,t){var n=this;try{this.app={appDefinition:e,appEntitlement:t},this.checkAppDefinition(),this.showDialogLoadingSpinner=!1,this.hasBots=this.app.appDefinition.bots&&this.app.appDefinition.bots.length>0,this.hasPersonalStaticTab=this.hasPersonalScope(this.app.appDefinition.staticTabs),this.appIsSideloaded=this.appsService.isSideloadedApp(this.app.appDefinition),this.supportedLanguages=_(this.app.appDefinition.supportedLanguages).map(function(e){return n.getLanguageForCode(e)}).uniq().sort().filter(function(e){return!!e}).value(),this.app.appDefinition.inputExtensions&&this.app.appDefinition.inputExtensions.length>0&&(this.app.appDefinition.inputExtensions[0].scopes=[this.constants.extensibility.apps.appScopes.personal,this.constants.extensibility.apps.appScopes.team]),this.installedAppCapabilities.length=0,this.installedAppCapabilities=this.findAppCapabilities(this.app.appDefinition),this.populateDialogContent()}catch(e){this.onError(e)}},e.prototype.compare=function(e,t){return e.displayName&&t.displayName?e.displayName.toLocaleLowerCase()<t.displayName.toLocaleLowerCase()?-1:1:-1},e.prototype.populatePermissionStrings=function(e,t){for(var n=0;n<t[e].length;n++)if(this.installedAppCapabilities.includes(t[e][n])){this.permissions.push(this.$translate.instant(this.resources.strings[e]));break}},e.prototype.populateRequestedPermissionStrings=function(e,t,n){if(this.enableAppUpgradeNotification){var a=this.$translate.instant(this.resources.strings[e]);if(!this.permissions.includes(a))for(var i=0;i<t[e].length;i++)if(n.includes(t[e][i])&&!this.installedAppCapabilities.includes(t[e][i])){this.requestedPermissions.push(this.$translate.instant(this.resources.strings[e]));break}}},e.prototype.onError=function(e,t){if(this.wait=!1,this.showDialogLoadingSpinner=!1,this.toggleDisabledForInstallButton(),e&&e.data&&"NoPermissionToInstallApp"===e.data.errorCode?this.inlineMessage=this.$translate.instant(this.resources.strings.extension_addAppDialogTeamDisabled):e&&e.data&&e.data.errorCode===this.constants.extensibility.apps.errorCodes.appSideloadingForbidden?this.inlineMessage=this.$translate.instant(this.resources.strings.extension_appSideloadingForbiddenErrorMessage):this.inlineMessage=this.$translate.instant(t||this.resources.strings.extension_addAppDialogErrorMessage),this.footerButtons&&this.footerButtons.length>1&&(this.footerButtons[1].disabled=!0),this.viewScenario&&(this.viewScenario.fail(i({},this.getScenarioEventData(),{error:e,error1:e})),this.viewScenario=void 0),this.createScenarioTeam&&(this.createScenarioTeam.fail(i({},this.getScenarioEventData(),{error:e,error1:e})),this.createScenarioTeam=void 0),this.createScenarioPersonal&&(this.createScenarioPersonal.fail(i({},this.getScenarioEventData(),{error:e,error1:e})),this.createScenarioPersonal=void 0),this.createScenarioGroupChat&&(this.createScenarioGroupChat.fail(i({},this.getScenarioEventData(),{error:e,error1:e})),this.createScenarioGroupChat=void 0),this.upgradeScenario&&(this.upgradeScenario.fail(i({},this.getScenarioEventData(),{teamId:this.teamId,intent:this.dialogIntent,error:e,error1:e})),this.upgradeScenario=void 0),e&&e.errorMessage){var n=this.$translate.instant(this.resources.strings.extension_addAppDialogErrorMessage),a=null;e.errorCode===this.constants.extensibility.apps.errorCodes.unableToParseTeamsAppManifest&&(n=this.$translate.instant(this.resources.strings.extension_addAppDialogManifestParsingErrorMessage),a=e.errorMessage),this.dialogService.openLazyDialog(this.constants.lazyDialogs.manifestError,this.constants.lazyModules.extensibilityDialogs,{errorMessage:n,errorDetails:a}),this.$scope.closeThisDialog()}this.logError("Something went wrong in add app dialog",e)},e.prototype.shouldShowTruncate=function(){var e=document.getElementsByClassName("ts-add-app-dialog-header-text-long-description")[0];return e.scrollHeight>e.clientHeight},e.prototype.logError=function(e,t){this.logger||(this.logger=this.loggingService.newLogger("AddAppDialog")),this.logger.error("{0}: {1}",e,t)},e.prototype.areAllTypesPersonalOnly=function(){var e=this,t=!0;return c.forEach(function(n){e.app.appDefinition[n]&&(t=t&&e.isPersonalScopeOnly(e.app.appDefinition[n]))}),t},e.prototype.isPersonalScopeOnly=function(e){return!!(e&&e.length>0)&&_.every(e,function(e){return!!(e.scopes&&e.scopes.length>0)&&_.every(e.scopes,function(e){return"Personal"===e})})},e.prototype.hasPersonalScope=function(e){return!!(e&&e.length>0)&&_.some(e,function(e){return!!(e.scopes&&e.scopes.length>0)&&_.some(e.scopes,function(e){return"Personal"===e})})},e.prototype.hasTeamScope=function(e){return!!(e&&e.length>0)&&_.every(e,function(e){return!!(e.scopes&&e.scopes.length>0)&&_.some(e.scopes,function(e){return"Team"===e})})},e.prototype.checkIfAppHasPersonalScope=function(){var e=this,t=!1;return c.forEach(function(n){e.app.appDefinition[n]&&(t=t||e.hasPersonalScope(e.app.appDefinition[n]))}),t},e.prototype.checkIfAppHasTeamScope=function(){var e=this,t=!1;return c.some(function(n){if(e.app.appDefinition[n]&&1==e.hasTeamScope(e.app.appDefinition[n]))return t=!0}),t},e.prototype.checkIfAppHasGroupChatScope=function(){var e=this;return c.some(function(t){return e.app&&e.app.appDefinition[t]&&e.hasGroupChatScope(e.app.appDefinition[t])})},e.prototype.checkIfAppHasOnlyPersonalScope=function(){return this.appHasPersonalScope&&!this.appHasTeamScope&&!this.appHasGroupChatScope},e.prototype.checkIfAppHasOnlyTeamOrChatScope=function(){return!this.appHasPersonalScope&&(this.appHasTeamScope||this.appHasGroupChatScope)},e.prototype.hasGroupChatScope=function(e){return!!(e&&e.length>0)&&_.every(e,function(e){return!!(e.scopes&&e.scopes.length>0)&&_.some(e.scopes,function(e){return"GroupChat"===e})})},e.prototype.onItemSelected=function(e){e?e.type===teamspace.components.SelectorItemType.Team?this.processSelectedTeam(e):e.type===teamspace.components.SelectorItemType.Chat&&this.processSelectedChat(e):this.resetSelectedTeamOrChat()},e.prototype.logInstallAppActionForTelemetry=function(e,t){var n=this;_.defer(function(){var a={action:{gesture:teamspace.components.PanelActionGesture.click,outcome:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionOutcome.submit.toString(),teamspace.components.PanelActionOutcome,n.loggingService),scenario:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenario.addAppDialog.toString(),teamspace.components.PanelActionScenario,n.loggingService),scenarioType:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenarioType.appMgmt.toString(),teamspace.components.PanelActionScenarioType,n.loggingService)},module:{name:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelModuleName.addAppButton.toString(),teamspace.components.PanelModuleName,n.loggingService),type:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelModuleType.button.toString(),teamspace.components.PanelModuleType,n.loggingService),summary:"Consent to add an app"},app:i({},n.getAppInformationForTelemetry(t),{scope:_.sumBy(e),scenarioCapability:teamspace.components.PanelAppScenarioCapability.na}),team:{id:n.toggleTeamInstall?n.teamId:null}};t&&t.appDefinition&&!_.isEmpty(t.appDefinition.bots)&&(a.bot={id:t.appDefinition.bots[0].id}),n.sendPanelAction(a)})},e.prototype.logViewAppActionForTelemetry=function(e,t,n){var a=this;_.defer(function(){var o={action:{gesture:teamspace.components.PanelActionGesture.click,outcome:teamspace.shared.AttributeHelper.tryGetEnum(void 0!==n?teamspace.components.PanelActionOutcome.show.toString():teamspace.components.PanelActionOutcome.closeDialog.toString(),teamspace.components.PanelActionOutcome,a.loggingService),scenario:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenario.addAppDialog.toString(),teamspace.components.PanelActionScenario,a.loggingService),scenarioType:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenarioType.appMgmt.toString(),teamspace.components.PanelActionScenarioType,a.loggingService)},module:{name:teamspace.shared.AttributeHelper.tryGetEnum(void 0!==n?teamspace.components.PanelModuleName.openAddAppDialogImage.toString():t===teamspace.components.AddAppDialogAction.View?teamspace.components.PanelModuleName.okButton.toString():teamspace.components.PanelModuleName.closeAddAppDialog.toString(),teamspace.components.PanelModuleName,a.loggingService),type:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelModuleType.button.toString(),teamspace.components.PanelModuleType,a.loggingService),summary:void 0!==n?"Click the image in the consent dialog":"Ok and close the consent dialog"},app:i({},a.getAppInformationForTelemetry(e,n),{scope:teamspace.components.PanelAppScope.team,scenarioCapability:teamspace.components.PanelAppScenarioCapability.na})};a.sendPanelAction(o)})},e.prototype.getAppInformationForTelemetry=function(e,t){var n=e?teamspace.components.AppAnalyticsHelper.getAppAnalyticsData(e,this.toggleTeamInstall&&this.teamId,this.channelId):{};return this.$scope.ngDialogData.source&&(n.source=this.$scope.ngDialogData.source),this.$scope.ngDialogData.deepLinkSource&&(n.deepLinkSource=this.$scope.ngDialogData.deepLinkSource),n.hasScreenshots=this.mediaSize>0,void 0!==t&&(n.imageIndex=t),n},e.prototype.sendPanelAction=function(e){var t=this;this.analyticsService.getAnalyticsPanelActionEventData(e).then(function(e){t.analyticsService.sendPanelAction(e)})},e.prototype.getScenarioEventData=function(){return this.app&&this.app.appDefinition?{appId:this.app.appDefinition.id,externalId:this.app.appDefinition.externalId,tenantId:this.app.appDefinition.tenantId}:null},e.prototype.processSelectedTeam=function(e){this.isChatSelected=!1,this.chatId=null,this.teamId=e.teamId,this.teamName=e.text,this.isTeamAppInstallDisabled=!e.installAppEnabled,this.updateButtonStateBasedOnSelectedTeam()},e.prototype.processSelectedChat=function(e){this.isChatSelected=!0,this.teamId=null,this.chatId=e.id,this.updateButtonStateBasedOnSelectedChat()},e.prototype.resetSelectedTeamOrChat=function(){this.isChatSelected=!!this.preselectChat,this.chatId=null,this.teamId=null,this.alreadyAddedToGroupChat=!1,this.alreadyAddedToTeam=!1,this.isTeamAppInstallDisabled=!1,this.updateInstallButtonState(),this.populateAppCapabilities()},e.prototype.updateButtonStateBasedOnSelectedTeam=function(){var e=this;void 0!=this.teamId?this.evaluateAppAlreadyInstalledInTeam().then(function(){e.isTeamAppInstallDisabled||e.evaluateApproveButtonEnabled(),e.isTeamCapabilityCollapsed=!!e.teamToggleSwitchDisabled,e.isTeamAppInstallDisabled?e.toggleTeamInstall=!1:e.toggleTeamInstall=!0,e.updateInstallButtonState(),e.settingsService.valueAsBoolean(e.constants.settings.names.enableDeferredOrchestration)&&e.settingsService.valueAsBoolean(e.constants.settings.names.initializeAggEntitlementsPostALT)&&e.$scope.$apply()}):(this.evaluateApproveButtonEnabled(),this.toggleTeamInstall=!0,this.updateInstallButtonState()),this.populatePermissionsInApp(),this.populateAppCapabilities()},e.prototype.updateButtonStateBasedOnSelectedChat=function(){var e=this;void 0!=this.chatId?this.evaluateAppAlreadyInstalledInChat().then(function(){e.toggleChatInstall=!0,e.updateInstallButtonState(),e.settingsService.valueAsBoolean(e.constants.settings.names.enableDeferredOrchestration)&&e.settingsService.valueAsBoolean(e.constants.settings.names.initializeAggEntitlementsPostALT)&&e.$scope.$apply()}):(this.toggleChatInstall=!0,this.updateInstallButtonState()),this.populatePermissionsInApp(),this.populateAppCapabilities()},e.prototype.evaluateAppAlreadyInstalledInTeam=function(){var e=this;return this.appsService.isSideloadedApp(this.app.appDefinition)?(this.dialogAction==teamspace.components.AddAppDialogAction.View&&(this.alreadyAddedToTeam=!0,this.teamInstalledAppDefinition=this.app),this.$q.resolve()):this.appsService.getInstalledAppForTeam(this.teamId,this.app.appDefinition.id).then(function(t){e.alreadyAddedToTeam=!(!t||!t.isAppInstalled()),e.teamInstalledAppDefinition=e.alreadyAddedToTeam?t:null})},e.prototype.evaluateAppAlreadyInstalledInChat=function(){var e=this;return this.appsService.isSideloadedApp(this.app.appDefinition)?(this.dialogAction==teamspace.components.AddAppDialogAction.View&&(this.alreadyAddedToGroupChat=!0,this.groupChatInstalledAppDefinition=this.app),this.$q.resolve()):this.appsService.getInstalledAppForGroupChat(this.chatId,this.app.appDefinition.id).then(function(t){e.alreadyAddedToGroupChat=!(!t||!teamspace.services.AppsServiceUtils.isAppInstalled(t)),e.groupChatInstalledAppDefinition=e.alreadyAddedToGroupChat?t:null})},e.prototype.populateAppCapabilities=function(){if(this.app.appDefinition){if(this.appCapabilities=[],this.app.appDefinition.bots&&this.app.appDefinition.bots.length>0&&(this.hasTeamScope(this.app.appDefinition.bots)||this.hasGroupChatScope(this.app.appDefinition.bots))){var e=this.createAppCapability("svg/icons-bot.html",this.$translate.instant(this.resources.strings.extension_addAppDialog_bot_capability));this.appCapabilities.push(e)}if((this.app.appDefinition.staticTabs&&this.app.appDefinition.staticTabs.length>0&&this.hasTeamScope(this.app.appDefinition.staticTabs)||this.app.appDefinition.galleryTabs&&this.app.appDefinition.galleryTabs.length>0&&this.hasTeamScope(this.app.appDefinition.galleryTabs))&&(!this.isChatSelected||!this.appHasGroupChatScope)){var t=this.createAppCapability("svg/icons-tab-badge.html",this.$translate.instant(this.resources.strings.extension_addAppDialog_tab_capability));this.appCapabilities.push(t)}if(this.app.appDefinition.galleryTabs&&this.app.appDefinition.galleryTabs.length>0&&this.hasGroupChatScope(this.app.appDefinition.galleryTabs)&&this.isChatSelected){var n=this.createAppCapability("svg/icons-tab-badge.html",this.$translate.instant(this.resources.strings.extension_addAppDialog_tab_capability_for_chat));this.appCapabilities.push(n)}if(this.app.appDefinition.connectors&&this.app.appDefinition.connectors.length>0&&this.hasTeamScope(this.app.appDefinition.connectors)&&(!this.isChatSelected||!this.appHasGroupChatScope)){var a=this.createAppCapability("svg/icons-connector-badge.html",this.$translate.instant(this.resources.strings.extension_addAppDialog_connector_capability));this.appCapabilities.push(a)}if(this.app.appDefinition.inputExtensions&&this.app.appDefinition.inputExtensions.length>0&&this.hasTeamScope(this.app.appDefinition.inputExtensions)&&(!this.isChatSelected||!this.appHasGroupChatScope)){var i=this.createAppCapability("svg/icons-compose-extension-badge.html",this.$translate.instant(this.resources.strings.extension_addAppDialog_compose_extension_capability));this.appCapabilities.push(i)}}},e.prototype.createAppCapability=function(e,t){return{icon:e,description:t}},e.prototype.UpdateInstallOptionLabelForTeamOrChat=function(){this.appHasTeamScope&&this.appHasGroupChatScope&&this.dialogIntent!=teamspace.components.AddAppDialogIntent.Team&&this.dialogIntent!=teamspace.components.AddAppDialogIntent.GroupChat?this.installOptionLabelForTeamOrChat=this.$translate.instant(this.resources.strings.extension_addAppDialog_add_to_a_team_or_chat):this.appHasGroupChatScope&&this.dialogIntent!=teamspace.components.AddAppDialogIntent.Team?this.installOptionLabelForTeamOrChat=this.$translate.instant(this.resources.strings.extension_addAppDialog_add_to_a_chat):this.installOptionLabelForTeamOrChat=this.$translate.instant(this.resources.strings.extension_addAppDialog_add_to_a_team)},e.prototype.handleSpecialFlowPermission=function(){this.userInstalledAppDefinition&&this.userInstalledAppDefinition.appDefinition&&this.userInstalledAppDefinition.appDefinition.id&&this.userInstalledAppDefinition.appDefinition.id.toLowerCase()===this.constants.extensibility.apps.appIds.flow&&this.permissions.push(this.$translate.instant(this.resources.strings.extension_addAppDialogPermissionMessageSendOrganization))},e}();t.AddAppNewDialogController=d,angular.module("teamspace.addAppDialogV2",["skypeX.sxConfig","skypeX.tenantSettingsStore","teamspace.appsService","teamspace.analyticsService","teamspace.channelService","teamspace.conversationsService","teamspace.dialogService","teamspace.services.dispatcher","teamspace.eventingService","teamspace.filesAsyncMediaService","teamspace.inputExtensionService","teamspace.loggingService","teamspace.navigationService","teamspace.settingsService","teamspace.teamMembershipPropertiesService","teamspace.teamSettingsService","teamspace.utilityService"]).run(["constants","dialogService","settingsService","$templateCache",function(e,t,n,a){var i=n.valueAsBoolean(e.settings.names.enableNewAppInstallFlowV3),s=n.valueAsBoolean(e.settings.names.enableBotsInGroupChat);i&&s||(a.put("components/extensibility/add-app-new-dialog/add-app-dialog-v2.html",o),t.register(e.lazyDialogs.addAppNew,{template:"components/extensibility/add-app-new-dialog/add-app-dialog-v2.html",className:"ts-modal-dialog custom-width ts-add-app-dialog-v2 new-dialog",closeByEscape:!0,closeByDocument:!0,preCloseCallback:function(e){var n=document.getElementsByClassName("ts-media-preview");if(n&&n.length)return!1;var a=t.optionsByDialogNames&&t.optionsByDialogNames.AddAppNew&&t.optionsByDialogNames.AddAppNew.registeredCallback;return!a||a(e)},ariaAuto:!1,ariaRole:"dialog",ariaLabelledById:"modalDialog-title"}))}]).controller("AddAppNewDialogController",d)},1842:function(e,t){e.exports='<div class="ts-add-app-dialog-container" ng-controller="AddAppNewDialogController as aadc" aria-modal="true" acc-role="dialog">\n  <modal-dialog ng-attr-hide-dialog-title="{{::aadc.viewOnlyDialog || undefined}}" footer-buttons="aadc.footerButtons" right-align-buttons="true" add-close-icon="::!aadc.viewOnlyDialog" suppress-default-button="true" data-tid="addAppDialog" dialog-title="{{::aadc && aadc.app && aadc.app.appDefinition ? aadc.app.appDefinition.name : \'\'}}" track-panel-type="{{$root.trackConstants.panelType.addAppDialogV2}}" skip-auto-focus="false">\n    <section class="ts-add-app-dialog-left-rail">\n      <section ng-if="!aadc.hideContent" class="ts-add-app-section-spacing-small">\n        <div class="ts-add-app-dialog-header">\n          <div class="image-container">\n            <div class="image" ng-style="{ \'background\': aadc.app.appDefinition.accentColor }">\n              <ng-include src="aadc.app.appDefinition.largeImageUrl" ng-if="::aadc.utilityService.useNgIncludeForIcon(aadc.app.appDefinition.largeImageUrl)"></ng-include>\n              <img role="img" alt="{{::($root.resources.strings.extensibility_app_icon_alt|translate:{appName:aadc.app.appDefinition.name})}}" aria-label="{{::($root.resources.strings.extensibility_app_icon_alt|translate:{appName:aadc.app.appDefinition.name})}}" ng-src="{{::aadc.app.appDefinition.largeImageUrl}}" fallback-src="{{::aadc.appFallbackIcon}}" ng-if="::!aadc.utilityService.useNgIncludeForIcon(aadc.app.appDefinition.largeImageUrl)"/>\n            </div>\n          </div>\n          <div class="ts-add-app-dialog-header-text" dir="auto">\n            <div class="ts-add-app-dialog-header-text-big">\n              <h1 ng-bind="::aadc.app.appDefinition.name"></h1>\n            </div>\n            \x3c!-- old description without see more--\x3e\n            <div ng-if="!aadc.enableAppDetailDialogV3 && !aadc.hideContent" class="ts-add-app-dialog-header-text-long-description">\n              <span ng-bind="::aadc.app.appDefinition.longDescription" title="{{::aadc.app.appDefinition.longDescription}}"></span>\n            </div>\n            \x3c!-- new description with see more--\x3e\n            <div ng-if="aadc.enableAppDetailDialogV3 && !aadc.hideContent" class="expandable ts-add-app-dialog-header-text-long-description" ng-class="{\'fullDescriptionShowed\': aadc.isFullDescriptionShowed}">\n              \x3c!-- Show full description --\x3e\n              <div class="description-scroll-wrapper" simple-scrollbar ng-if="aadc.isFullDescriptionShowed" scrollbar-ignore-firefox-adjust="true">\n                <div class="description-scroll-child">\n                  <span id="ts-add-app-dialog-app-full-description" class="truncate-description" title="{{::aadc.app.appDefinition.longDescription}}">\n                    {{::aadc.app.appDefinition.longDescription}}\n                  </span>\n                  <div class="view-less" ng-if="aadc.isFullDescriptionShowed">\n                    <a target="_blank" tabindex="0" id="add-app-dialog-view-less" acc-role="focus-default" aria-label="{{::$root.resources.strings.extension_addAppDialog_view_less_description_aria_label|translate}}" aria-describedby="ts-add-app-dialog-app-full-description" ng-click="aadc.toggleShowFullDescription(false)">\n                      {{::$root.resources.strings.extension_addAppDialog_view_less_description|translate}}\n                    </a>\n                  </div>\n                </div>\n\n              </div>\n              \x3c!-- Show truncated description --\x3e\n              <span ng-if="!aadc.isFullDescriptionShowed" id="ts-add-app-dialog-app-truncate-description" class="truncate-description" title="{{::aadc.app.appDefinition.longDescription}}">\n                {{::aadc.app.appDefinition.longDescription}}\n              </span>\n              <div class="view-more" ng-if="!aadc.isFullDescriptionShowed && aadc.shouldShowTruncate()">\n                <span aria-label="{{::$root.resources.strings.extension_addAppDialog_view_more_description_aria_label|translate}}" ng-click="aadc.toggleShowFullDescription(true)" translate-with-html-params translate-id="extension_addAppDialog_view_more_description"></span>\n                <span id="view-more-aria-label">{{::$root.resources.strings.extension_addAppDialog_view_more_description_aria_label|translate}}</span>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </section>\n      <div class="ts-add-app-dialog-container scroll-parent">\n        <div class="scroll-wrapper" simple-scrollbar scrollbar-ignore-firefox-adjust="true">\n          <div class="scroll-child">\n            <div class="personal-scope" ng-if="aadc.shouldShowPersonalInstallOption && aadc.appHasPersonalScope && !aadc.viewOnlyDialog">\n              <div class="ts-add-app-dialog-install-personal">\n                <div class="ts-add-app-dialog-install-left">\n                  <div class="expand-collapse inset-border inset-border-themed" role="button" name="{{::$root.resources.strings.extension_addAppDialog_add_for_you|translate}}" aria-expanded="{{!aadc.isPersonalCapabilityCollapsed}}" aria-labelledby="{{::$root.resources.strings.extension_addAppDialog_add_for_you|translate}}" tabindex="0" ng-click="aadc.expandCollapsePersonalCapabilities()">\n                    <div class="expand-collapse-icon icons-gray-06-triangle-fill">\n                      <ng-include ng-if="aadc.isPersonalCapabilityCollapsed" src="\'svg/icons-triangle-right-small.html\'"></ng-include>\n                      <ng-include ng-if="!aadc.isPersonalCapabilityCollapsed" src="\'svg/icons-triangle-down-small.html\'"></ng-include>\n                    </div>\n                    <span id="ts-add-app-dialog-expand-collapse-personal" translate-once="{{::$root.resources.strings.extension_addAppDialog_add_for_you}}"></span>\n                  </div>\n                </div>\n                <div class="ts-add-app-new-dialog-install-personal-button">\n                  <toggle-switch ds-aria-label="{{::$root.resources.strings.extension_addAppDialog_add_for_you|translate}}" ng-if="!aadc.appHasOnlyPersonalScope && !aadc.alreadyAddedToPersonalScope" is-checked="aadc.togglePersonalInstall" on-toggle="aadc.personalToggleChange(isChecked)" is-disabled="aadc.personalToggleSwitchDisabled">\n                    <div class="toggle-text" ng-if="aadc.togglePersonalInstall&&!aadc.personalToggleSwitchDisabled" translate-once="{{::$root.resources.strings.extension_addAppDialog_button_yes}}"></div>\n                    <div class="toggle-text" ng-if="!aadc.togglePersonalInstall&&!aadc.personalToggleSwitchDisabled" translate-once="{{::$root.resources.strings.extension_addAppDialog_button_no}}"></div>\n                  </toggle-switch>\n                  <a class="setup-text" ng-if="!aadc.enableAppDetailDialogV3 && aadc.alreadyAddedToPersonalScope" ng-click="aadc.goToPostInstallDialog(\'personalScope\')" ng-attr-title="{{::$root.resources.strings.extension_addAppDialog_button_set_up_tooltip|translate}}" href="javascript:void(0)">\n                    <span class="text" data-tid="setUp-App-Personal" translate-once="{{::$root.resources.strings.extension_addAppDialog_button_set_up}}"></span>\n                  </a>\n                  <button class="setup-text ts-btn ts-btn-secondary insert-border" data-tid="setUp-App-Personal" ng-if="aadc.enableAppDetailDialogV3 && aadc.alreadyAddedToPersonalScope" aria-label="{{::$root.resources.strings.extension_addAppDialog_button_open_tooltip|translate}}" ng-click="aadc.goToPostInstallDialog(\'personalScope\')">\n                     {{::$root.resources.strings.extension_addAppDialog_button_open|translate}}\n                  </button>\n                </div>\n              </div>\n              <div ng-if="!aadc.isPersonalCapabilityCollapsed" class="personal-capabilities">\n                <div ng-if="aadc.app.appDefinition.bots && aadc.app.appDefinition.bots.length > 0 && aadc.hasPersonalScope(aadc.app.appDefinition.bots)" class="ts-add-app-section-spacing-medium">\n                  <div class="badge-icon">\n                    <ng-include class="icon" src="\'svg/icons-bot.html\'"></ng-include>\n                  </div>\n                  <div class="app-info">\n                    <div class="ts-add-app-dialog-capability-decsription" translate-once="{{::$root.resources.strings.extension_addAppDialog_personal_bot_use}}"></div>\n                  </div>\n                </div>\n                <div ng-if="aadc.app.appDefinition.staticTabs && aadc.app.appDefinition.staticTabs.length > 0  && aadc.hasPersonalScope(aadc.app.appDefinition.staticTabs)" class="ts-add-app-section-spacing-medium">\n                  <div class="badge-icon">\n                    <ng-include class="icon" src="\'svg/icons-tab-badge.html\'"></ng-include>\n                  </div>\n                  <div class="app-info">\n                    <div class="ts-add-app-dialog-capability-decsription" translate-once="{{::$root.resources.strings.extension_addAppDialog_personal_tab_use}}"></div>\n                  </div>\n                </div>\n                <div ng-if="aadc.app.appDefinition.inputExtensions && aadc.app.appDefinition.inputExtensions.length > 0 && aadc.hasPersonalScope(aadc.app.appDefinition.inputExtensions)" class="ts-add-app-section-spacing-medium">\n                  <div class="badge-icon">\n                    <ng-include class="icon" src="\'svg/icons-compose-extension-badge.html\'"></ng-include>\n                  </div>\n                  <div class="app-info">\n                    <div class="ts-add-app-dialog-capability-decsription" translate-once="{{::$root.resources.strings.extension_addAppDialog_personal_compose_extension_use}}"></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div ng-if="::!aadc.enableInstallChatAppsFromStore">\n              <div class="team-scope" ng-if="aadc.shouldShowTeamInstallOption && aadc.appHasTeamScope">\n                <div ng-if="aadc.isTeamAppInstallDisabled" class="permission-error" translate-once="{{::$root.resources.strings.extension_addAppDialogTeamDisabled_message}}"></div>\n                <div class="ts-add-app-dialog-install-team">\n                  <div class="ts-add-app-dialog-install-left" aria-label="{{::$root.resources.strings.extension_addAppDialog_add_to_a_team|translate}}">\n                    <div class="expand-collapse inset-border inset-border-themed" role="button" aria-expanded="{{!aadc.isTeamCapabilityCollapsed}}" name="{{::$root.resources.strings.extension_addAppDialog_add_to_a_team|translate}}" aria-labelledby="{{::$root.resources.strings.extension_addAppDialog_add_to_a_team|translate}}" tabindex="0" ng-click="aadc.expandCollapseTeamCapabilities()">\n                      <div class="expand-collapse-icon icons-gray-06-triangle-fill">\n                        <ng-include ng-if="aadc.isTeamCapabilityCollapsed" src="\'svg/icons-triangle-right-small.html\'"></ng-include>\n                        <ng-include ng-if="!aadc.isTeamCapabilityCollapsed" src="\'svg/icons-triangle-down-small.html\'"></ng-include>\n                      </div>\n                      <span id="ts-add-app-dialog-expand-collapse-team" translate-once="{{::$root.resources.strings.extension_addAppDialog_add_to_a_team}}"> </span>\n                    </div>\n                    <div id="ts-add-app-dialog-dropdown">\n                      <dropdown-select ng-if="aadc.showTeamSelector" class="dropdown-select" data-tid="choose-teams" ds-placeholder="{{::$root.resources.strings.extension_addAppDialog_select_a_team|translate}}" ds-options="::aadc.teams" ds-text-field="text" ds-value-field="index" ds-selected-value="aadc.selectedTeamIndex" ds-highlight-selected-option="true" ds-always-show-in-bottom="true" ds-on-change="aadc.teamSelected()" ds-max-viewable-items="6">\n                      </dropdown-select>\n                    </div>\n                  </div>\n                  <div class="ts-add-app-dialog-install-team-button" ng-if="!aadc.upgradeFlow">\n                    <toggle-switch data-tid="toggle-Team" ds-aria-label="{{::$root.resources.strings.extension_addAppDialog_add_to_a_team|translate}}" ng-if="!aadc.appHasOnlyTeamOrChatScope && !aadc.alreadyAddedToTeam" is-checked="aadc.toggleTeamInstall" on-toggle="aadc.teamToggleChange(isChecked)" is-disabled="aadc.teamToggleSwitchDisabled || aadc.isTeamAppInstallDisabled">\n                      <div class="toggle-text" ng-if="aadc.toggleTeamInstall || aadc.teamToggleSwitchDisabled || aadc.isTeamAppInstallDisabled" translate-once="{{::$root.resources.strings.extension_addAppDialog_button_yes}}"></div>\n                      <div class="toggle-text" ng-if="!aadc.toggleTeamInstall&&!aadc.teamToggleSwitchDisabled && !aadc.isTeamAppInstallDisabled" translate-once="{{::$root.resources.strings.extension_addAppDialog_button_no}}"></div>\n                    </toggle-switch>\n                    <a class="setup-text" ng-if="!aadc.enableAppDetailDialogV3 && aadc.alreadyAddedToTeam && !aadc.isTeamArchived" ng-click="aadc.goToPostInstallDialog(\'teamScope\')" ng-attr-title="{{::$root.resources.strings.extension_addAppDialog_button_set_up_tooltip|translate}}" href="javascript:void(0)">\n                      <span class="text" data-tid="setUp-App-Team" translate-once="{{::$root.resources.strings.extension_addAppDialog_button_set_up}}"></span>\n                    </a>\n                    <button class="setup-text ts-btn ts-btn-secondary insert-border" data-tid="setUp-App-Team" ng-if="aadc.enableAppDetailDialogV3 && aadc.alreadyAddedToTeam && !aadc.isTeamArchived" aria-label="{{::$root.resources.strings.extension_addAppDialog_button_open_tooltip|translate}}" ng-click="aadc.goToPostInstallDialog(\'teamScope\')">\n                      {{::$root.resources.strings.extension_addAppDialog_button_open|translate}}\n                    </button>\n                  </div>\n                </div>\n                <div class="ts-add-app-dialog-install-team-capabilities" ng-if="!aadc.isTeamCapabilityCollapsed">\n                  <div ng-if="aadc.app.appDefinition.bots && aadc.app.appDefinition.bots.length > 0 && aadc.hasTeamScope(aadc.app.appDefinition.bots)" class="ts-add-app-section-spacing-medium">\n                    <div class="badge-icon">\n                      <ng-include class="icon" src="\'svg/icons-bot.html\'"></ng-include>\n                    </div>\n                    <div class="app-info">\n                      <div class="ts-add-app-dialog-capability-decsription" translate-once="{{::$root.resources.strings.extension_addAppDialog_bot_capability}}"></div>\n                    </div>\n                  </div>\n                  <div ng-if="(aadc.app.appDefinition.staticTabs && aadc.app.appDefinition.staticTabs.length > 0 && aadc.hasTeamScope(aadc.app.appDefinition.staticTabs)) || (aadc.app.appDefinition.galleryTabs && aadc.app.appDefinition.galleryTabs.length > 0 && aadc.hasTeamScope(aadc.app.appDefinition.galleryTabs))" class="ts-add-app-section-spacing-medium">\n                    <div class="badge-icon">\n                      <ng-include class="icon" src="\'svg/icons-tab-badge.html\'"></ng-include>\n                    </div>\n                    <div class="app-info">\n                      <div class="ts-add-app-dialog-capability-decsription" translate-once="{{::$root.resources.strings.extension_addAppDialog_tab_capability}}"></div>\n                    </div>\n                  </div>\n                  <div ng-if="aadc.app.appDefinition.connectors && aadc.app.appDefinition.connectors.length > 0 && aadc.hasTeamScope(aadc.app.appDefinition.connectors)" class="ts-add-app-section-spacing-medium">\n                    <div class="badge-icon">\n                      <ng-include class="icon" src="\'svg/icons-connector-badge.html\'"></ng-include>\n                    </div>\n                    <div class="app-info">\n                      <div class="ts-add-app-dialog-capability-decsription" translate-once="{{::$root.resources.strings.extension_addAppDialog_connector_capability}}"></div>\n                    </div>\n                  </div>\n                  <div ng-if="aadc.app.appDefinition.inputExtensions && aadc.app.appDefinition.inputExtensions.length > 0 && aadc.hasTeamScope(aadc.app.appDefinition.inputExtensions)" class="ts-add-app-section-spacing-medium">\n                    <div class="badge-icon">\n                      <ng-include class="icon" src="\'svg/icons-compose-extension-badge.html\'"></ng-include>\n                    </div>\n                    <div class="app-info">\n                      <div class="ts-add-app-dialog-capability-decsription" translate-once="{{::$root.resources.strings.extension_addAppDialog_compose_extension_capability}}"></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class="chat-scope" ng-if="aadc.enableSideloadedAppsInGroupChat && aadc.shouldShowGroupChatInstallOption && aadc.checkIfAppHasGroupChatScope()">\n                <div class="ts-add-app-dialog-install-team">\n                  <div class="ts-add-app-dialog-install-left" aria-label="{{::$root.resources.strings.extension_addAppDialog_add_to_a_chat|translate}}">\n                    <div class="expand-collapse inset-border inset-border-themed" role="button" name="{{::$root.resources.strings.extension_addAppDialog_add_to_a_chat|translate}}" aria-expanded="{{!aadc.isGroupChatCapabilityCollapsed}}" aria-labelledby="{{::$root.resources.strings.extension_addAppDialog_add_to_a_chat|translate}}" tabindex="0" ng-click="aadc.expandCollapseGroupChatCapabilities()">\n                      <div class="expand-collapse-icon icons-gray-06-triangle-fill">\n                        <ng-include ng-if="aadc.isGroupChatCapabilityCollapsed" src="\'svg/icons-triangle-right-small.html\'"></ng-include>\n                        <ng-include ng-if="!aadc.isGroupChatCapabilityCollapsed" src="\'svg/icons-triangle-down-small.html\'"></ng-include>\n                      </div>\n                      <span id="ts-add-app-dialog-expand-collapse-chat" translate-once="{{::$root.resources.strings.extension_addAppDialog_add_to_a_chat}}"> </span>\n                    </div>\n                  </div>\n                </div>\n                <div class="ts-add-app-dialog-install-chat-capabilities" ng-if="!aadc.isGroupChatCapabilityCollapsed">\n                  <div ng-if="(aadc.app.appDefinition.galleryTabs && aadc.app.appDefinition.galleryTabs.length > 0 && aadc.hasGroupChatScope(aadc.app.appDefinition.galleryTabs))" class="ts-add-app-section-spacing-medium">\n                    <div class="badge-icon">\n                      <ng-include class="icon" src="\'svg/icons-tab-badge.html\'"></ng-include>\n                    </div>\n                    <div class="app-info">\n                      <div class="ts-add-app-dialog-capability-decsription" translate-once="{{::$root.resources.strings.extension_addAppDialog_tab_capability}}"></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            \x3c!--New install option for a team or chat--\x3e\n            <div ng-if="::aadc.enableInstallChatAppsFromStore">\n              <div class="team-or-chat-scope" ng-if="aadc.shouldShowTeamOrChatInstallOption">\n                <div ng-if="aadc.isTeamAppInstallDisabled" class="permission-error" translate-once="{{::$root.resources.strings.extension_addAppDialogTeamDisabled_message}}"></div>\n                <div class="ts-add-app-dialog-install-team-or-chat">\n                  <div class="ts-add-app-dialog-install-left" aria-label="{{::aadc.installOptionLabelForTeamOrChat}}">\n                    <div class="expand-collapse inset-border inset-border-themed" role="button" aria-expanded="{{!aadc.isTeamCapabilityCollapsed}}" name="{{::aadc.installOptionLabelForTeamOrChat}}" aria-labelledby="{{::aadc.installOptionLabelForTeamOrChat}}" tabindex="0" ng-click="aadc.expandCollapseTeamCapabilities()">\n                      <div class="expand-collapse-icon icons-gray-06-triangle-fill">\n                        <ng-include ng-if="aadc.isTeamCapabilityCollapsed" src="\'svg/icons-triangle-right-small.html\'"></ng-include>\n                        <ng-include ng-if="!aadc.isTeamCapabilityCollapsed" src="\'svg/icons-triangle-down-small.html\'"></ng-include>\n                      </div>\n                      <span id="ts-add-app-dialog-expand-collapse-team">{{::aadc.installOptionLabelForTeamOrChat}}</span>\n                    </div>\n                    <div class="team-or-chat-search">\n                      <chat-and-team-selector ng-if="aadc.showChatAndTeamSelector" data-tid="choose-chats-and-teams" app-has-team-scope="aadc.appHasTeamScope" app-has-group-chat-scope="aadc.appHasGroupChatScope" app-is-sideloaded="aadc.appIsSideloaded" on-item-selected="aadc.onItemSelected(selectedItem)" preselect-team="aadc.preselectTeam" preselect-chat="aadc.preselectChat">\n                      </chat-and-team-selector>\n                    </div>\n                  </div>\n                  \x3c!-- Toggle button for team --\x3e\n                  <div class="ts-add-app-dialog-install-team-button" ng-if="!aadc.isChatSelected || !aadc.appHasGroupChatScope">\n                    <toggle-switch data-tid="toggle-Team" ds-aria-label="{{::aadc.installOptionLabelForTeamOrChat}}" ng-if="!aadc.appHasOnlyTeamOrChatScope && aadc.shouldShowPersonalInstallOption && !aadc.alreadyAddedToTeam" is-checked="aadc.toggleTeamInstall" on-toggle="aadc.teamToggleChange(isChecked)" is-disabled="aadc.teamToggleSwitchDisabled || aadc.isTeamAppInstallDisabled">\n                      <div class="toggle-text" ng-if="aadc.toggleTeamInstall || aadc.teamToggleSwitchDisabled || aadc.isTeamAppInstallDisabled" translate-once="{{::$root.resources.strings.extension_addAppDialog_button_yes}}"></div>\n                      <div class="toggle-text" ng-if="!aadc.toggleTeamInstall&&!aadc.teamToggleSwitchDisabled && !aadc.isTeamAppInstallDisabled" translate-once="{{::$root.resources.strings.extension_addAppDialog_button_no}}"></div>\n                    </toggle-switch>\n                    <a class="setup-text" ng-if="!aadc.enableAppDetailDialogV3 && aadc.alreadyAddedToTeam && !aadc.isTeamArchived" ng-click="aadc.goToPostInstallDialog(\'teamScope\')" ng-attr-title="{{::$root.resources.strings.extension_addAppDialog_button_set_up_tooltip|translate}}" href="javascript:void(0)">\n                      <span class="text" data-tid="setUp-App-Team" translate-once="{{::$root.resources.strings.extension_addAppDialog_button_set_up}}"></span>\n                    </a>\n                    <button class="setup-text ts-btn ts-btn-secondary insert-border" data-tid="setUp-App-Team" ng-if="aadc.enableAppDetailDialogV3 && aadc.alreadyAddedToTeam && !aadc.isTeamArchived" aria-label="{{::$root.resources.strings.extension_addAppDialog_button_open_tooltip|translate}}" ng-click="aadc.goToPostInstallDialog(\'teamScope\')">\n                      {{::$root.resources.strings.extension_addAppDialog_button_open|translate}}\n                    </button>\n                  </div>\n                  \x3c!-- Toggle button for chat --\x3e\n                  <div class="ts-add-app-dialog-install-chat-button" ng-if="aadc.isChatSelected && aadc.appHasGroupChatScope">\n                    <toggle-switch data-tid="toggle-chat" ds-aria-label="{{::aadc.installOptionLabelForTeamOrChat}}" ng-if="!aadc.appHasOnlyTeamOrChatScope && aadc.shouldShowPersonalInstallOption && !aadc.alreadyAddedToGroupChat" is-checked="aadc.toggleChatInstall" on-toggle="aadc.chatToggleChange(isChecked)" is-disabled="aadc.chatToggleSwitchDisabled">\n                      <div class="toggle-text" ng-if="aadc.toggleChatInstall || aadc.chatToggleSwitchDisabled" translate-once="{{::$root.resources.strings.extension_addAppDialog_button_yes}}"></div>\n                      <div class="toggle-text" ng-if="!aadc.toggleChatInstall&&!aadc.chatToggleSwitchDisabled" translate-once="{{::$root.resources.strings.extension_addAppDialog_button_no}}"></div>\n                    </toggle-switch>\n                    <a class="setup-text" ng-if="!aadc.enableAppDetailDialogV3 && aadc.alreadyAddedToGroupChat" ng-click="aadc.goToPostInstallDialog(\'groupchatScope\')" ng-attr-title="{{::$root.resources.strings.extension_addAppDialog_button_set_up_tooltip|translate}}" href="javascript:void(0)">\n                      <span class="text" data-tid="setUp-App-Chat" translate-once="{{::$root.resources.strings.extension_addAppDialog_button_set_up}}"></span>\n                    </a>\n                    <button class="setup-text ts-btn ts-btn-secondary insert-border" data-tid="setUp-App-Chat" ng-if="aadc.enableAppDetailDialogV3 && aadc.alreadyAddedToGroupChat" aria-label="{{::$root.resources.strings.extension_addAppDialog_button_open_tooltip|translate}}" ng-click="aadc.goToPostInstallDialog(\'groupchatScope\')">\n                      {{::$root.resources.strings.extension_addAppDialog_button_open|translate}}\n                    </button>\n                  </div>\n                </div>\n                <div class="ts-add-app-dialog-install-team-capabilities" ng-if="!aadc.isTeamCapabilityCollapsed">\n                  <div ng-repeat="capability in aadc.appCapabilities track by capability.description" class="ts-add-app-section-spacing-medium">\n                    <div class="badge-icon">\n                      <ng-include class="icon" src="capability.icon"></ng-include>\n                    </div>\n                    <div class="app-info">\n                      <div class="ts-add-app-dialog-capability-decsription">{{capability.description}}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <section ng-if="!aadc.hideContent && aadc.mediaSize > 0" class="screenshots">\n              <div class="expand-collapse inset-border inset-border-themed" role="button" aria-expanded="{{!aadc.isAppScreenshotsCollapsed}}" name="{{::$root.resources.strings.extension_addAppDialog_screenshots|translate}}" aria-labelledby="{{::$root.resources.strings.extension_addAppDialog_screenshots|translate}}" tabindex="0" ng-click="aadc.expandCollapseAppScreenshots()">\n                <div class="expand-collapse-icon icons-gray-06-triangle-fill">\n                  <ng-include ng-if="aadc.isAppScreenshotsCollapsed" src="\'svg/icons-triangle-right-small.html\'"></ng-include>\n                  <ng-include ng-if="!aadc.isAppScreenshotsCollapsed" src="\'svg/icons-triangle-down-small.html\'"></ng-include>\n                </div>\n                <span class="ts-add-app-dialog-screenshots-viewmore" translate-once="{{::$root.resources.strings.extension_addAppDialog_screenshots}}"></span>\n              </div>\n              <div class="ts-add-app-dialog-screenshots" ng-class="{\'screenshotCollapsed\': aadc.isAppScreenshotsCollapsed}">\n                <a class="left carousel-control" tabindex="-1" role="button" ng-click="aadc.left()" ng-class="{\'visible\': aadc.isLeftArrowVisible}">\n                  <span class="sr-only" translate-once="{{::$root.resources.strings.botcards_carousel_prev}}"></span>\n                  <ng-include class="card-arrow-icon" src="\'svg/icons-chevron-left.html\'"></ng-include>\n                </a>\n                <a class="right carousel-control" tabindex="-1" role="button" ng-click="aadc.right()" ng-class="{\'visible\': aadc.isRightArrowVisible}">\n                  <span class="sr-only" translate-once="{{::$root.resources.strings.botcards_carousel_next}}"></span>\n                  <ng-include class="card-arrow-icon" src="\'svg/icons-chevron-right.html\'"></ng-include>\n                </a>\n                <div acc-role="listgrid-horizontal" class="ts-add-app-dialog-screenshots-scrollable" id="ts-add-app-dialog-screenshots-scrollable" aria-label="{{::$root.resources.strings.extension_addAppDialog_video_and_screenshots_aria|translate}}">\n                  <div class="screenshots-scrollable-wrapper">\n                    <div class="screenshots-and-video inset-border inset-border-themed" tabindex="-1" acc-tabbable="false" acc-role="listgrid-item" role="application" aria-label="{{::$root.resources.strings.extension_addAppDialog_video_aria|translate}}" on-enter="aadc.focusOnVideo()" ng-keydown="aadc.onKeydown($event)" ng-if="aadc.videoUrl">\n                      <embedded-page-container enable-message-passing="true" disable-tabbable="true" url="{{::aadc.videoUrl}}">\n                      </embedded-page-container>\n                    </div>\n                    <div class="screenshots-and-video" ng-repeat="screenshotImageUrl in aadc.screenshotUrls">\n                      <a acc-role="listgrid-item" role="application" target="_blank" tabindex="-1" ng-keydown="aadc.onKeydown($event)" aria-label="{{::$root.resources.strings.extension_addAppDialog_screenshots_aria|translate}}" acc-tabbable="false" href="{{::screenshotImageUrl}}" ng-click="aadc.setPreActive($index)" media-preview-enabler>\n                        <img ng-src="{{::screenshotImageUrl}}"/>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n            <section class="ts-add-app-dialog-about-section">\n              <div class="expand-collapse inset-border inset-border-themed" role="button" name="{{::$root.resources.strings.extension_addAppDialog_about|translate}}" aria-expanded="{{!aadc.isAboutCollapsed}}" aria-labelledby="{{::$root.resources.strings.extension_addAppDialog_about|translate}}" tabindex="0" ng-click="aadc.expandCollapseAboutSection()">\n                <div class="expand-collapse-icon icons-gray-06-triangle-fill">\n                  <ng-include ng-if="aadc.isAboutCollapsed" src="\'svg/icons-triangle-right-small.html\'"></ng-include>\n                  <ng-include ng-if="!aadc.isAboutCollapsed" src="\'svg/icons-triangle-down-small.html\'"></ng-include>\n                </div>\n                <span id="ts-add-app-dialog-expand-collapse-about" translate-once="{{::$root.resources.strings.extension_addAppDialog_about}}"> </span>\n              </div>\n              <div class="ts-add-app-dialog-developer-name" ng-if="!aadc.isAboutCollapsed">\n                <span ng-if="!aadc.app.appDefinition.developerUrl && aadc.app.appDefinition.developerName" class="ts-add-app-dialog-privacyAndToU-text" translate-with-html-params translate-id="extension_addAppDialogDeveloper" translate-values=\'{"developerName": "{{::aadc.app.appDefinition.developerName}}"}\'></span>\n                <span ng-if="aadc.app.appDefinition.developerUrl && aadc.app.appDefinition.developerName" class="ts-add-app-dialog-privacyAndToU-text" translate-with-html-params translate-id="extension_addAppDialogDeveloper" translate-values=\'{"developerName": "<a ng-href=\\"{{::aadc.app.appDefinition.developerUrl}}\\" rel=\\"noopener noreferrer\\" ng-bind=\\"::aadc.app.appDefinition.developerName\\" target=\\"_blank\\"></a>"}\'></span>\n              </div>\n              <div class="ts-add-app-dialog-version" ng-if="!aadc.isAboutCollapsed">\n                <span ng-if="aadc.app.appDefinition.version" class="version" translate-with-html-params translate-id="extension_addAppDialog_version" translate-values=\'{"version": "{{::aadc.app.appDefinition.version}}"}\'></span>\n              </div>\n              <div class="ts-add-app-dialog-supported-languages" ng-if="!aadc.isAboutCollapsed">\n                <span ng-if="aadc.app.appDefinition.supportedLanguages && aadc.app.appDefinition.supportedLanguages.length > 1" class="supported-languages" translate-with-html-params translate-id="extension_addAppDialog_supported_languages"></span>\n                <ul class="languages">\n                  <li class="language" ng-repeat="language in aadc.supportedLanguages">{{language}}</li>\n                </ul>\n              </div>\n            </section>\n\n            <section ng-if="!aadc.hideContent" class="privacy-and-permissions">\n\n              <div class="ts-add-app-dialog-permissions">\n                <div class="expand-collapse inset-border inset-border-themed" role="button" name="{{::$root.resources.strings.extension_addAppDialog_privacy_and_permissions|translate}}" aria-expanded="{{!aadc.isPrivateAndPermissionsCollapsed}}" aria-labelledby="{{::$root.resources.strings.extension_addAppDialog_privacy_and_permissions|translate}}" ng-click="aadc.expandCollapsePrivateAndPermissions()" tabindex="0">\n                  <div class="expand-collapse-icon icons-gray-06-triangle-fill">\n                    <ng-include ng-if="aadc.isPrivateAndPermissionsCollapsed" src="\'svg/icons-triangle-right-small.html\'"></ng-include>\n                    <ng-include ng-if="!aadc.isPrivateAndPermissionsCollapsed" src="\'svg/icons-triangle-down-small.html\'"></ng-include>\n                  </div>\n                  <span id="ts-add-app-dialog-privacy-and-permissions" translate-once="{{::$root.resources.strings.extension_addAppDialog_privacy_and_permissions}}"> </span>\n                </div>\n                <div>\n                  <span id="ts-add-app-dialog-permissions-header" ng-if="!aadc.hideContent && aadc.app.appDefinition.privacyUrl && aadc.app.appDefinition.termsOfUseUrl" class="accept-text ts-add-app-dialog-small-caption-text" translate-with-html-params translate-id="extension_addAppDialogAppNamePrivacyAndToU" translate-values=\'{"appName": "{{::aadc.app.appDefinition.name}}", "privacyPolicy": "<a ng-href=\\"{{::aadc.app.appDefinition.privacyUrl}}\\" title=\\"{{::aadc.app.appDefinition.privacyUrl}}\\" rel=\\"noopener noreferrer\\" target=\\"_blank\\"><span translate-once=\\"{{::$root.resources.strings.extension_addAppDialogPrivacy}}\\"></span></a>", "termsOfUse": "<a ng-href=\\"{{::aadc.app.appDefinition.termsOfUseUrl}}\\" title=\\"{{::aadc.app.appDefinition.termsOfUseUrl}}\\" rel=\\"noopener noreferrer\\" target=\\"_blank\\"><span translate-once=\\"{{::$root.resources.strings.extension_addAppDialogToU}}\\"></span></a>"}\'></span>\n                </div>\n                <div class="ts-add-app-dialog-permissions-scrollable" ng-if="!aadc.isPrivateAndPermissionsCollapsed">\n                  <ul class="ts-add-app-dialog-permissions-header">\n                    <li ng-repeat="permission in aadc.permissions">{{permission}}</li>\n                  </ul>\n                </div>\n                <div class="ts-add-app-dialog-permissions-scrollable" ng-if="aadc.requestedPermissions && aadc.requestedPermissions.length > 0 && !aadc.isPrivateAndPermissionsCollapsed">\n                  <span ng-bind="::$root.resources.strings.extension_addAppDialogAppRequestPermissionTitle | translate"></span>\n                  <ul class="ts-add-app-dialog-permissions-header">\n                    <li ng-repeat="permission in aadc.requestedPermissions">{{permission}}</li>\n                  </ul>\n                </div>\n              </div>\n              <div class="empty" ng-class="{\'is-visible\': (aadc.emptySpaceVisible && aadc.isPrivateAndPermissionsCollapsed && (aadc.mediaSize > 0 && aadc. aadc.isAppScreenshotsCollapsed))}"></div>\n            </section>\n            <div class="ts-add-app-dialog-scroll-shadow more-indicator-bottom" ng-class="{\'is-visible\': aadc.emptySpaceVisible, \'permission-expanded\': !aadc.isPrivateAndPermissionsCollapsed}"></div>\n          </div>\n        </div>\n      </div>\n      <div class="footer-message">\n        <busy-animation class="loading" ng-if="aadc.showLoadingButton" size="small"></busy-animation>\n        <div class="description ts-add-app-dialog-error-message" ng-if="aadc.inlineMessage" ng-bind="aadc.inlineMessage" role="alert" aria-live="assertive"></div>\n      </div>\n      <div ng-if="aadc.showDialogLoadingSpinner" class="ts-add-app-dialog-wait-message">\n        <busy-animation size="small" context="td-apps-add-app"></busy-animation>\n        <span role="alert" aria-live="assertive" translate-once="{{::$root.resources.strings.extension_addAppDialogWait}}"></span>\n      </div>\n    </section>\n  </modal-dialog>\n</div>'},1843:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(1844),i=n(25),o=n(51),s="components/extensibility/add-app-new-dialog/carousel.html",r=function(){function e(e,t,n){this.$scope=e,this.constants=t,this.$timeout=n,this.medias=[],this.mediaWidth=0,this.mediaPlateWidth=0,this.mediaPlateLeftOffset=0,this.isKeyboardMode=!1,this.cssTransitionDuration=0,e.$watch("imageUrlsAttr",this.onMediasAttrUpdate.bind(this)),e.$watch("videoUrlsAttr",this.onMediasAttrUpdate.bind(this))}return e.$inject=["$scope","constants","$timeout"],e.prototype.previous=function(){this.selectMedia(this.selectedIndex-1)},e.prototype.next=function(){this.selectMedia(this.selectedIndex+1)},e.prototype.shouldMediaBeLoaded=function(e){return e>=this.selectedIndex-1&&e<=this.selectedIndex+1},e.prototype.shouldShowLeftArrow=function(){return this.selectedIndex>0},e.prototype.shouldShowRightArrow=function(){return this.selectedIndex<this.medias.length-1},e.prototype.enableKeyboardMode=function(){this.isKeyboardMode=!0,o.focusNthInTheList(".ts-carousel-media-container",".ts-carousel-media",this.selectedIndex)},e.prototype.mediaItemKeyboard=function(e){return e.keyCode===this.constants.keyCodes.tab?(e.preventDefault(),e.stopPropagation(),this.isKeyboardMode=!1,void(this.$scope.onTabbingOut&&this.$scope.onTabbingOut())):e.keyCode===this.constants.keyCodes.left?(this.selectMedia(this.selectedIndex-1),void this.$timeout(this.cssTransitionDuration).then(function(){o.focusPreviousInTheList(".ts-carousel-media-plate",".ts-carousel-media")})):e.keyCode===this.constants.keyCodes.right?(this.selectMedia(this.selectedIndex+1),void this.$timeout(this.cssTransitionDuration).then(function(){o.focusNextInTheList(".ts-carousel-media-plate",".ts-carousel-media")})):void(e.keyCode!==this.constants.keyCodes.enter||this.$scope.zoomIn&&this.$scope.zoomIn())},e.prototype.selectMedia=function(e){e<0&&(e=0),e>this.medias.length-1&&(e=this.medias.length-1),this.selectedIndex=e,this.$scope.savedState&&(this.$scope.savedState.selectedIndex=e),this.mediaPlateLeftOffset=-1*this.mediaWidth*e},e.prototype.onMediasAttrUpdate=function(){var e=this;this.medias.length=0,this.mediaWidth=0,this.mediaPlateWidth=0,this.selectedIndex=0;var t=_.map(this.$scope.imageUrlsAttr?this.$scope.imageUrlsAttr:[],function(e){return{url:e,type:"image"}}),n=_.map(this.$scope.videoUrlsAttr?this.$scope.videoUrlsAttr:[],function(e){return{url:e,type:"video"}});this.medias=n.concat(t),this.medias.length<=0||i.element(".ts-carousel").ready(function(t){var n=t.find(".ts-carousel-media-container");n&&n.length?(e.mediaWidth=n[0].clientWidth,e.mediaPlateWidth=e.mediaWidth*e.medias.length):e.mediaWidth=0;var a=t.find(".ts-carousel-media-plate");if(a&&a.length){var o=parseFloat(i.element(a[0]).css("transition-duration"));NaN!==o&&(e.cssTransitionDuration=1e3*o)}e.$scope.savedState&&e.$scope.savedState.selectedIndex&&e.$scope.savedState.selectedIndex<e.medias.length?e.selectMedia(e.$scope.savedState.selectedIndex):e.selectMedia(0)})},e}();i.module("teamspace.addAppDialogV3.carousel",[]).directive("tsCarousel",function(){return{restrict:"A",templateUrl:s,scope:{imageUrlsAttr:"<imageUrls",videoUrlsAttr:"<videoUrls",savedState:"=?",zoomIn:"&?",onTabbingOut:"&?"},controller:r,controllerAs:"ctrl"}}).run(["$templateCache",function(e){e.put(s,a)}])},1844:function(e,t){e.exports='<div class="ts-carousel" ng-if="ctrl.medias && ctrl.medias.length">\n  <div class="ts-carousel-media-container" ng-class="{ \'ts-carousel-keyboard-mode\': ctrl.isKeyboardMode }">\n    <div class="ts-carousel-media-plate" ng-style="{width: ctrl.mediaPlateWidth, marginLeft: ctrl.mediaPlateLeftOffset}" ng-keydown="ctrl.mediaItemKeyboard($event)" role="list">\n      <div ng-if="ctrl.medias && ctrl.medias.length" ng-focus="ctrl.enableKeyboardMode()" ng-attr-tabindex="{{ctrl.isKeyboardMode ? \'-1\' : \'0\'}}"></div>\n      <div ng-repeat="media in ctrl.medias track by $index" ng-switch="media.type" class="ts-carousel-media" ng-style="{width: ctrl.mediaWidth}" role="listitem" ng-attr-tabindex="{{ctrl.isKeyboardMode ? \'0\' : \'-1\'}}" aria-label="{{::$root.resources.strings.extension_addAppDialog_screenshots_aria|translate}}">\n        <img ng-switch-when="image" ng-if="ctrl.shouldMediaBeLoaded($index)" class="ts-carousel-image" ng-src="{{media.url}}" ng-style="{cursor: ctrl.$scope.zoomIn ? \'zoom-in\' : \'default\'}" ng-click="ctrl.$scope.zoomIn()" role="image" alt="{{::$root.resources.strings.extension_addAppDialog_screenshots_aria|translate}}"/>\n        <embedded-page-container ng-switch-when="video" ng-if="ctrl.shouldMediaBeLoaded($index)" class="ts-carousel-video" enable-message-passing="true" disable-tabbable="true" url="{{::media.url}}"/>\n      </div>\n    </div>\n\n\n    <a ng-if="ctrl.shouldShowLeftArrow()" ng-click="ctrl.previous()" href="javascript:void(0)" class="ts-carousel-left-arrow" tabindex="-1">\n      <ng-include src="\'svg/icons-chevron-left.html\'"></ng-include>\n    </a>\n    <a ng-if="ctrl.shouldShowRightArrow()" ng-click="ctrl.next()" href="javascript:void(0)" class="ts-carousel-right-arrow" tabindex="-1">\n      <ng-include src="\'svg/icons-chevron-right.html\'"></ng-include>\n    </a>\n  </div>\n\n  <div class="ts-carousel-dots-container">\n    <div ng-repeat="i in ctrl.medias" ng-class="{ active: $index === ctrl.selectedIndex }" class="ts-carousel-dot"/>\n  </div>\n\n</div>'},1845:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(1846),i=n(51),o=n(56),s="components/extensibility/add-app-new-dialog/add-button.html",r=".ts-add-app-dialog-add-button-menu-item",p=function(){function e(e,t,n,a,i,o,s,r,p,l,c,d,h){var g=this;this.$q=e,this.$scope=t,this.$translate=n,this.appsService=a,this.constants=i,this.conversationsService=o,this.dialogService=s,this.eventingService=r,this.extensionManifestService=p,this.inputExtensionService=l,this.loggingService=c,this.navigationService=d,this.resources=h,this.buttonMenuItems=[],this.isInstallingOrUpgrading=!1,this.shouldShowDropdown=!1,this.closeDropdown=function(){g.$scope.$apply(function(){return g.shouldShowDropdown=!1})},this.logger=c.newLogger("add-app-dialog-v3-add-button"),t.$watch("addButtonAttrs",this.onAddButtonAttrsUpdated.bind(this))}return e.$inject=["$q","$scope","$translate","appsService","constants","conversationsService","dialogService","eventingService","extensionManifestService","inputExtensionService","loggingService","navigationService","resources"],e.prototype.onKeyboard=function(e){if(e.keyCode!==this.constants.keyCodes.escape){if(e.keyCode===this.constants.keyCodes.tab)return event.stopPropagation(),void event.preventDefault();e.keyCode!==this.constants.keyCodes.up?e.keyCode!==this.constants.keyCodes.down||i.focusNextInTheList(".ts-add-app-dialog-add-button-dropdown",r):i.focusPreviousInTheList(".ts-add-app-dialog-add-button-dropdown",r)}else{e.preventDefault(),e.stopPropagation(),this.toggleDropdown();var t=angular.element(document).find(".ts-add-app-dialog-add-button-arrow");t&&t.length&&t[0].focus()}},e.prototype.toggleDropdown=function(e){e&&e.stopPropagation&&e.stopPropagation(),this.shouldShowDropdown=!this.shouldShowDropdown,this.shouldShowDropdown?(angular.element(document).one("click",this.closeDropdown),e&&e.detail&&e.detail<0&&i.focusNthInTheList(".ts-add-app-dialog-add-button-dropdown",r)):angular.element(document).off("click",this.closeDropdown)},e.prototype.onAddButtonAttrsUpdated=function(){var e=this,t=this.$scope.addButtonAttrs;if(t)if("not-sideload"===t.flow){var n=this.loggingService.newScenario(this.constants.scenarios.extensibility.apps.addAppDialogAddButton.populateNotSideload);this.populateButton(t.appDefinition,t),n.stop()}else if("sideload"===t.flow){var a=this.loggingService.newScenario(this.constants.scenarios.extensibility.apps.addAppDialogAddButton.populateSideload);this.extensionManifestService.extractAppDefinition(t.manifestZipFile,!0).then(function(n){e.populateButton(n,t),a.stop()}).catch(function(t){e.logger.error("failed to init sideload flow "+t),a.fail({error:t,error1:t})})}else this.loggingService.newScenario(this.constants.scenarios.extensibility.apps.addAppDialogAddButton.unknownFlow).fail()},e.prototype.populateButton=function(e,t){"not-sideload"===t.flow?(this.populateMenuItemUpgrade(e,t),this.populateMenuItemInContext(e,t),this.populateMenuItemTeamNotSideload(e,t),this.populateMenuItemGroupChatNotSideload(e,t),this.populateMenuItemPersonalNotSideload(e,t).then(this.populateMenuItemList.bind(this))):(this.populateMenuItemTeamSideload(e,t),this.populateMenuItemGroupChatSideload(e,t),this.populateMenuItemPersonalSideload(e,t),this.populateMenuItemList())},e.prototype.openTeamOrChannelPicker=function(e,t,n){var a,i=null,o=null,s=null,r=null,p=!1;"not-sideload"===t.flow?(i=t.teamId,o=t.channelId,s=t.chatId,r=t.messageId):(p=!0,a=t.manifestZipFile);var l={installSucceeded:!0};this.$scope.$parent.closeThisDialog(l);var c={appId:e,teamId:i,channelId:o,chatId:s,messageId:r,pickerType:n,isSideloadApp:p,manifestZipFile:a,addAppDialogData:t.addAppDialogData};this.dialogService.openLazyDialog(this.constants.lazyDialogs.teamOrChannelPicker,this.constants.lazyModules.extensibilityDialogs,c)},e.prototype.populateMenuItemUpgrade=function(e,t){var n=this;if(!t.isInContextMode&&t.isUpgrading){this.menuItemUpgrade={onClick:function(){var a=n.loggingService.newScenario(n.constants.scenarios.extensibility.apps.addAppDialogAddButton.menuItemUpgrade);n.isInstallingOrUpgrading=!0;var o=[];i.checkIfAppHasScope("personal",e)&&(a.mark("upgrade for personal"),o.push(n.isAppInstalledForPersonal(e.id).then(function(t){return t?n.appsService.upgradeUserAppEntitlement(e):(a.mark("app is not installed for user. no need to upgrade"),n.$q.resolve())}))),t.teamId&&i.checkIfAppHasScope("team",e)&&(a.mark("upgrade for team"),o.push(n.appsService.upgradeTeamAppEntitlement(t.teamId,e))),t.chatId&&i.checkIfAppHasScope("groupchat",e)&&(a.mark("upgrade for chat"),o.push(n.appsService.upgradeChatAppEntitlement(t.chatId,e))),n.$q.all(o).then(function(){n.menuItemUpgrade.text=n.$translate.instant(n.resources.strings.extension_addAppDialogV3_button_open),t.onInstallTriggered(),a.stop();var e={upgradeSucceeded:!0};n.$scope.$parent.closeThisDialog(e)}).catch(function(e){t.onInstallTriggered(e),n.logger.error("upgrade failed "+e),a.fail({error:e,error1:e});var i={upgradeSucceeded:!1};n.$scope.$parent.closeThisDialog(i),n.openV3ErrorDialog("something-wrong",!0)}).finally(function(){n.isInstallingOrUpgrading=!1})},text:this.$translate.instant(this.resources.strings.extension_addAppDialogV3_button_upgrade),trackSummary:"upgrade"}}else this.menuItemUpgrade=void 0},e.prototype.populateMenuItemPersonalNotSideload=function(e,t){var n=this;if(t.isInContextMode||t.isUpgrading||!i.checkIfAppHasScope("personal",e))return this.menuItemPersonal=void 0,this.$q.resolve();var a=function(){var a=n.loggingService.newScenario(n.constants.scenarios.extensibility.apps.addAppDialogAddButton.menuItemPersonalNotSideload);n.isAppInstalledForPersonal(e.id).then(function(i){var s=n.$q.resolve();return i?a.mark("app is installed for personal. start to navigate to personal app"):(a.mark("app is not installed for personal"),s=n.ensureAppIsInstalledForPersonal(e,!0).then(function(){a.mark("successfully installed app for personal")})),s.then(function(){var a=new o.InstalledApp(e);return n.navigateToAppInPersonalScope(a,t)}).then(function(){a.stop();var e={installSucceeded:!0};i&&t.onInstallTriggered(),n.$scope.$parent.closeThisDialog(e)}).catch(function(e){t.onInstallTriggered(e),n.logger.error("install or open for personal failed "+e),a.fail({error:e,error1:e}),n.openV3ErrorDialog("something-wrong")})})};return this.isAppInstalledForPersonal(e.id).then(function(e){n.menuItemPersonal=e?{onClick:a,text:n.$translate.instant(n.resources.strings.extension_addAppDialogV3_button_open),trackSummary:"addPersonal"}:{onClick:a,text:n.$translate.instant(n.resources.strings.extension_addAppDialogV3_button_add),trackSummary:"addPersonal"}})},e.prototype.navigateToAppInPersonalScope=function(e,t){var n=this;return i.hasScope("personal",e.appDefinition.bots)||i.hasScope("personal",e.appDefinition.staticTabs)?this.navigateToPersonalAppHelper(e):e.appDefinition.inputExtensions&&i.hasScope("personal",e.appDefinition.inputExtensions)?t&&t.addAppDialogData.entryPoint===teamspace.components.AddAppDialogEntryPoint.MessagingExtensionFlyoutFromChat?(this.navigationService.navigateToLastChatState("add-button"),this.$q.resolve(this.eventingService.$once(this.$scope.$root,this.constants.events.messages.focusInEditor,function(){n.eventingService.$emit(n.constants.events.app.installed,{appId:e.appDefinition.id,type:n.constants.events.funStuff.type.inputExtension})}))):this.navigateToPowerbarMessagingExtension(e):i.hasScope("personal",e.appDefinition.staticTabs)||i.hasScope("personal",e.appDefinition.bots)?this.navigateToPersonalAppHelper(e):this.$q.resolve()},e.prototype.navigateToPersonalAppHelper=function(e){var t=this,n=new teamspace.services.userApp.UserApp(e,!1);return this.navigationService.navigateToUserApp(this.$scope,n).then(function(){return t.$q.resolve()})},e.prototype.navigateToPowerbarMessagingExtension=function(e){var t=e.appDefinition.inputExtensions[0];return this.$q.resolve(this.eventingService.$emit(this.constants.events.powerBar.atCommandBox,{appId:e.appDefinition.id,botId:t.botId,name:e.appDefinition.name,description:e.appDefinition.shortDescription,imageUrl:e.appDefinition.largeImageUrl,imageUrlSmall:e.appDefinition.smallImageUrl,accentColor:e.appDefinition.accentColor,commands:t.commands,canUpdateConfiguration:t.canUpdateConfiguration,isFavorite:t.isFavorited,isFeatured:teamspace.services.AppsServiceUtils.isAppFeatured(e),isInstalledPersonally:e.appDefinition.isInstalledPersonally,favoriteRank:t.order}))},e.prototype.populateMenuItemPersonalSideload=function(e,t){var n=this;if(i.checkIfAppHasScope("personal",e)){this.menuItemPersonal={onClick:function(){var a=n.loggingService.newScenario(n.constants.scenarios.extensibility.apps.addAppDialogAddButton.menuItemPersonalSideload);n.ensureAppIsSideloadedForPersonal(e,t.manifestZipFile).then(function(e){if(!e)return n.$q.reject("no sideloaded app");t.onSideloadTriggered(),a.mark("sideloaded for personal. start to navigate to personal app");var i={installSucceeded:!0};return n.$scope.$parent.closeThisDialog(i),n.navigateToAppInPersonalScope(e).then(function(){a.stop()})}).catch(function(e){t.onSideloadTriggered(e),n.logger.error("sideload for personal failed "+e),a.fail({error:e,error1:e}),n.openSchemaErrorDialog(e)})},text:this.$translate.instant(this.resources.strings.extension_addAppDialogV3_button_add),trackSummary:"addPersonal"}}else this.menuItemPersonal=void 0},e.prototype.populateMenuItemTeamNotSideload=function(e,t){var n=this;if(t.isInContextMode||t.isUpgrading||!i.checkIfAppHasScope("team",e))this.menuItemTeam=void 0;else{this.menuItemTeam={onClick:function(){n.loggingService.newScenario(n.constants.scenarios.extensibility.apps.addAppDialogAddButton.menuItemTeamNotSideload).stop(),n.openTeamOrChannelPicker(e.id,t,teamspace.components.AppInstallScope.Team)},text:this.$translate.instant(this.resources.strings.extension_addAppDialogV3_button_add_to_team),iconUrl:"svg/icons-teams.html",trackSummary:"addTeam"}}},e.prototype.populateMenuItemTeamSideload=function(e,t){var n=this;if(i.checkIfAppHasScope("team",e)){this.menuItemTeam={onClick:function(){var a=n.loggingService.newScenario(n.constants.scenarios.extensibility.apps.addAppDialogAddButton.menuItemTeamSideload);t.onSideloadTriggered(),a.stop(),n.openTeamOrChannelPicker(e.id,t,teamspace.components.AppInstallScope.Team)},text:this.$translate.instant(this.resources.strings.extension_addAppDialogV3_button_add_to_team),iconUrl:"svg/icons-teams.html",trackSummary:"addTeam"}}else this.menuItemTeam=void 0},e.prototype.populateMenuItemGroupChatNotSideload=function(e,t){var n=this;if(t.isInContextMode||t.isUpgrading||!i.checkIfAppHasScope("groupchat",e))this.menuItemGroupChat=void 0;else{this.menuItemGroupChat={onClick:function(){n.loggingService.newScenario(n.constants.scenarios.extensibility.apps.addAppDialogAddButton.menuItemGroupChatNotSideload).stop(),n.openTeamOrChannelPicker(e.id,t,teamspace.components.AppInstallScope.GroupChat)},text:this.$translate.instant(this.resources.strings.extension_addAppDialogV3_button_add_to_chat),iconUrl:"svg/icons-chat.html",trackSummary:"addGroupChat"}}},e.prototype.populateMenuItemGroupChatSideload=function(e,t){var n=this;if(i.checkIfAppHasScope("groupchat",e)){this.menuItemGroupChat={onClick:function(){var a=n.loggingService.newScenario(n.constants.scenarios.extensibility.apps.addAppDialogAddButton.menuItemGroupChatSideload);t.onSideloadTriggered(),a.stop(),n.openTeamOrChannelPicker(e.id,t,teamspace.components.AppInstallScope.GroupChat)},text:this.$translate.instant(this.resources.strings.extension_addAppDialogV3_button_add_to_chat),iconUrl:"svg/icons-chat.html",trackSummary:"addGroupChat"}}else this.menuItemGroupChat=void 0},e.prototype.populateMenuItemInContext=function(e,t){var n=this;if(t.isInContextMode){this.menuItemInContext={onClick:function(){var a,i=n.loggingService.newScenario(n.constants.scenarios.extensibility.apps.addAppDialogAddButton.menuItemInContext);t.teamId?(i.mark("has teamId. start to create team app entitlement"),a=n.appsService.createTeamAppEntitlement(t.teamId,e).then(function(){if(t.onInstallTriggered(),i.mark("created team entitlement"),t.channelId)i.mark("start to open in context gallery"),a={installSucceeded:!0,appId:e.id},n.$scope.$parent.closeThisDialog(a);else{i.mark("start to open connector settings page");var a={installSucceeded:!0,appId:e.id};n.$scope.$parent.closeThisDialog(a)}}).catch(function(e){throw n.logger.error("in-context install for team failed "+e),i.fail({error:e,error1:e}),e})):t.chatId?(i.mark("has chatId. start to create group chat app entitlement"),a=n.appsService.createGroupChatAppEntitlement(t.chatId,e).then(function(){t.onInstallTriggered(),i.mark("group chat entitlement created. start to open configurable tab");var a={installSucceeded:!0,appId:e.id};n.$scope.$parent.closeThisDialog(a)}).catch(function(e){throw n.logger.error("in-context install for group chat failed "+e),i.fail({error:e,error1:e}),e})):(i.mark("has no team or chat id. this should be messaging extension featured item installation"),a=n.ensureAppIsInstalledForPersonal(e).then(function(){t.onInstallTriggered(),i.mark("in-context installed messaging extension");var a={installSucceeded:!0,appId:e.id};n.$scope.$parent.closeThisDialog(a)})),a.then(function(){return i.stop()}).catch(function(e){t.onInstallTriggered(e),n.logger.error("in-context failed "+e),i.fail({error:e,error1:e}),n.openV3ErrorDialog("something-wrong")})},text:this.$translate.instant(this.resources.strings.extension_addAppDialogV3_button_add),trackSummary:"inContext"}}else this.menuItemInContext=void 0},e.prototype.populateMenuItemList=function(){this.buttonMenuItems=_.filter([this.menuItemUpgrade,this.menuItemPersonal,this.menuItemTeam,this.menuItemGroupChat,this.menuItemInContext],function(e){return!!e})},e.prototype.ensureAppIsInstalledForPersonal=function(e,t){var n=this;return i.checkIfAppHasScope("personal",e)?(t?this.$q.resolve(!1):this.isAppInstalledForPersonal(e.id)).then(function(t){return t?n.$q.resolve():(n.isInstallingOrUpgrading=!0,(e.inputExtensions&&e.inputExtensions.length?n.inputExtensionService.installAndFavorite(e):n.appsService.createUserAppEntitlement(e)).then(function(){var t=e.bots&&e.bots.length>0&&n.constants.bots.keyPrefix+e.bots[0].id;if(!t)return n.$q.resolve();var a=n.conversationsService.getChatConversationWith(t);return n.conversationsService.ensureConversationCreated(a.id).then(function(){return n.$q.resolve()})}).catch(function(e){throw n.logger.error("ensuring app is installed for personal failed "+e),e}).finally(function(){n.isInstallingOrUpgrading=!1}))}):this.$q.resolve()},e.prototype.isAppInstalledForPersonal=function(e){return this.appsService.getInstalledAppForUser(e).then(function(e){return e&&e.appDefinition&&e.appDefinition.isInstalledPersonally&&teamspace.services.AppsServiceUtils.isAppInstalled(e)}).catch(function(e){return!1})},e.prototype.ensureAppIsSideloadedForPersonal=function(e,t){var n=this;if(!i.checkIfAppHasScope("personal",e))return this.$q.resolve();this.isInstallingOrUpgrading=!0;var a=_.cloneDeep(e),o=e.externalId.toLowerCase();return this.extensionManifestService.getZipStreamPromise(t).then(function(e){return n.appsService.getAggregatedInstalledAppsForUser(!1).then(function(t){for(var i=0;i<t.length;i++){var s=function(i){var s=t[i];if(teamspace.services.AppsServiceUtils.isAppInstalled(s)&&s.appDefinition.externalId&&o===s.appDefinition.externalId.toLowerCase()&&!s.appDefinition.tenantId)return a.id=s.appDefinition.id,{value:n.appsService.updateUserAppDefinitionFromZip(a.id,e).then(function(){return n.$q.resolve(s)})}}(i);if("object"==typeof s)return s.value}return n.appsService.createUserAppDefinitionFromZip(e).then(function(){return n.appsService.getAggregatedInstalledAppsForUser(!1).then(function(e){var t=_.findIndex(e,function(e){return e.appDefinition.externalId===o});return n.$q.resolve(e[t])})})})}).catch(function(e){throw n.logger.error("App sideloaded for personal scope failed "+e),e}).finally(function(){n.isInstallingOrUpgrading=!1})},e.prototype.openSchemaErrorDialog=function(e){var t=this.$translate.instant(this.resources.strings.extension_addAppDialogErrorMessage),n=null;e.data&&e.data.errorCode===this.constants.extensibility.apps.errorCodes.unableToParseTeamsAppManifest&&(t=this.$translate.instant(this.resources.strings.extension_addAppDialogManifestParsingErrorMessage),n=e.data.message),this.dialogService.close(this.constants.lazyDialogs.addAppNew),this.dialogService.openLazyDialog(this.constants.lazyDialogs.manifestError,this.constants.lazyModules.extensibilityDialogs,{errorMessage:t,errorDetails:n})},e.prototype.openV3ErrorDialog=function(e,t){if(!t)if(this.$scope.closeThisDialog){var n={installSucceeded:!1};this.$scope.closeThisDialog(n)}else this.dialogService.close(this.constants.lazyDialogs.addAppNew);this.dialogService.openLazyDialog(this.constants.lazyDialogs.addAppNewError,this.constants.lazyModules.extensibilityDialogs,{errorType:e})},e}();t.AddButtonController=p;angular.module("teamspace.addAppDialogV3.addButton",[]).directive("tsAddAppDialogAddButton",function(){return{restrict:"E",templateUrl:s,controller:p,controllerAs:"ctrl",scope:{addButtonAttrs:"<?"}}}).run(["$templateCache",function(e){e.put(s,a)}])},1846:function(e,t){e.exports='<div ng-if="ctrl.buttonMenuItems && ctrl.buttonMenuItems.length" class="ts-add-app-dialog-add-button-container">\n  <div class="ts-add-app-dialog-add-button">\n    <button role="button" ng-init="mainItem = ctrl.buttonMenuItems[0]" ng-click="mainItem.onClick()" ng-class="{\'ts-add-app-dialog-add-button-hasdropdown\': ctrl.buttonMenuItems.length > 1}" ng-disabled="ctrl.isInstallingOrUpgrading" data-tid="add-app-dialog-v3-add-button" class="ts-btn ts-btn-fluent ts-btn-fluent-primary ts-add-app-dialog-add-button-main" track-scenario="{{::$root.trackConstants.trackScenario.addAppDialogV3AddButton}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.appMgmt}}" track-summary="{{mainItem.trackSummary}}">\n      {{mainItem.text}}\n    </button>\n    \x3c!-- we probably don\'t want to track arrow button click --\x3e\n    <button ng-if="ctrl.buttonMenuItems.length > 1" ng-click="ctrl.toggleDropdown($event)" ng-disabled="ctrl.isInstallingOrUpgrading" class="ts-btn ts-btn-fluent ts-btn-fluent-primary ts-add-app-dialog-add-button-arrow" data-tid="add-app-dialog-v3-add-button-dropdown-arrow" track-click-slient="true">\n      <svg-include src="\'svg/icons-triangle-down-small.html\'"></svg-include>\n    </button>\n  </div>\n\n  <div ng-if="ctrl.shouldShowDropdown" ng-keydown="ctrl.onKeyboard($event)" data-tid="add-app-dialog-v3-add-button-dropdown" class="ts-add-app-dialog-add-button-dropdown">\n    <ul role="list">\n      <li ng-repeat="item in ctrl.buttonMenuItems.slice(1)">\n        <button role="listitem" class="ts-add-app-dialog-add-button-menu-item" data-tid="add-app-dialog-v3-add-button-dropdown-menu-item" ng-click="item.onClick($event)" track-scenario="{{::$root.trackConstants.trackScenario.addAppDialogV3AddButton}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.appMgmt}}" track-summary="{{item.trackSummary}}">\n          <ng-include src="item.iconUrl"></ng-include>\n          <span>{{item.text}}</span>\n        </button>\n      </li>\n    </ul>\n  </div>\n</div>'},1847:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(1848),i=n(25),o=function(){function e(e,t,n){var a=e.ngDialogData;"app-not-found"===a.errorType?this.strTitle=t.instant(n.strings.extension_addAppDialogV3_error_appNotFound):"something-wrong"===a.errorType&&(this.strTitle=t.instant(n.strings.extension_addAppDialogErrorMessage))}return e.$inject=["$scope","$translate","resources"],e}();t.AddAppDialogV3ErrorController=o,i.module("teamspace.addAppDialogV3.errorDialog",[]).run(["constants","dialogService","$templateCache","settingsService",function(e,t,n,i){i.valueAsBoolean(e.settings.names.enableNewAppInstallFlowV3)&&(n.put("components/extensibility/add-app-new-dialog/error-dialog.html",a),t.register(e.lazyDialogs.addAppNewError,{template:"components/extensibility/add-app-new-dialog/error-dialog.html",className:"ts-modal-dialog custom-width ts-add-app-dialog-error",closeByEscape:!0,closeByDocument:!0,ariaAuto:!1,ariaRole:"dialog",ariaLabelledById:"modalDialog-title"}))}]).controller("AddAppDialogV3ErrorController",o)},1848:function(e,t){e.exports='<div class="ts-add-app-dialog-error" ng-controller="AddAppDialogV3ErrorController as ctrl" aria-modal="true" acc-role="dialog">\n  <modal-dialog dialog-title="{{ctrl.strTitle}}">\n  </modal-dialog>\n</div>'},1849:function(e,t,n){"use strict";var a=this&&this.__assign||function(){return(a=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++){t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1850),o=n(51),s=n(25),r="add-app-dialog-v3",p="ts-add-app-details-v3-scrolled",l=".ts-add-app-dialog-v3-about",c=".ts-add-app-dialog-v3-more-from-developer",d=".ts-add-app-dialog-v3-privacy",h=".ts-add-app-dialog-v3-left-rail-navigation-item",g=function(){function e(e,t,n,a,i,o,s,r,l,c,d,h,g,u,m,v,f){var S=this;this.$q=e,this.$scope=t,this.$translate=n,this.$window=a,this.analyticsService=i,this.appsService=o,this.authenticationService=s,this.constants=r,this.dialogService=l,this.extensionManifestService=d,this.localizationService=h,this.loggingService=g,this.resources=u,this.tenantService=v,this.utilityService=f,this.appHasTeamScope=!1,this.appHasGroupChatScope=!1,this.onScrollEventName=p,this.hasConfigurableTab=!1,this.hasBot=!1,this.hasMessagingExtension=!1,this.hasConnector=!1,this.hasStaticTab=!1,this.shouldShowCarousel=!1,this.isLargeMediaView=!1,this.isMediaPotential=!0,this.isAboutActive=!0,this.isMoreFromDeveloperActive=!1,this.isPrivacyActive=!1,this.isScrolledToTop=!0,this.isScrolledToBottom=!0,this.isNavigationListKeyboardMode=!1,this.isMoreFromDeveloperKeyboardMode=!1,this.largeImageUrl="",this.largeImageUrlUseNgInclude=!1,this.moreAppsFromDeveloper=[],this.navigationMenuItems=[],this.screenshotUrls=[],this.videoUrls=[],this.carouselState={},this.strAccentColor="",this.strAppDetail="",this.strCategoriesOrTenant="",this.strCreatedBy="",this.strAbout="",this.strMoreFromDeveloper="",this.strPrivacyTitle="",this.strPrivacyDescription="",this.strExistingPermissionList=[],this.strAdditionalPermissionList=[],this.strName="",this.strNavAbout="",this.strNavMoreFromDeveloper="",this.strNavPrivacy="",this.strVersion="",this.supportedLanguages=[],this.setScrollActive=_.throttle(function(e){switch(S.isAboutActive=!1,S.isMoreFromDeveloperActive=!1,S.isPrivacyActive=!1,e){case"about":S.isAboutActive=!0;break;case"more":S.isMoreFromDeveloperActive=!0;break;case"privacy":S.isPrivacyActive=!0}},1e3),this.fallbackIcon=r.fallbackImages.appFallbackImage;var y=t.ngDialogData;this.enableTenantOwnedApps=m.valueAsBoolean(r.settings.names.enableTenantOwnedApps),this.logger=g.newLogger("add-app-dialog-v3"),c.$on(t,p,this.onScrolled.bind(this)),this.dialogData=y;var A=g.newScenario(r.scenarios.extensibility.apps.addAppDialog.v3Populate);(y.entryPoint===teamspace.components.AddAppDialogEntryPoint.Store?this.handleStoreFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.InContextGalleryDialogFromChannel?this.handleInContextGalleryDialogFromChannelFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.InContextGalleryDialogFromGroupChat?this.handleInContextGalleryDialogFromGroupChatFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.InContextGalleryDialogMoreAppsFromChannel?this.handleInContextGalleryDialogMoreAppsFromChannelFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.InContextGalleryDialogMoreAppsFromGroupChat?this.handleInContextGalleryDialogMoreAppsFromGroupChatFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.Flyout?this.handleFlyoutFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.AppsManagementTabView?this.handleAppsManagementTabViewFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.GroupChatAppsManagementView?this.handleGroupChatAppsManagementViewFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.MoreAppFromSameDeveloper?this.handleMoreAppFromSameDeveloperFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.MessagingExtensionFlyoutFromChannel?this.handleMessagingExtensionFlyoutFromChannelFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.MessagingExtensionFlyoutFromChat?this.handleMessagingExtensionFlyoutFromChatFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.StoreSideload?this.handleStoreSideloadFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.DeepLink?this.handleDeepLinkFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.ConnectorManagementDialog?this.handleConnectorManagementFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.AppsManagementTabUpgrade?this.handleAppsManagementTabUpgradeFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.GroupChatAppsManagementUpgrade?this.handleGroupChatAppsManagementUpgradeFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.AppsList?this.handleAppsListFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.TabSdkSideload?this.handleTabSdkSideloadFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.AppsManagementTabFromTeam?this.handleAppsManagementTabFromTeamFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.AppsManagementTabFromGroupChat?this.handleAppsManagementTabFromGroupChatFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.AppSuggestionInEmptyChannel?this.handleAppSuggestionInEmptyChannel(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.MeetingFromGroupchat?this.handleMeetingFlowFromGroupchat(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.MeetingFromTeam?this.handleMeetingFlowFromTeam(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.MessagingExtensionFeaturedItem?this.handleMessagingExtensionFeaturedItemFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.NewMessageUpgrade?this.handleNewMessageUpgradeFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.AtMentionDirectInstallationFromTeam?this.handleAtMentionDirectInstallationFromTeamFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.AtMentionDirectInstallationFromGroupChat?this.handleAtMentionDirectInstallationFromGroupChatFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.PersonalAppBannerUpgrade?this.handlePersonalAppBannerUpgradeFlow(y):y.entryPoint===teamspace.components.AddAppDialogEntryPoint.AppBarNew||y.entryPoint===teamspace.components.AddAppDialogEntryPoint.AppsListNew?this.handleAppsListAndBarFlow(y):this.handleLegacyFlow(y)).then(function(){A.stop()}).catch(function(e){S.openErrorDialog("something-wrong"),A.fail({error:e})});var b=this.onKeydown.bind(this);a.addEventListener("keydown",b,!0),t.$on("$destroy",function(){S.logViewFuncHandle=_.defer(S.logViewAppActionForTelemetry.bind(S)),a.removeEventListener("keydown",b,!0)})}return e.$inject=["$q","$scope","$translate","$window","analyticsService","appsService","authenticationService","constants","dialogService","eventingService","extensionManifestService","localizationService","loggingService","resources","settingsService","tenantService","utilityService"],Object.defineProperty(e.prototype,"navCtx",{get:function(){return"add-app-dialog-v3"},enumerable:!0,configurable:!0}),e.prototype.zoomInCarousel=function(){this.isLargeMediaView=!0,this.logOpenAppImageActionForTelemetry(this.carouselState.selectedIndex)},e.prototype.zoomOutCarousel=function(){this.isLargeMediaView=!1},e.prototype.openAnotherAppFromDeveloper=function(e,t){t.preventDefault(),this.dialogService.close(this.constants.lazyDialogs.addAppNew);var n={appId:e,entryPoint:teamspace.components.AddAppDialogEntryPoint.MoreAppFromSameDeveloper,previousDialogData:this.dialogData};this.dialogService.openLazyDialog(this.constants.lazyDialogs.addAppNew,this.constants.lazyModules.extensibilityDialogs,n)},e.prototype.enableMoreFromDeveloperKeyboardMode=function(){this.isMoreFromDeveloperKeyboardMode=!0,o.focusNthInTheList(".ts-add-app-dialog-v3-more-apps-list",".ts-add-app-dialog-v3-more-apps-item")},e.prototype.onMoreFromDeveloperKeyboard=function(e){if(e.keyCode===this.constants.keyCodes.tab)return e.preventDefault(),e.stopPropagation(),this.isMoreFromDeveloperKeyboardMode=!1,void o.focusFirstFocusable(d);e.keyCode!==this.constants.keyCodes.left?e.keyCode!==this.constants.keyCodes.right||o.focusNextInTheList(".ts-add-app-dialog-v3-more-apps-list",".ts-add-app-dialog-v3-more-apps-item"):o.focusPreviousInTheList(".ts-add-app-dialog-v3-more-apps-list",".ts-add-app-dialog-v3-more-apps-item")},e.prototype.focusCreatedBy=function(){o.focusFirstFocusable(".ts-add-app-dialog-v3-created-by")},e.prototype.focusBackButton=function(){o.focusFirstFocusable(".ts-add-app-dialog-v3-footer")},e.prototype.mainContentKeyboard=function(e){var t=this;e.keyCode===this.constants.keyCodes.tab&&s.element(".ts-add-app-dialog-v3-main-content").ready(function(){t.$scope.$apply(function(){document.activeElement.classList&&document.activeElement.classList.contains(h.substr(1))?t.isNavigationListKeyboardMode=!0:t.isNavigationListKeyboardMode=!1})})},e.prototype.navBtnKeyboard=function(e){if(e.keyCode===this.constants.keyCodes.tab)return event.stopPropagation(),event.preventDefault(),this.isNavigationListKeyboardMode=!1,void o.focusFirstFocusable(".ts-add-app-dialog-v3-right-rail");e.keyCode!==this.constants.keyCodes.up?e.keyCode!==this.constants.keyCodes.down||o.focusNextInTheList(".ts-add-app-dialog-v3-left-rail-navigation",h):o.focusPreviousInTheList(".ts-add-app-dialog-v3-left-rail-navigation",h)},e.prototype.scrollToAbout=function(e){if(e){if(e.keyCode!==this.constants.keyCodes.enter)return;o.focusFirstFocusable(l),this.isNavigationListKeyboardMode=!1}this.scroll(l),this.setScrollActive("about")},e.prototype.scrollToMoreFromDeveloper=function(e){if(e){if(e.keyCode!==this.constants.keyCodes.enter)return;o.focusFirstFocusable(c),this.isNavigationListKeyboardMode=!1}this.scroll(c),this.setScrollActive("more")},e.prototype.scrollToPrivacy=function(e){if(e){if(e.keyCode!==this.constants.keyCodes.enter)return;o.focusFirstFocusable(d),this.isNavigationListKeyboardMode=!1}this.scroll(d),this.setScrollActive("privacy")},e.prototype.scroll=function(e){var t=s.element(".scroll-region-container");t.ready(function(n){var a=n.find(e);t&&t.length&&a&&a.length&&(t[0].scrollTop=a[0].offsetTop)})},e.prototype.onScrolled=function(e,t){var n=this,a=t.scrollTop,i=t.scrollBottom;s.element(".ts-add-app-dialog-v3-scrolling-plate").ready(function(e){n.$scope.$apply(function(){if(n.isScrolledToTop=0===a,n.isScrolledToBottom=0===i,!n.isScrolledToTop||!n.isScrolledToBottom)if(n.isScrolledToTop)n.setScrollActive("about");else{var t=e.find(d);if(t&&t.length&&a>=t[0].offsetTop||n.isScrolledToBottom)n.setScrollActive("privacy");else{var o=e.find(c);o&&o.length&&a>=o[0].offsetTop&&n.setScrollActive("more")}}})})},e.prototype.onKeydown=function(e){e.keyCode===this.constants.keyCodes.escape&&(this.isLargeMediaView?(this.zoomOutCarousel(),this.$scope.$digest()):this.backToInContextGalleryBtn?this.backToInContextGalleryBtn.onClick():this.dialogService.close(this.constants.lazyDialogs.addAppNew))},e.prototype.handleLegacyFlow=function(e){var t=_.cloneDeep(e);return t.teamName=e.teamName?"has team name":"no team name",this.logger.error("Unknown legacy flow",t),e.appID?this.handleStoreFlow({appId:e.appID,entryPoint:teamspace.components.AddAppDialogEntryPoint.Legacy}):this.$q.reject('No "appID" found in dialogData')},e.prototype.handleAppsListFlow=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleAppsManagementTabUpgradeFlow=function(e){var t=this;return this.$q.all([this.appsService.getInstalledAppForTeam(e.teamId,e.appId),this.appsService.getTeamAppDefinition(e.teamId,e.appId,r)]).then(function(e){var n=e[0],a=e[1];return t.$q.all([t.ensureInstalledApp(n),t.ensureAppDef(a)])}).then(function(n){var a=n[0],i=n[1];t.populateAddButtonAttrsNotSideload(i,e,{isUpgrading:!0,appDefinition:i,teamId:e.teamId}),t.populateDialogFromAppDefinition(i),t.populatePermissionList({installedAppDef:a.appDefinition,latestAppDef:i})})},e.prototype.handleGroupChatAppsManagementUpgradeFlow=function(e){var t=this;return this.$q.all([this.appsService.getInstalledAppForGroupChat(e.chatId,e.appId),this.appsService.getGroupChatAppDefinition(e.chatId,e.appId,r)]).then(function(e){var n=e[0],a=e[1];return t.$q.all([t.ensureInstalledApp(n),t.ensureAppDef(a)])}).then(function(n){var a=n[0],i=n[1];t.populateAddButtonAttrsNotSideload(i,e,{isUpgrading:!0,appDefinition:i,chatId:e.chatId}),t.populateDialogFromAppDefinition(i),t.populatePermissionList({installedAppDef:a.appDefinition,latestAppDef:i})})},e.prototype.handleConnectorManagementFlow=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n,teamId:e.teamId,isInContextMode:!0}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleStoreSideloadFlow=function(e){var t=this;return this.extensionManifestService.extractAppDefinition(e.manifestZipFile,!0).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsSideload(n,e,{manifestZipFile:e.manifestZipFile}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleTabSdkSideloadFlow=function(e){var t=this;return this.extensionManifestService.extractAppDefinition(e.manifestZipFile,!0).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsSideload(n,e,{manifestZipFile:e.manifestZipFile}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleMeetingFlowFromGroupchat=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n,chatId:e.chatId,isInContextMode:!0}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleMeetingFlowFromTeam=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n,teamId:e.teamId,isInContextMode:!0}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleDeepLinkFlow=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleInContextGalleryDialogFromChannelFlow=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n,channelId:e.channelId,teamId:e.teamId,isInContextMode:!0}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n}),t.populateBackButton(e.onBackButtonClicked)})},e.prototype.handleInContextGalleryDialogFromGroupChatFlow=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n,chatId:e.chatId,isInContextMode:!0}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n}),t.populateBackButton(e.onBackButtonClicked)})},e.prototype.handleInContextGalleryDialogMoreAppsFromChannelFlow=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n,teamId:e.teamId,channelId:e.channelId}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleInContextGalleryDialogMoreAppsFromGroupChatFlow=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n,chatId:e.chatId}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleStoreFlow=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleFlyoutFlow=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleAppsManagementTabViewFlow=function(e){var t=this;return this.appsService.getInstalledAppForTeam(e.teamId,e.appId).then(function(e){return t.ensureInstalledApp(e)}).then(function(e){t.populateDialogFromAppDefinition(e.appDefinition),t.populatePermissionList({installedAppDef:e.appDefinition})})},e.prototype.handleGroupChatAppsManagementViewFlow=function(e){var t=this;return this.appsService.getInstalledAppForGroupChat(e.chatId,e.appId).then(function(e){return t.ensureInstalledApp(e)}).then(function(e){t.populateDialogFromAppDefinition(e.appDefinition),t.populatePermissionList({installedAppDef:e.appDefinition})})},e.prototype.handleMoreAppFromSameDeveloperFlow=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleMessagingExtensionFlyoutFromChannelFlow=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n,teamId:e.teamId,channelId:e.channelId}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleMessagingExtensionFlyoutFromChatFlow=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleAppsManagementTabFromTeamFlow=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n,teamId:e.teamId}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleAppsManagementTabFromGroupChatFlow=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n,chatId:e.chatId}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleAppSuggestionInEmptyChannel=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n,teamId:e.teamId,isInContextMode:!0}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleMessagingExtensionFeaturedItemFlow=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n,isInContextMode:!1}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleNewMessageUpgradeFlow=function(e){var t=this;return this.$q.all([e.teamId?this.appsService.getInstalledAppForTeam(e.teamId,e.appId):this.appsService.getInstalledAppForUser(e.appId),this.appsService.getUserAppDefinition(e.appId,r)]).then(function(e){var n=e[0],a=e[1];return t.$q.all([t.ensureInstalledApp(n),t.ensureAppDef(a)])}).then(function(n){var a=n[0],i=n[1];t.populateAddButtonAttrsNotSideload(i,e,{isUpgrading:!0,appDefinition:i,teamId:e.teamId}),t.populateDialogFromAppDefinition(i),t.populatePermissionList({installedAppDef:a.appDefinition,latestAppDef:i})})},e.prototype.handleAtMentionDirectInstallationFromTeamFlow=function(e){var t=this;return this.appsService.getTeamAppDefinition(e.teamId,e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n,teamId:e.teamId,isInContextMode:!0}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handleAtMentionDirectInstallationFromGroupChatFlow=function(e){var t=this;return this.appsService.getGroupChatAppDefinition(e.chatId,e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n,chatId:e.chatId,isInContextMode:!0}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.handlePersonalAppBannerUpgradeFlow=function(e){var t=this;return this.$q.all([this.appsService.getInstalledAppForUser(e.appId),this.appsService.getUserAppDefinition(e.appId,r)]).then(function(e){var n=e[0],a=e[1];return t.$q.all([t.ensureInstalledApp(n),t.ensureAppDef(a)])}).then(function(n){var a=n[0],i=n[1];t.populateAddButtonAttrsNotSideload(i,e,{isUpgrading:!0,appDefinition:i}),t.populateDialogFromAppDefinition(i),t.populatePermissionList({installedAppDef:a.appDefinition,latestAppDef:i})})},e.prototype.handleAppsListAndBarFlow=function(e){var t=this;return this.appsService.getUserAppDefinition(e.appId,r).then(function(e){return t.ensureAppDef(e)}).then(function(n){t.populateAddButtonAttrsNotSideload(n,e,{appDefinition:n}),t.populateDialogFromAppDefinition(n),t.populatePermissionList({latestAppDef:n})})},e.prototype.populateBackButton=function(e){var t=this;this.backToInContextGalleryBtn={onClick:function(){t.dialogService.close(t.constants.lazyDialogs.addAppNew),e()}}},e.prototype.populateAddButtonAttrsNotSideload=function(e,t,n){var i=this;this.addButtonAttrs=a({flow:"not-sideload",onInstallTriggered:function(n){n&&(i.installationError=""+n),i.logInstallAppActionForTelemetry(e,t)},addAppDialogData:t},n)},e.prototype.populateAddButtonAttrsSideload=function(e,t,n){var i=this;this.addButtonAttrs=a({flow:"sideload",onSideloadTriggered:function(n){n&&(i.installationError=""+n),i.logInstallAppActionForTelemetry(e,t)},addAppDialogData:t},n)},e.prototype.populateDialogFromAppDefinition=function(e){var t=this;e||this.openErrorDialog("app-not-found"),this.appDefinition=e,this.hasConfigurableTab=e.galleryTabs&&e.galleryTabs.length>0,this.hasBot=e.bots&&e.bots.length>0,this.hasMessagingExtension=e.inputExtensions&&e.inputExtensions.length>0,this.hasStaticTab=e.staticTabs&&e.staticTabs.length>0,this.hasConnector=e.connectors&&e.connectors.length>0,this.appHasTeamScope=o.checkIfAppHasScope("team",e),this.appHasGroupChatScope=o.checkIfAppHasScope("groupchat",e),this.isMediaPotential=e.officeAssetId&&e.officeAssetId.length>0||e.screenshotUrls&&e.screenshotUrls.length>0||!!e.videoUrl,this.shouldShowCarousel=this.isMediaPotential,this.largeImageUrl=e.largeImageUrl,this.largeImageUrlUseNgInclude=this.utilityService.useNgIncludeForIcon(e.largeImageUrl),this.strName=e.name,this.strAccentColor=e.accentColor,this.strAppDetail=e.longDescription,this.strCreatedBy=this.$translate.instant(this.resources.strings.extension_addAppDialogV3_createdBy,{developerName:e.developerName,developerUrl:e.developerUrl}),this.strPrivacyTitle=this.$translate.instant(this.resources.strings.extension_addAppDialogV3_privacy),this.strPrivacyDescription=this.$translate.instant(this.resources.strings.extension_addAppDialogV3_privacyDescription,{appName:e.name,privacyUrl:e.privacyUrl,termsOfUseUrl:e.termsOfUseUrl}),this.strNavAbout=this.$translate.instant(this.resources.strings.extension_addAppDialogV3_navigation_about),this.strNavPrivacy=this.$translate.instant(this.resources.strings.extension_addAppDialogV3_navigation_privacyAndPermissions),this.strAbout=this.strNavAbout,this.strVersion=this.$translate.instant(this.resources.strings.extension_addAppDialogV3_version,{version:e.version}),this.supportedLanguages=_(e.supportedLanguages).map(function(e){return t.getLanguageForCode(e)}).uniq().sort().filter(function(e){return!!e}).value(),this.populateMoreAppsFromSameDeveloper(e),this.populateScreenshotsAndVideos(e),this.populateTenantNameAsNeeded(e),this.populateNavigationItems()},e.prototype.populatePermissionList=function(e){var t=e.installedAppDef?this.findAppCapabilities(e.installedAppDef):[],n=e.latestAppDef?this.findAppCapabilities(e.latestAppDef):[],a=_.difference(n,t),i=this.getStrPermissionListHelper(t,a);e.latestAppDef&&(this.handleSpecialFlowPermission(e.latestAppDef,i.additionalPermissions),this.translateAndPopulateDevicePermissions(e.latestAppDef,n,i.additionalPermissions)),e.installedAppDef&&this.translateAndPopulateDevicePermissions(e.installedAppDef,t,i.existingPermissions),this.strExistingPermissionList=i.existingPermissions,this.strAdditionalPermissionList=_.difference(i.additionalPermissions,i.existingPermissions)},e.prototype.getStrPermissionListHelper=function(e,t){for(var n=[],a=[],i=0,o=[this.translateAndPopulatePermissionStrings(e,n),this.translateAndPopulatePermissionStrings(t,a)];i<o.length;i++){var s=o[i];s(teamspace.components.PermissionMapPersonalScope),this.appHasTeamScope&&this.$scope.appHasGroupChatScope?s(teamspace.components.PermissionMapTeamAndChatScope):this.appHasTeamScope?s(teamspace.components.PermissionMapTeamScope):this.appHasGroupChatScope&&s(teamspace.components.PermissionMapChatScope)}return{existingPermissions:n,additionalPermissions:a}},e.prototype.findAppCapabilities=function(e){return _.filter(o.Supported,function(t){return!!e[t]})},e.prototype.translateAndPopulatePermissionStrings=function(e,t){var n=this;return function(a){_.forEach(a,function(a,i){_.some(a,function(t){return _.includes(e,t)})&&t.push(n.$translate.instant(n.resources.strings[i]))})}},e.prototype.translateAndPopulateDevicePermissions=function(e,t,n){var a=this;this.$window.desktopSettings&&this.$window.desktopSettings.devicePermissionsEnabledV2&&e.devicePermissions&&(_.includes(t,"staticTabs")||_.includes(t,"galleryTabs"))&&_.forEach(e.devicePermissions,function(e){switch(e){case a.constants.deviceTypeForAppPermission.media:n.push(a.$translate.instant(a.resources.strings.extension_addAppDialogDeviceConsent));break;case a.constants.deviceTypeForAppPermission.geolocation:n.push(a.$translate.instant(a.resources.strings.extension_addAppDialogLocationConsent));break;case a.constants.deviceTypeForAppPermission.notifications:n.push(a.$translate.instant(a.resources.strings.extension_addAppDialogNotificationsConsent));break;case a.constants.deviceTypeForAppPermission.openExternal:n.push(a.$translate.instant(a.resources.strings.extension_addAppDialogExternalLinkContent));break;case a.constants.deviceTypeForAppPermission.midi:n.push(a.$translate.instant(a.resources.strings.extension_addAppDialogMIDIContent))}})},e.prototype.populateTenantNameAsNeeded=function(e){var t=this;this.enableTenantOwnedApps&&e.tenantId?this.$q.all([this.tenantService.getTenants(),this.authenticationService.getUserInformation()]).then(function(e){var n=_.find(e[0],function(t){return t.tenantId===e[1].profile.tid});t.strMoreFromDeveloper=t.$translate.instant(t.resources.strings.extension_addAppDialogV3_moreFromDeveloper,{developerName:n.tenantName}),t.strNavMoreFromDeveloper=t.$translate.instant(t.resources.strings.extension_addAppDialogV3_navigation_moreFromDeveloper,{developerName:n.tenantName}),t.strCategoriesOrTenant=n.tenantName}):(this.strMoreFromDeveloper=this.$translate.instant(this.resources.strings.extension_addAppDialogV3_moreFromDeveloper,{developerName:e.developerName}),this.strNavMoreFromDeveloper=this.$translate.instant(this.resources.strings.extension_addAppDialogV3_navigation_moreFromDeveloper,{developerName:e.developerName}),this.strCategoriesOrTenant=_(e.categories).map(function(e){return t.$translate.instant(t.resources.strings[t.constants.extensibility.store.AppStoreCategoryStringMapping[e]])}).filter(function(e){return e}).take(3).join(this.$translate.instant(this.resources.strings.extension_addAppDialog_category_separator)))},e.prototype.populateMoreAppsFromSameDeveloper=function(e){var t=this,n=e.tenantId?function(t){return e.tenantId===t.tenantId&&e.id!==t.id}:function(t){return e.developerName===t.developerName&&e.id!==t.id&&!t.externalId},a={category:teamspace.services.AppsServiceCategoryFilter.All},i=this.appsService.getInstalledAppsForUser(a),o=this.appsService.getUserAppDefinitions("add-app-dialog-v3",a);this.$q.all([i,o]).then(function(e){var t=e[0],a=e[1];return teamspace.services.AppsServiceUtils.filterToStoreFrontApps(t,a).filter(function(e){return n(e)})}).then(function(e){t.moreAppsFromDeveloper=_(e).map(function(e){return{id:e.id,largeImageUrl:e.largeImageUrl,largeImageUrlUseNgInclude:t.utilityService.useNgIncludeForIcon(e.largeImageUrl),strAccentColor:e.accentColor,strName:e.name}}).value()})},e.prototype.populateScreenshotsAndVideos=function(e){var t=this;if(!e.officeAssetId)return this.screenshotUrls=e.screenshotUrls,void(this.videoUrls=e.videoUrl?[this.convertVideoUrl(e.videoUrl)]:[]);this.appsService.getOfficeStoreAppDetails(e.officeAssetId).then(function(e){t.screenshotUrls=e.screenshotUrls||[];var n=e.videoUrl?[e.videoUrl]:[];t.videoUrls=_.map(n,function(e){return t.convertVideoUrl(e)}),t.isMediaPotential=t.screenshotUrls.length>0||t.videoUrls.length>0}).finally(function(){t.shouldShowCarousel=t.screenshotUrls.length>0||t.videoUrls.length>0})},e.prototype.handleSpecialFlowPermission=function(e,t){e&&e.id&&e.id.toLowerCase()===this.constants.extensibility.apps.appIds.flow&&t.push(this.$translate.instant(this.resources.strings.extension_addAppDialogPermissionMessageSendOrganization))},e.prototype.convertVideoUrl=function(e){var t=null,n=null;if(e.indexOf("youtube.com/")>0){var a=e.indexOf("v=");a>=0?t=e.substring(a+2):e.indexOf("/embed/")>0&&(n=e)}else if(e.indexOf("youtu.be/")>0)(i=e.lastIndexOf("/"))>=0&&(t=e.substring(i+1));else if(e.indexOf("vimeo.com/")>0){var i=e.lastIndexOf("/");if(i>=0){var o=e.substring(i+1);n=this.constants.urls.store.vimeoUrlFormat.replace("{vimeoId}",o)}}return t&&!n&&(n=this.constants.urls.store.youtubeUrlFormat.replace("{youtubeId}",t)),n},e.prototype.populateNavigationItems=function(){this.navigationMenuItems=[],this.navigationMenuItems.push({text:this.strNavAbout,onClick:this.scrollToAbout.bind(this)})},e.prototype.logOpenAppImageActionForTelemetry=function(e){var t=this,n=this.appDefinition,i=this.dialogData,o={action:a({outcome:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionOutcome.show.toString(),teamspace.components.PanelActionOutcome,this.loggingService)},this.getTelemetryCommonAction()),module:a({name:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelModuleName.openAddAppDialogImage.toString(),teamspace.components.PanelModuleName,this.loggingService),summary:"Open the image"},this.getTelemetryCommonModule()),app:this.getAppInformationForTelemetry(n,i,e)};this.analyticsService.getAnalyticsPanelActionEventData(o).then(function(e){return t.analyticsService.sendPanelAction(e)}).catch(function(e){t.logger.error("failed to log view app action "+e)})},e.prototype.logViewAppActionForTelemetry=function(){var e=this,t=this.appDefinition,n=this.dialogData,i={action:a({outcome:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionOutcome.closeDialog.toString(),teamspace.components.PanelActionOutcome,this.loggingService)},this.getTelemetryCommonAction()),module:a({name:teamspace.shared.AttributeHelper.tryGetEnum(n.entryPoint===teamspace.components.AddAppDialogEntryPoint.AppsManagementTabView||n.entryPoint===teamspace.components.AddAppDialogEntryPoint.GroupChatAppsManagementView?teamspace.components.PanelModuleName.okButton.toString():teamspace.components.PanelModuleName.closeAddAppDialog.toString(),teamspace.components.PanelModuleName,this.loggingService),summary:"Ok and close the consent dialog"},this.getTelemetryCommonModule()),app:this.getAppInformationForTelemetry(t,n)};this.analyticsService.getAnalyticsPanelActionEventData(i).then(function(t){return e.analyticsService.sendPanelAction(t)}).catch(function(t){e.logger.error("failed to log view app action "+t)})},e.prototype.logInstallAppActionForTelemetry=function(e,t){var n=this;clearTimeout(this.logViewFuncHandle),_.defer(function(){var i={action:a({outcome:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionOutcome.submit.toString(),teamspace.components.PanelActionOutcome,n.loggingService)},n.getTelemetryCommonAction()),module:a({name:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelModuleName.addAppButton.toString(),teamspace.components.PanelModuleName,n.loggingService),summary:"Consent to add an app"},n.getTelemetryCommonModule()),app:a({},n.getAppInformationForTelemetry(e,t),{scope:teamspace.components.PanelAppScope.personal})};n.analyticsService.getAnalyticsPanelActionEventData(i).then(function(e){return n.analyticsService.sendPanelAction(e)}).catch(function(e){n.logger.error("failed to log install app action "+e)})})},e.prototype.getAppInformationForTelemetry=function(e,t,n){var a=teamspace.components.AppAnalyticsHelper.getAppAnalyticsData({appDefinition:e});return a.source=teamspace.shared.AttributeHelper.tryGetEnum(t.entryPoint.toString(),teamspace.components.AddAppDialogEntryPoint,this.loggingService),a.scenarioCapability=teamspace.components.PanelAppScenarioCapability.na,t.entryPoint===teamspace.components.AddAppDialogEntryPoint.DeepLink&&(a.deepLinkSource=t.deepLinkSource),a.hasScreenshots=this.isMediaPotential,void 0!==n&&(a.imageIndex=n),a},e.prototype.getTelemetryCommonAction=function(){return{gesture:teamspace.components.PanelActionGesture.click,scenario:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenario.addAppDialog.toString(),teamspace.components.PanelActionScenario,this.loggingService),scenarioType:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenarioType.appMgmt.toString(),teamspace.components.PanelActionScenarioType,this.loggingService)}},e.prototype.getTelemetryCommonModule=function(){return{type:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelModuleType.button.toString(),teamspace.components.PanelModuleType,this.loggingService)}},e.prototype.getLanguageForCode=function(e){var t=this.localizationService.getLanguageForCode(e);if(!t)return null;var n=t.nativeName;if(!n)return null;var a=e.contains("-"),i=n.indexOf(" (");return!a&&i>-1?n.substr(0,i):n},e.prototype.openErrorDialog=function(e){var t=this;_.defer(function(){t.dialogService.close(t.constants.lazyDialogs.addAppNew);var n={errorType:e};t.dialogService.openLazyDialog(t.constants.lazyDialogs.addAppNewError,t.constants.lazyModules.extensibilityDialogs,n)})},e.prototype.ensureAppDef=function(e){return e?this.$q.resolve(e):this.$q.reject("Did not find app definition")},e.prototype.ensureInstalledApp=function(e){return e&&e.appDefinition?this.$q.resolve(e):this.$q.reject("Did not find app entitlement or app definition")},e}();t.AddAppDialogV3Controller=g,s.module("teamspace.addAppDialogV3",["teamspace.addAppDialogV3.addButton","teamspace.addAppDialogV3.carousel","teamspace.addAppDialogV3.errorDialog"]).run(["constants","dialogService","$templateCache","settingsService",function(e,t,n,a){var o=a.valueAsBoolean(e.settings.names.enableNewAppInstallFlowV3),s=a.valueAsBoolean(e.settings.names.enableBotsInGroupChat);o&&s&&(n.put("components/extensibility/add-app-new-dialog/add-app-dialog-v3.html",i),t.register(e.lazyDialogs.addAppNew,{template:"components/extensibility/add-app-new-dialog/add-app-dialog-v3.html",className:"ts-modal-dialog custom-width ts-add-app-dialog-v3",closeByEscape:!1,closeByDocument:!0,ariaAuto:!1,ariaRole:"dialog",ariaLabelledById:"modalDialog-title"}))}]).controller("AddAppDialogV3Controller",g)},1850:function(e,t){e.exports='<div class="ts-add-app-dialog-v3-container" ng-controller="AddAppDialogV3Controller as aadc" aria-modal="true" acc-role="dialog">\n  <modal-dialog ng-if="aadc.appDefinition" add-close-icon="true" suppress-default-button="true" suppress-default-footer="true" data-tid="addAppDialogV3" track-panel-type="{{$root.trackConstants.panelType.addAppDialogV3}}">\n    <section class="ts-add-app-dialog-v3-header">\n      <div class="ts-add-app-dialog-v3-image-container">\n        <div ng-style="{ \'background\': aadc.strAccentColor }">\n          <ng-include ng-if="aadc.largeImageUrlUseNgInclude" src="aadc.largeImageUrl"/>\n          <img ng-if="!aadc.largeImageUrlUseNgInclude" role="img" alt="{{($root.resources.strings.extensibility_app_icon_alt|translate:{appName:aadc.strName})}}" aria-label="{{($root.resources.strings.extensibility_app_icon_alt|translate:{appName:aadc.strName})}}" ng-src="{{aadc.largeImageUrl}}" fallback-src="{{::aadc.fallbackIcon}}"/>\n        </div>\n      </div>\n      <div class="ts-add-app-dialog-v3-header-text" dir="auto">\n        <div class="ts-add-app-dialog-v3-header-text-big" ng-bind="aadc.strName"/>\n        <div class="ts-add-app-dialog-v3-categories" ng-bind="aadc.strCategoriesOrTenant"/>\n      </div>\n    </section>\n    <div ng-if="!aadc.isLargeMediaView" class="ts-add-app-dialog-v3-main-content" ng-keydown="aadc.mainContentKeyboard($event)">\n      <section class="ts-add-app-dialog-v3-left-rail">\n        <div ng-if="aadc.addButtonAttrs" class="ts-add-app-dialog-v3-left-rail-add-btn-container">\n          <ts-add-app-dialog-add-button add-button-attrs="aadc.addButtonAttrs"/>\n        </div>\n        <ul ng-keydown="aadc.navBtnKeyboard($event)" role="list" class="ts-add-app-dialog-v3-left-rail-navigation" ng-class="{ \'keyboard-mode\': aadc.isNavigationListKeyboardMode }">\n          <li>\n            <a role="listitem" class="ts-add-app-dialog-v3-left-rail-navigation-item" href="javascript:void(0)" ng-keydown="aadc.scrollToAbout($event)" ng-mousedown="aadc.scrollToAbout()" ng-class="{ \'ts-add-app-dialog-v3-active\': aadc.isAboutActive }">\n              {{aadc.strNavAbout}}\n            </a>\n          </li>\n          <li ng-if="aadc.moreAppsFromDeveloper && aadc.moreAppsFromDeveloper.length">\n            <a role="listitem" class="ts-add-app-dialog-v3-left-rail-navigation-item" href="javascript:void(0)" ng-keydown="aadc.scrollToMoreFromDeveloper($event)" ng-mousedown="aadc.scrollToMoreFromDeveloper()" ng-class="{ \'ts-add-app-dialog-v3-active\': aadc.isMoreFromDeveloperActive }">\n              {{aadc.strNavMoreFromDeveloper}}\n            </a>\n          </li>\n          <li>\n            <a role="listitem" class="ts-add-app-dialog-v3-left-rail-navigation-item" href="javascript:void(0)" ng-keydown="aadc.scrollToPrivacy($event)" ng-mousedown="aadc.scrollToPrivacy()" ng-class="{ \'ts-add-app-dialog-v3-active\': aadc.isPrivacyActive }">\n              {{aadc.strNavPrivacy}}\n            </a>\n          </li>\n        </ul>\n        <div class="ts-add-app-dialog-v2-left-rail-footer">\n          <button ng-if="aadc.backToInContextGalleryBtn" ng-click="aadc.backToInContextGalleryBtn.onClick()" class="ts-add-app-dialog-v3-back-button" track-scenario="{{::$root.trackConstants.trackScenario.addAppDialogV3BackButton}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.appMgmt}}" track-outcome="{{::$root.trackConstants.trackOutcome.nav}}">\n            <ng-include src="\'svg/icons-chevron-left.html\'"></ng-include>\n            {{::$root.resources.strings.extension_addAppDialog_back|translate}}\n          </button>\n        </div>\n      </section>\n      <section class="ts-add-app-dialog-v3-right-rail">\n        <div class="ts-add-app-dialog-v3-right-rail-header" ng-if="!aadc.isScrolledToTop"/>\n        <div class="scroll-region-container" ng-class="{ \'ts-add-app-dialog-v3-with-button\': aadc.backToInContextGalleryBtn }" simple-scrollbar customscrolleventonroot="{{::aadc.onScrollEventName}}">\n          <div class="ts-add-app-dialog-v3-scrolling-plate">\n\n            <div class="ts-add-app-dialog-v3-about">\n              <div ng-if="!aadc.shouldShowCarousel" class="ts-add-app-dialog-v3-section-name ts-add-app-dialog-v3-about-section-name">{{aadc.strAbout}}\n              </div>\n              <div ts-carousel class="ts-add-app-dialog-v3-carousel-holder" image-urls="aadc.screenshotUrls" video-urls="aadc.videoUrls" saved-state="aadc.carouselState" zoom-in="aadc.zoomInCarousel()" on-tabbing-out="aadc.focusCreatedBy()" ng-if="aadc.shouldShowCarousel"/>\n\n              <p class="ts-add-app-dialog-v3-description">\n                {{aadc.strAppDetail}}\n              </p>\n\n              <div ng-if="aadc.hasConfigurableTab">\n                <p class="ts-add-app-dialog-v3-capability-name">\n                  {{::$root.resources.strings.extension_capabilities_tabs|translate}}\n                </p>\n                {{::$root.resources.strings.extension_addAppDialogV3_capability_tab_desc|translate}}\n              </div>\n              <div ng-if="aadc.hasBot">\n                <p class="ts-add-app-dialog-v3-capability-name">\n                  {{::$root.resources.strings.extension_capabilities_bots|translate}}\n                </p>\n                {{::$root.resources.strings.extension_addAppDialogV3_capability_bot_desc|translate}}\n              </div>\n              <div ng-if="aadc.hasMessagingExtension">\n                <p class="ts-add-app-dialog-v3-capability-name">\n                  {{::$root.resources.strings.extension_addAppDialogV3_capability_messaging_extension_title|translate}}\n                </p>\n                {{::$root.resources.strings.extension_addAppDialogV3_capability_messaging_extension_desc|translate}}\n              </div>\n              <div ng-if="aadc.hasConnector">\n                <p class="ts-add-app-dialog-v3-capability-name">\n                  {{::$root.resources.strings.extension_addAppDialogV3_capability_connector_title|translate}}\n                </p>\n                {{::$root.resources.strings.extension_addAppDialogV3_capability_connector_desc|translate}}\n              </div>\n              <div ng-if="aadc.hasStaticTab">\n                <p class="ts-add-app-dialog-v3-capability-name">\n                  {{::$root.resources.strings.extension_addAppDialogV3_personalApp|translate}}\n                </p>\n                {{::$root.resources.strings.extension_addAppDialog_personal_tab_use|translate}}\n              </div>\n\n              <p class="ts-add-app-dialog-v3-created-by" ng-bind-html="aadc.strCreatedBy"></p>\n              <div class="ts-add-app-dialog-v3-version">\n                <span ng-if="aadc.strVersion" class="version" ng-bind="aadc.strVersion">\n                </span>\n              </div>\n            </div>\n\n            <div class="ts-add-app-dialog-v3-supported-languages" ng-if="aadc.supportedLanguages && aadc.supportedLanguages.length">\n              <span class="supported-languages" translate-with-html-params translate-id="extension_addAppDialog_supported_languages"></span>\n              <ul class="languages">\n                <li class="language" ng-repeat="language in aadc.supportedLanguages">{{language}}</li>\n              </ul>\n            </div>\n\n            <div class="ts-add-app-dialog-v3-more-from-developer" ng-if="aadc.moreAppsFromDeveloper && aadc.moreAppsFromDeveloper.length > 0">\n              <div class="ts-add-app-dialog-v3-section-name">{{aadc.strMoreFromDeveloper}}</div>\n              <div ng-focus="aadc.enableMoreFromDeveloperKeyboardMode()" ng-attr-tabindex="{{ aadc.isMoreFromDeveloperKeyboardMode ? \'-1\' : \'0\' }}"/>\n              <div class="ts-add-app-dialog-v3-more-apps-list" ng-class="{ \'more-from-developer-keyboard-mode\': aadc.isMoreFromDeveloperKeyboardMode }" ng-keydown="aadc.onMoreFromDeveloperKeyboard($event)" role="list">\n                <button class="ts-add-app-dialog-v3-more-apps-item" ng-repeat="moreAppsViewModel in aadc.moreAppsFromDeveloper" ng-click="aadc.openAnotherAppFromDeveloper(moreAppsViewModel.id, $event)" ng-attr-tabindex="{{ aadc.isMoreFromDeveloperKeyboardMode ? \'0\' : \'-1\' }}" role="listitem">\n                  <div class="ts-add-app-dialog-v3-more-apps-image" ng-style="{ \'background\': moreAppsViewModel.strAccentColor }">\n                    <ng-include ng-if="moreAppsViewModel.largeImageUrlUseNgInclude" src="moreAppsViewModel.largeImageUrl"/>\n                    <img ng-if="!moreAppsViewModel.largeImageUrlUseNgInclude" role="img" ng-src="{{moreAppsViewModel.largeImageUrl}}" alt="{{($root.resources.strings.extensibility_app_icon_alt|translate:{appName:moreAppsViewModel.strName})}}" aria-label="{{($root.resources.strings.extensibility_app_icon_alt|translate:{appName:moreAppsViewModel.strName})}}" fallback-src="{{::aadc.fallbackIcon}}"/>\n                  </div>\n                  <div class="ts-add-app-dialog-v3-more-apps-label" ng-bind="moreAppsViewModel.strName"/>\n                </button>\n              </div>\n            </div>\n\n            <div class="ts-add-app-dialog-v3-privacy">\n              <div class="ts-add-app-dialog-v3-section-name">{{aadc.strPrivacyTitle}}</div>\n              <p ng-bind-html="aadc.strPrivacyDescription"></p>\n              <div ng-if="aadc.strExistingPermissionList && aadc.strExistingPermissionList.length > 0">\n                <div>{{::$root.resources.strings.extension_addAppDialogAppPermissionTitle_new|translate}}</div>\n                <ul>\n                  <li ng-repeat="permission in aadc.strExistingPermissionList">{{permission}}</li>\n                </ul>\n              </div>\n              <div ng-if="aadc.strAdditionalPermissionList && aadc.strAdditionalPermissionList.length > 0">\n                \x3c!-- don\'t show following text if there\'re no existing permissions (i.e., only show them on upgrade flow) --\x3e\n                <div ng-if="aadc.strExistingPermissionList && aadc.strExistingPermissionList.length">\n                  {{::$root.resources.strings.extension_addAppDialogAppRequestPermissionTitle|translate}}\n                </div>\n                <ul>\n                  <li ng-repeat="permission in aadc.strAdditionalPermissionList">{{permission}}</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="ts-add-app-dialog-v3-right-rail-footer" ng-class="{ \'show\': !aadc.isScrolledToBottom, \'ts-add-app-dialog-v3-with-button\': aadc.backToInContextGalleryBtn }"/>\n      </section>\n    </div>\n    <div ng-if="aadc.isLargeMediaView" class="ts-add-app-dialog-large-media-view">\n      <div class="ts-add-app-dialog-large-media-container">\n        <div ts-carousel class="ts-add-app-dialog-v3-carousel-holder" image-urls="aadc.screenshotUrls" video-urls="aadc.videoUrls" saved-state="aadc.carouselState" on-tabbing-out="aadc.focusBackButton()"/>\n      </div>\n      <div class="ts-add-app-dialog-v3-footer">\n        <button class="ts-add-app-dialog-v3-back-to-detail" ng-click="aadc.zoomOutCarousel()" track-scenario="{{::$root.trackConstants.trackScenario.addAppDialogV3ImageViewBackButton}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.appMgmt}}" track-outcome="{{::$root.trackConstants.trackOutcome.nav}}">\n          <ng-include src="\'svg/icons-chevron-left.html\'"></ng-include>\n          {{::$root.resources.strings.extension_addAppDialog_back|translate}}\n        </button>\n      </div>\n    </div>\n  </modal-dialog>\n</div>'},1851:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(1852),i=function(){function e(e,t,n,a){this.botCardService=e,this.$translate=t,this.resources=n,this.$scope=a;var i=a.ngDialogData,o=i.appDefinition,s=i.card,r=i.selectedButton;this.privacyUrl=o.privacyUrl,this.termsOfUseUrl=o.termsOfUseUrl,this.largeImageUrl=o.largeImageUrl,this.dialogTitle=t.instant(n.strings.extensibility_app_install_consent_dialog_title,{appName:o.name}),this.errorMessage=t.instant(n.strings.extensibility_app_install_consent_dialog_error_message),this.footerButtons=[{text:t.instant(n.strings.extensibility_app_install_consent_dialog_continue),func:function(){a.closeThisDialog(i),e.installAppForUserInContext(o,r,s)},disabled:!1}]}return e.$inject=["botCardService","$translate","resources","$scope"],e}();t.AppInstallConsentDialogController=i,angular.module("teamspace.appInstallConsentDialog",["teamspace.constants","teamspace.botCardService"]).run(["constants","dialogService","$templateCache",function(e,t,n){n.put("components/extensibility/app-install-consent-dialog/app-install-consent-dialog.html",a),t.register(e.lazyDialogs.appInstallConsentDialog,{template:"components/extensibility/app-install-consent-dialog/app-install-consent-dialog.html",className:"ts-modal-dialog custom-width ts-app-install-consent-dialog",isPersistent:!0,closeByEscape:!0,closeByDocument:!0})}]).controller("AppInstallConsentDialogController",i)},1852:function(e,t){e.exports='<div class="app-install-consent-dialog ts-dialog" suppress-default-footer="true" ng-controller="AppInstallConsentDialogController as aicdc" data-tid="app-install-consent-dialog" acc-role="dialog">\n  <modal-dialog add-close-icon="true" right-align-buttons="true" footer-buttons="::aicdc.footerButtons" suppress-default-button="true">\n    <div class="ts-app-install-consent-dialog-header">\n      <div class="image-container">\n        <div class="image" ng-style="{ \'background\': aicdc.appDefinition.accentColor }">\n          <ng-include src="::aicdc.largeImageUrl"></ng-include>\n          <img role="img" alt="{{::($root.resources.strings.extensibility_app_icon_alt|translate:{appName:aicdc.appDefinition.name})}}" aria-label="{{::($root.resources.strings.extensibility_app_icon_alt|translate:{appName:aicdc.dialogTitle})}}" ng-src="{{::aicdc.appDefinition.largeImageUrl}}" ng-if="::!aicdc.utilityService.useNgIncludeForIcon(aicdc.appDefinition.largeImageUrl)"/>\n        </div>\n      </div>\n      <div class="ts-app-install-consent-dialog-header-title">\n        <h1 ng-bind="::aicdc.dialogTitle"></h1>\n      </div>\n    </div>\n    <div class="ts-app-install-consent-dialog-accept-message">\n      <span id="ts-add-app-dialog-permissions-header" translate-with-html-params translate-id="extensibility_app_install_consent_dialog_message" translate-values=\'{"privacyPolicy": "<a ng-href=\\"{{::aicdc.privacyUrl}}\\"\n                              title=\\"{{::aicdc.privacyUrl}}\\"\n                              rel=\\"noopener\n                              noreferrer\\"\n                              target=\\"_blank\\"><span translate-once=\\"{{::$root.resources.strings.inputExtension_task_module_preview_screen_consent_privacy}}\\"></span></a>",\n                              "termsOfUse": "<a ng-href=\\"{{::aicdc.termsOfUseUrl}}\\"\n                              title=\\"{{::aicdc.termsOfUseUrl}}\\"\n                              rel=\\"noopener\n                              noreferrer\\"\n                              target=\\"_blank\\"><span translate-once=\\"{{::$root.resources.strings.inputExtension_task_module_preview_screen_consent_termsOfUse}}\\"></span></a>"}\'></span>\n    </div>\n  </modal-dialog>\n</div>'},1853:function(e,t,n){"use strict";var a=this&&this.__assign||function(){return(a=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++){t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1854),o=function(){function e(e,t,n,a,i,o,s,r,p,l,c,d,h,g,u,m,v,f,S,y,A){this.$scope=e,this.$rootScope=t,this.$state=n,this.appsService=a,this.appsExtensionDefinitionService=i,this.channelService=o,this.channelTeamSortHelper=s,this.constants=r,this.dialogService=p,this.extensionDefinitionService=l,this.eventingService=c,this.navigationService=d,this.loggingService=h,this.routeUtilityService=g,this.uiOrchestrator=u,this.analyticsService=m,this.settingsService=v,this.tabService=f,this.teamMembershipPropertiesService=S,this.teamSettingsService=y,this.utilityService=A,this.userNavHandlers={},this.teamNavHandlers={},this.chatNavHandlers={},this.navCtx="app-installed-2",this.app=e.ngDialogData.app,this.appIcon=this.app.appDefinition.largeImageUrl,this.appIconIfNotSvg=A.useNgIncludeForIcon(this.app.appDefinition.largeImageUrl)?"":this.app.appDefinition.largeImageUrl,this.iconAccentColor=this.app.appDefinition.accentColor,this.autoNavigationOnDone=e.ngDialogData.autoNavigationOnDone,this.teamId=e.ngDialogData.teamId,this.teamName=e.ngDialogData.teamName,this.channelId=e.ngDialogData.teamId,this.chatId=e.ngDialogData.chatId,this.preselectChannel=e.ngDialogData.preselectChannel,this.messageId=e.ngDialogData.messageId,this.dialogIntent=e.ngDialogData.dialogIntent,this.isUserIntent=e.ngDialogData.dialogIntent===teamspace.components.AddAppDialogIntent.User,this.isChatIntent=v.valueAsBoolean(r.settings.names.enableInstallChatAppsFromStore)&&e.ngDialogData.dialogIntent===teamspace.components.AddAppDialogIntent.GroupChat,this.enableTabInlineConfig=v.valueAsBoolean(r.settings.names.enableTabInlineConfig),this.category=(this.isUserIntent?"user_":"")+e.ngDialogData.category,this.storeLaunchFromChat=e.ngDialogData.storeLaunchFromChat,this.instantiateChannelData(),this.botMri=this.app.appDefinition.bots&&this.app.appDefinition.bots.length>0?r.bots.keyPrefix+this.app.appDefinition.bots[0].id:void 0,this.isSvg=A.useNgIncludeForIcon(this.app.appDefinition.largeImageUrl),this.instantiateNavHandlers(),this.dialogIntent!==teamspace.components.AddAppDialogIntent.Team&&this.evaluateDisabledCapabilitiesWarning()}return e.$inject=["$scope","$rootScope","$state","appsService","appsExtensionDefinitionService","channelService","channelTeamSortHelper","constants","dialogService","extensionDefinitionService","eventingService","navigationService","loggingService","routeUtilityService","uiOrchestrator","analyticsService","settingsService","tabService","teamMembershipPropertiesService","teamSettingsService","utilityService"],e.prototype.channelSelected=function(){this.channels.length>0&&(this.channelId=this.channels[this.selectedChannelIndex].channelId)},e.prototype.navigate=function(e){if(this.eventingService.$emit(this.constants.events.app.closeGallery),this.$scope.closeThisDialog(),this.autoNavigationOnDone&&(this.dialogIntent===teamspace.components.AddAppDialogIntent.Team||this.dialogIntent===teamspace.components.AddAppDialogIntent.User||this.dialogIntent===teamspace.components.AddAppDialogIntent.GroupChat)){var t=this.loggingService.newScenario(this.constants.scenarios.extensibility.apps.appInstalledDialog.navigation);if(this.dialogIntent!==teamspace.components.AddAppDialogIntent.Team||this.channelId){var n=this.isUserIntent?this.userNavHandlers[e]:this.isChatIntent?this.chatNavHandlers[e]:this.teamNavHandlers[e];n?n.call(this,t):t.stop(this.getScenarioEventData())}else this.teamId&&(this.navigationService.navigateToTeam(this.teamId,this.navCtx),t.stop(this.getScenarioEventData()))}},e.prototype.instantiateNavHandlers=function(){this.userNavHandlers.bot=this.navigateToUserBot,this.userNavHandlers.tab=this.navigateToUserTab,this.userNavHandlers.composeExtension=this.navigateToUserComposeExtension,this.teamNavHandlers.bot=this.navigateToTeamBot,this.teamNavHandlers.tab=this.navigateToTeamTab,this.teamNavHandlers.connector=this.navigateToTeamConnector,this.teamNavHandlers.composeExtension=this.navigateToTeamComposeExtension,this.chatNavHandlers.bot=this.navigateToChatBot,this.chatNavHandlers.tab=this.navigateToChatTab},e.prototype.instantiateChannelData=function(){var e=this;this.selectedChannelIndex=0,this.teamId&&this.channelService.getTeamById(this.teamId).then(function(t){e.team=t;var n=0,a=[],i=e.channelTeamSortHelper.getVisibleAndOverflowChannels(e.team.channels);i.visibleChannels.concat(i.overflowChannels).forEach(function(t){if(t.objectId){e.preselectChannel===t.objectId&&(e.selectedChannelIndex=n,e.channelId=t.objectId);var i={type:teamspace.components.SelectorItemType.Channel,index:n++,channelId:t.objectId,text:t.displayName};a.push(i)}}),e.channels=a,e.evaluateDisabledCapabilitiesWarning()})},e.prototype.navigateToUserBot=function(e){var t=new teamspace.services.userApp.UserApp(this.app,!1);this.navigationService.navigateToUserApp(this.$scope,t),e.stop(this.getScenarioEventData()),this.logTelemetryForNavigation(teamspace.components.PanelActionScenario.navBot,this.app)},e.prototype.navigateToUserTab=function(e){var t=new teamspace.services.userApp.UserApp(this.app,!1);try{this.navigationService.navigateToUserApp(this.$scope,t),e.stop(this.getScenarioEventData()),this.logTelemetryForNavigation(teamspace.components.PanelActionScenario.navTab,this.app)}catch(t){e.fail(a({},this.getScenarioEventData(),{error:"Navigation to personal tab failed. "+t,error1:"Navigation to personal tab failed. "+t}))}},e.prototype.navigateToUserComposeExtension=function(e){var t=this;if(this.storeLaunchFromChat||!this.settingsService.valueAsBoolean(this.constants.settings.names.enablePowerBarAtCommands))try{this.navigationService.navigateToLastChatState(this.navCtx);this.executeOnEditorSync(this.channelId,function(e){var n={appId:e,type:t.constants.events.funStuff.type.inputExtension};t.eventingService.$emit(t.constants.events.app.installed,n)}.bind(this,this.app.appDefinition.id)),e.stop(this.getScenarioEventData()),this.logTelemetryForNavigation(teamspace.components.PanelActionScenario.navComposeExtension,this.app)}catch(t){e.fail(a({},this.getScenarioEventData(),{error:"Navigation to personal compose extension failed. "+t,error1:"Navigation to personal compose extension failed. "+t}))}else try{var n=this.app.appDefinition.inputExtensions[0];this.eventingService.$emit(this.constants.events.powerBar.atCommandBox,{appId:this.app.appDefinition.id,botId:n.botId,name:this.app.appDefinition.name,description:this.app.appDefinition.shortDescription,imageUrl:this.app.appDefinition.largeImageUrl,imageUrlSmall:this.app.appDefinition.smallImageUrl,accentColor:this.app.appDefinition.accentColor,commands:n.commands,canUpdateConfiguration:n.canUpdateConfiguration,isFavorite:n.isFavorited,isFeatured:teamspace.services.AppsServiceUtils.isAppFeatured(this.app),isInstalledPersonally:this.app.appDefinition.isInstalledPersonally,favoriteRank:n.order}),e.stop(this.getScenarioEventData()),this.logTelemetryForNavigation(teamspace.components.PanelActionScenario.navComposeExtension,this.app)}catch(t){e.fail(a({},this.getScenarioEventData(),{error:"Navigation to power bar for personal compose extension failed. "+t,error1:"Navigation to power bar for personal compose extension failed. "+t}))}},e.prototype.navigateToTeamBot=function(e){var t=this;try{this.navigateToChannelMessage();var n=this.preselectChannel===this.channelId?this.messageId:void 0;this.executeOnEditorSync(this.channelId,function(e){var a={botProfile:{memberCount:0,accountEnabled:!0,displayName:t.app.appDefinition.name,mri:t.botMri,type:t.constants.atMentions.type.bot},messageId:n,type:t.constants.atMentions.type.bot};t.eventingService.$emit(t.constants.events.app.installed,a)}.bind(this),n),e.stop(this.getScenarioEventData()),this.logTelemetryForNavigation(teamspace.components.PanelActionScenario.navBot,this.app,this.teamId,this.channelId)}catch(t){e.fail(a({},this.getScenarioEventData(),{error:"Navigation to a team's channel to add a bot failed. "+t,error1:"Navigation to a team's channel to add a bot failed. "+t}))}},e.prototype.navigateToTeamComposeExtension=function(e){var t=this;try{this.navigateToChannelMessage();var n=this.preselectChannel===this.channelId?this.messageId:void 0;this.executeOnEditorSync(this.channelId,function(e){var a={appId:e,messageId:n,type:t.constants.events.funStuff.type.inputExtension};t.eventingService.$emit(t.constants.events.app.installed,a)}.bind(this,this.app.appDefinition.id),n),e.stop(this.getScenarioEventData()),this.logTelemetryForNavigation(teamspace.components.PanelActionScenario.navComposeExtension,this.app,this.teamId,this.channelId)}catch(t){e.fail(a({},this.getScenarioEventData(),{error:"Navigation to a team's channel to add a compose extension failed. "+t,error1:"Navigation to a team's channel to add a compose extension failed. "+t}))}},e.prototype.navigateToTeamTab=function(e){var t=this;try{this.navigationService.navigateToChannel(this.channelId,this.navCtx),this.extensionDefinitionService.getExtensionDefinition(this.app.appDefinition.id).then(function(e){var n=new teamspace.services.ExtensionInstanceViewModel(e,t.constants);if(t.enableTabInlineConfig){var i=teamspace.components.AppAnalyticsHelper.getAppAnalyticsData(t.app,t.teamId,t.channelId),o={actionGesture:teamspace.components.PanelActionGesture.click,actionOutcome:teamspace.components.PanelActionOutcome.nav,actionScenario:teamspace.components.PanelActionScenario.createUnconfigTab,actionScenarioType:teamspace.components.PanelActionScenarioType.tabs,moduleType:teamspace.components.PanelModuleType.button,moduleName:teamspace.components.PanelModuleName.addAppButton,moduleSummary:"Create an unconfigured tab",app:a({},i,{scope:teamspace.components.PanelAppScope.team,scenarioCapability:teamspace.components.PanelAppScenarioCapability.tabs}),dataBag:{appId:t.app.appDefinition.id,threadId:t.channelId}};t.tabService.createTab(t.channelId,n,!1,!0,!0,!0,o,!0)}else t.dialogService.openLazyDialog(t.constants.lazyDialogs.tabInstanceConfiguration,t.constants.lazyModules.extensibilityTabs,{tabDefinition:e,tabInstance:n,threadId:t.channelId,operationType:teamspace.components.DialogTabMenuOperationType.AddTabSettings})}).catch(function(n){e.fail(a({},t.getScenarioEventData(),{error:"Navigation to a team's channel to add a tab failed. "+n,error1:"Navigation to a team's channel to add a tab failed. "+n}))}),e.stop(this.getScenarioEventData()),this.logTelemetryForNavigation(teamspace.components.PanelActionScenario.navTab,this.app,this.teamId,this.channelId)}catch(t){e.fail(a({},this.getScenarioEventData(),{error:"Navigation to a team's channel to add a tab failed. "+t,error1:"Navigation to a team's channel to add a tab failed. "+t}))}},e.prototype.navigateToTeamConnector=function(e){var t=this;try{this.navigationService.navigateToChannel(this.channelId,this.navCtx),this.channelService.getChannelById(this.channelId).then(function(e){t.channel=e,t.dialogService.openLazyDialog(t.constants.lazyDialogs.connectorsManager,t.constants.lazyModules.extensibilityDialogs,{team:t.team,channel:t.channel,connectorId:t.app.appDefinition.connectors[0].connectorId})}),e.stop(this.getScenarioEventData()),this.logTelemetryForNavigation(teamspace.components.PanelActionScenario.navConnector,this.app,this.teamId,this.channelId)}catch(t){e.fail(a({},this.getScenarioEventData(),{error:"Navigation to a team's channel to add a connector failed. "+t,error1:"Navigation to a team's channel to add a connector failed. "+t}))}},e.prototype.navigateToChatBot=function(e){var t=this;try{this.navigationService.navigateToChat(this.chatId,this.navCtx);this.executeOnEditorSyncForChat(this.chatId,function(e){var n={botProfile:{memberCount:0,accountEnabled:!0,displayName:t.app.appDefinition.name,mri:t.botMri,type:t.constants.atMentions.type.bot},messageId:null,type:t.constants.atMentions.type.bot};t.eventingService.$emit(t.constants.events.app.installed,n)}.bind(this)),e.stop(this.getScenarioEventData())}catch(t){e.fail(a({},this.getScenarioEventData(),{error:"Navigation to a chat to add a bot failed. "+t,error1:"Navigation to a chat to add a bot failed. "+t}))}},e.prototype.navigateToChatTab=function(e){var t=this;try{this.navigationService.navigateToChat(this.chatId,this.navCtx),this.appsService.getInstalledAppForGroupChat(this.chatId,this.app.appDefinition.id).then(function(e){var n=new teamspace.services.ExtensionDefinitionViewModel(t.appsExtensionDefinitionService.createTabExtensionDefinition(e.appDefinition),t.constants),i=new teamspace.services.ExtensionInstanceViewModel(n,t.constants);if(t.enableTabInlineConfig){var o=teamspace.components.AppAnalyticsHelper.getAppAnalyticsData(t.app),s={actionGesture:teamspace.components.PanelActionGesture.click,actionOutcome:teamspace.components.PanelActionOutcome.nav,actionScenario:teamspace.components.PanelActionScenario.createUnconfigTab,actionScenarioType:teamspace.components.PanelActionScenarioType.tabs,moduleType:teamspace.components.PanelModuleType.button,moduleName:teamspace.components.PanelModuleName.addAppButton,moduleSummary:"Create an unconfigured tab",app:a({},o,{scope:teamspace.components.PanelAppScope.group,scenarioCapability:teamspace.components.PanelAppScenarioCapability.tabs}),dataBag:{appId:t.app.appDefinition.id,threadId:t.chatId}};t.tabService.createTab(t.chatId,i,!1,!0,!0,!0,s,!0)}else t.dialogService.openLazyDialog(t.constants.lazyDialogs.tabInstanceConfiguration,t.constants.lazyModules.extensibilityTabs,{tabDefinition:n,tabInstance:i,threadId:t.chatId,operationType:teamspace.components.DialogTabMenuOperationType.AddTabSettings})}),e.stop(this.getScenarioEventData())}catch(t){e.fail(a({},this.getScenarioEventData(),{error:"Navigation to a chat to add a tab failed. "+t,error1:"Navigation to a chat to add a tab failed. "+t}))}},e.prototype.executeOnEditorSync=function(e,t,n){var a=this,i=this.$rootScope.$on(this.constants.events.messages.focusInEditor,function(o,s){var r=s&&s.replyChainId;if(n&&n==r||!r&&!n){var p=a.routeUtilityService.getRootRouteParams();(!e||p&&p.threadId===e)&&a.uiOrchestrator.nextFrame(teamspace.services.UiOrchestratorPriority.Low,function(){t()}),i&&i()}})},e.prototype.executeOnEditorSyncForChat=function(e,t){var n=this,a=this.$rootScope.$on(this.constants.events.messages.focusInEditor,function(){var i=n.routeUtilityService.getRootRouteParams();(!e||i&&i.peopleSlug===e)&&n.uiOrchestrator.nextFrame(teamspace.services.UiOrchestratorPriority.Low,function(){t()}),a&&a()})},e.prototype.navigateToChannelMessage=function(){this.messageId&&this.preselectChannel===this.channelId?this.$state.go(this.constants.states.appConversation,{middlePane:this.constants.messages.panes.conversations,notify:!1,reload:!1,slug:"unknown",groupName:"unknown",threadId:this.channelId,messageId:this.messageId,openReply:!0,ctx:this.constants.navigation.context.channel,navCtx:this.constants.navContext.deepLink,deepLinkContext:this.constants.deepLinkTypes.channel}):this.navigationService.navigateToChannel(this.channelId,this.navCtx)},e.prototype.hasTeamScope=function(e){return!!(e&&e.length>0)&&_.every(e,function(e){return!!(e.scopes&&e.scopes.length>0)&&_.some(e.scopes,function(e){return"Team"===e})})},e.prototype.hasPersonalScope=function(e){return!!(e&&e.length>0)&&_.some(e,function(e){return!!(e.scopes&&e.scopes.length>0)&&_.some(e.scopes,function(e){return"Personal"===e})})},e.prototype.hasGroupChatScope=function(e){return!!(e&&e.length>0)&&_.some(e,function(e){return!!(e.scopes&&e.scopes.length>0)&&_.some(e.scopes,function(e){return"GroupChat"===e})})},e.prototype.logTelemetryForNavigation=function(e,t,n,a){var i=this,o={action:{gesture:teamspace.components.PanelActionGesture.click,outcome:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionOutcome.nav.toString(),teamspace.components.PanelActionOutcome,this.loggingService),scenario:teamspace.shared.AttributeHelper.tryGetEnum(e.toString(),teamspace.components.PanelActionScenario,this.loggingService),scenarioType:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenarioType.nav.toString(),teamspace.components.PanelActionScenarioType,this.loggingService)},module:{name:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelModuleName.navigationButton.toString(),teamspace.components.PanelModuleName,this.loggingService),type:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelModuleType.nav.toString(),teamspace.components.PanelModuleType,this.loggingService),summary:"Post app installation navigation"},app:teamspace.components.AppAnalyticsHelper.getAppAnalyticsData(t,n,a),dataBag:{teamId:n,channelId:a}};this.analyticsService.getAnalyticsPanelActionEventData(o).then(function(e){i.analyticsService.sendPanelAction(e)})},e.prototype.isAddingTabEnabled=function(){return this.dialogIntent!==teamspace.components.AddAppDialogIntent.Team||!this.teamId||(this.teamMembershipPropertiesService.isAdmin(this.team.objectId)||this.teamSettingsService.canAddTab(this.team.objectId))},e.prototype.isAddingConnectorEnabled=function(){return this.dialogIntent!==teamspace.components.AddAppDialogIntent.Team||!this.teamId||(this.teamMembershipPropertiesService.isAdmin(this.team.objectId)||this.teamSettingsService.canAddConnector(this.team.objectId))},e.prototype.evaluateDisabledCapabilitiesWarning=function(){this.showDisabledCapabilitiesWarning=this.app.appDefinition.galleryTabs&&this.app.appDefinition.galleryTabs.length>0&&!this.isAddingTabEnabled()||this.app.appDefinition.connectors&&this.app.appDefinition.connectors.length>0&&!this.isAddingConnectorEnabled()},e.prototype.getScenarioEventData=function(){return this.app?{appId:this.app.appDefinition.id,externalId:this.app.appDefinition.externalId,tenantId:this.app.appDefinition.tenantId}:null},e}();t.AppInstalledDialogV2Controller=o,angular.module("teamspace.appInstalledDialogV2",[]).run(["constants","dialogService","$templateCache",function(e,t,n){n.put("components/extensibility/app-installed-dialog-v2/app-installed-dialog-v2.html",i),t.register(e.lazyDialogs.appInstalledV2,{template:"components/extensibility/app-installed-dialog-v2/app-installed-dialog-v2.html",className:"ts-modal-dialog custom-width ts-app-installed-dialog-v2",closeByEscape:!0,closeByDocument:!0,ariaAuto:!1,ariaRole:"dialog",ariaLabelledById:"modalDialog-title"})}]).controller("AppInstalledDialogV2Controller",o)},1854:function(e,t){e.exports='<div class="ts-app-installed-dialog-v2 ts-modal-dialog-container" ng-controller="AppInstalledDialogV2Controller as aidc" acc-role="dialog">\n  <modal-dialog suppress-default-button="true" data-tid="appInstalledDialogV2" add-close-icon="true" skip-auto-focus="true">\n    <section class="app-installed-dialog-text">\n      <div class="image-container">\n          <ng-include src="aidc.app.appDefinition.largeImageUrl" ng-if="::aidc.useNgIncludeForIcon"></ng-include>\n          <img ng-src="{{::aidc.app.appDefinition.largeImageUrl}}" ng-if="::!aidc.useNgIncludeForIcon"/>\n      </div>\n      <h1 ng-if="::aidc.isUserIntent" class="installed-title">\n        <span class="app-font-title2-semibold" dir="auto" translate-with-html-params translate-id="extensibility_installed_dialog_title_for_you" translate-values=\'{"appName":"{{aidc.app.appDefinition.name}}"}\'>\n        </span>\n      </h1>\n      <h1 ng-if="::(!aidc.isUserIntent && !aidc.isChatIntent)" class="installed-title">\n        <div class="app-font-title2-semibold installed-title-text" translate-with-html-params translate-id="extensibility_installed_dialog_install_app" translate-values=\'{"appName":"{{aidc.app.appDefinition.name}}", "teamName": "{{aidc.teamName}}"}\'></div>\n      </h1>\n      <h1 ng-if="::aidc.isChatIntent" class="installed-title">\n        <div class="app-font-title2-semibold installed-title-text" translate-with-html-params translate-id="extensibility_installed_dialog_title_for_chat" translate-values=\'{"appName":"{{aidc.app.appDefinition.name}}"}\'></div>\n      </h1>\n    </section>\n    <section ng-if="::(!aidc.isUserIntent && !aidc.isChatIntent)" class="channel-selector">\n      <span class="text app-font-base app-gray-02" translate-once="{{::$root.resources.strings.extensibility_installed_dialog_select_channel}}"></span>\n      <dropdown-select class="app-installed-dialog-channel-selector" ds-options="::aidc.channels" ds-text-field="text" ds-value-field="index" ds-selected-value="aidc.selectedChannelIndex" ds-on-change="aidc.channelSelected()">\n      </dropdown-select>\n    </section>\n    <section class="app-installed-dialog-user-guides">\n      <span class="text-features app-font-base app-gray-02" translate-once="{{::$root.resources.strings.extensibility_installed_dialog_set_up_feature}}"></span>\n      <div class="user-guide" ng-if="::(aidc.app.appDefinition.bots && aidc.app.appDefinition.bots.length > 0 && aidc.hasTeamScope(aidc.app.appDefinition.bots) && !aidc.isUserIntent && !aidc.isChatIntent)" aria-label="{{::$root.resources.strings.extensibility_consent_badge_bot|translate}} {{::$root.resources.strings.extension_addAppDialog_bot_capability|translate}}">\n        <div class="badge-icon"><ng-include class="icon" src="\'svg/icons-bot.html\'"></ng-include></div>\n        <div class="context">\n          <span class="type" translate-once="{{::$root.resources.strings.extensibility_consent_badge_bot}}"></span>\n          <div class="capability">\n            <span class="use-case app-gray-02" title="{{::$root.resources.strings.extension_addAppDialog_bot_capability|translate}}" translate-once="{{::$root.resources.strings.extension_addAppDialog_bot_capability}}"></span>\n          </div>\n        </div>\n        <button class="ts-btn ts-btn-secondary inset-border" data-tid="navigate-team-bot" ng-click="aidc.navigate(\'bot\')" track-click-silent="true"><span translate-once="{{::$root.resources.strings.extensibility_installed_dialog_go}}"></span></button>\n      </div>\n      <div class="user-guide" ng-if="::(((aidc.app.appDefinition.staticTabs && aidc.app.appDefinition.staticTabs.length > 0 && aidc.hasTeamScope(aidc.app.appDefinition.staticTabs)) || (aidc.app.appDefinition.galleryTabs && aidc.app.appDefinition.galleryTabs.length > 0 && aidc.hasTeamScope(aidc.app.appDefinition.galleryTabs))) && !aidc.isUserIntent && !aidc.isChatIntent)" aria-label="{{::$root.resources.strings.extensibility_consent_badge_tab|translate}} {{::$root.resources.strings.extension_addAppDialog_tab_capability|translate}}">\n        <div class="badge-icon"><ng-include class="icon" src="\'svg/icons-tab-badge.html\'"></ng-include></div>\n        <div class="context">\n          <span class="type" translate-once="{{::$root.resources.strings.extensibility_consent_badge_tab}}"></span>\n          <div class="capability">\n            <span class="use-case app-gray-02" title="{{::$root.resources.strings.extension_addAppDialog_tab_capability|translate}}" translate-once="{{::$root.resources.strings.extension_addAppDialog_tab_capability}}"></span>\n          </div>\n        </div>\n        <button class="ts-btn ts-btn-secondary inset-border" data-tid="navigate-team-tab" ng-disabled="aidc.app.appDefinition.galleryTabs && aidc.app.appDefinition.galleryTabs.length > 0 && !aidc.isAddingTabEnabled()" ng-click="aidc.navigate(\'tab\')" track-click-silent="true">\n          <span translate-once="{{::$root.resources.strings.extensibility_installed_dialog_go}}"></span>\n        </button>\n      </div>\n      <div class="user-guide" ng-if="::(aidc.app.appDefinition.connectors && aidc.app.appDefinition.connectors.length > 0 && aidc.hasTeamScope(aidc.app.appDefinition.connectors) && !aidc.isUserIntent && !aidc.isChatIntent)" aria-label="{{::$root.resources.strings.extensibility_consent_badge_connector|translate}} {{::$root.resources.strings.extension_addAppDialog_connector_capability|translate}}">\n        <div class="badge-icon"><ng-include class="icon" src="\'svg/icons-connector-badge.html\'"></ng-include></div>\n        <div class="context">\n          <span class="type" translate-once="{{::$root.resources.strings.extensibility_consent_badge_connector}}"></span>\n          <div class="capability">\n            <span class="use-case app-gray-02" title="{{::$root.resources.strings.extension_addAppDialog_connector_capability|translate}}" translate-once="{{::$root.resources.strings.extension_addAppDialog_connector_capability}}"></span>\n          </div>\n        </div>\n        <button class="ts-btn ts-btn-secondary inset-border" data-tid="navigate-team-connector" ng-disabled="aidc.app.appDefinition.connectors && aidc.app.appDefinition.connectors.length > 0 && !aidc.isAddingConnectorEnabled()" ng-click="aidc.navigate(\'connector\')" track-click-silent="true">\n          <span translate-once="{{::$root.resources.strings.extensibility_installed_dialog_go}}"></span>\n        </button>\n      </div>\n      <div class="user-guide" ng-if="::(aidc.app.appDefinition.inputExtensions && aidc.app.appDefinition.inputExtensions.length > 0 && aidc.hasTeamScope(aidc.app.appDefinition.inputExtensions) && !aidc.isUserIntent && !aidc.isChatIntent)" aria-label="{{::$root.resources.strings.extensibility_apps_messaging_option|translate}} {{::$root.resources.strings.extension_addAppDialog_compose_extension_capability|translate}}">\n        <div class="badge-icon"><ng-include class="icon" src="\'svg/icons-compose-extension-badge.html\'"></ng-include></div>\n        <div class="context">\n          <span class="type" translate-once="{{::$root.resources.strings.extensibility_apps_messaging_option}}"></span>\n          <div class="capability">\n            <span class="use-case app-gray-02" title="{{::$root.resources.strings.extension_addAppDialog_compose_extension_capability|translate}}" translate-once="{{::$root.resources.strings.extension_addAppDialog_compose_extension_capability}}"></span>\n          </div>\n        </div>\n        <button class="ts-btn ts-btn-secondary inset-border" data-tid="navigate-team-messaging" ng-click="aidc.navigate(\'composeExtension\')" track-click-silent="true"><span translate-once="{{::$root.resources.strings.extensibility_installed_dialog_go}}"></span></button>\n      </div>\n      <div class="user-guide" aria-label="{{::$root.resources.strings.extensibility_consent_badge_bot|translate}} {{::$root.resources.strings.extension_addAppDialog_personal_bot_use|translate}}" ng-if="::(aidc.app.appDefinition.bots && aidc.app.appDefinition.bots.length > 0 && aidc.hasPersonalScope(aidc.app.appDefinition.bots) && aidc.isUserIntent)">\n        <div class="badge-icon"><ng-include class="icon" src="\'svg/icons-bot.html\'"></ng-include></div>\n        <div class="context" id="ts-app-installed-dialog-v2-bot-label">\n          <span class="type" translate-once="{{::$root.resources.strings.extensibility_consent_badge_bot}}"></span>\n          <div class="capability">\n            <span class="use-case app-gray-02" title="{{::$root.resources.strings.extension_addAppDialog_personal_bot_use|translate}}" translate-once="{{::$root.resources.strings.extension_addAppDialog_personal_bot_use}}"></span>\n          </div>\n        </div>\n        <button class="ts-btn ts-btn-secondary inset-border" data-tid="navigate-personal-bot" ng-click="aidc.navigate(\'bot\')" track-click-silent="true" aria-describedby="ts-app-installed-dialog-v2-bot-label">\n          <span translate-once="{{::$root.resources.strings.extensibility_installed_dialog_open}}"></span>\n        </button>\n      </div>\n      <div class="user-guide" aria-label="{{::$root.resources.strings.extensibility_installed_dialog_app|translate}} {{::$root.resources.strings.extension_addAppDialog_personal_app_use|translate}}" ng-if="::(aidc.app.appDefinition.staticTabs && aidc.app.appDefinition.staticTabs.length > 0 && aidc.hasPersonalScope(aidc.app.appDefinition.staticTabs) && aidc.isUserIntent)">\n        <div class="badge-icon"><ng-include class="icon" src="\'svg/icons-person.html\'"></ng-include></div>\n        <div class="context" id="ts-app-installed-dialog-v2-app-label">\n          <span class="type" translate-once="{{::$root.resources.strings.extensibility_installed_dialog_app}}"></span>\n          <div class="capability">\n            <span class="use-case app-gray-02" title="{{::$root.resources.strings.extension_addAppDialog_personal_app_use|translate}}" translate-once="{{::$root.resources.strings.extension_addAppDialog_personal_app_use}}"></span>\n          </div>\n        </div>\n        <button class="ts-btn ts-btn-secondary inset-border" data-tid="navigate-personal-tab" ng-click="aidc.navigate(\'tab\')" track-click-silent="true" aria-describedby="ts-app-installed-dialog-v2-app-label">\n          <span translate-once="{{::$root.resources.strings.extensibility_installed_dialog_open}}"></span>\n        </button>\n      </div>\n      <div class="user-guide" ng-if="::(aidc.app.appDefinition.inputExtensions && aidc.app.appDefinition.inputExtensions.length > 0 && aidc.hasPersonalScope(aidc.app.appDefinition.inputExtensions) && aidc.isUserIntent)" aria-label="{{::$root.resources.strings.extensibility_apps_messaging_option|translate}} {{::$root.resources.strings.extension_addAppDialog_personal_compose_extension_use|translate}}">\n        <div class="badge-icon"><ng-include class="icon" src="\'svg/icons-compose-extension-badge.html\'"></ng-include></div>\n        <div class="context" id="ts-app-installed-dialog-v2-compose-extension-label">\n          <span class="type" translate-once="{{::$root.resources.strings.extensibility_apps_messaging_option}}"></span>\n          <div class="capability">\n            <span class="use-case app-gray-02" title="{{::$root.resources.strings.extension_addAppDialog_personal_compose_extension_use|translate}}" translate-once="{{::$root.resources.strings.extension_addAppDialog_personal_compose_extension_use}}"></span>\n          </div>\n        </div>\n        <button class="ts-btn ts-btn-secondary inset-border" data-tid="navigate-personal-messaging" ng-click="aidc.navigate(\'composeExtension\')" track-click-silent="true" aria-describedby="ts-app-installed-dialog-v2-compose-extension-label">\n          <span translate-once="{{::$root.resources.strings.extensibility_installed_dialog_open}}"></span>\n        </button>\n      </div>\n      <div class="user-guide" ng-if="aidc.app.appDefinition.bots && aidc.app.appDefinition.bots.length > 0 && aidc.hasGroupChatScope(aidc.app.appDefinition.bots) && aidc.isChatIntent" aria-label="{{::$root.resources.strings.extensibility_consent_badge_bot|translate}} {{::$root.resources.strings.extension_addAppDialog_bot_capability|translate}}">\n        <div class="badge-icon"><ng-include class="icon" src="\'svg/icons-bot.html\'"></ng-include></div>\n        <div class="context">\n          <span class="type" translate-once="{{::$root.resources.strings.extensibility_consent_badge_bot}}"></span>\n          <div class="capability">\n            <span class="use-case app-gray-02" title="{{::$root.resources.strings.extension_addAppDialog_bot_capability|translate}}" translate-once="{{::$root.resources.strings.extension_addAppDialog_bot_capability}}"></span>\n          </div>\n        </div>\n        <button class="ts-btn ts-btn-secondary inset-border" data-tid="navigate-chat-bot" ng-click="aidc.navigate(\'bot\')" track-click-silent="true"><span translate-once="{{::$root.resources.strings.extensibility_installed_dialog_go}}"></span></button>\n      </div>\n      <div class="user-guide" ng-if="aidc.app.appDefinition.galleryTabs && aidc.app.appDefinition.galleryTabs.length > 0 && aidc.hasGroupChatScope(aidc.app.appDefinition.galleryTabs) && aidc.isChatIntent" aria-label="{{::$root.resources.strings.extensibility_consent_badge_tab|translate}} {{::$root.resources.strings.extension_addAppDialog_tab_capability_for_chat|translate}}">\n        <div class="badge-icon"><ng-include class="icon" src="\'svg/icons-tab-badge.html\'"></ng-include></div>\n        <div class="context">\n          <span class="type" translate-once="{{::$root.resources.strings.extensibility_consent_badge_tab}}"></span>\n          <div class="capability">\n            <span class="use-case app-gray-02" title="{{::$root.resources.strings.extension_addAppDialog_tab_capability_for_chat|translate}}" translate-once="{{::$root.resources.strings.extension_addAppDialog_tab_capability_for_chat}}"></span>\n          </div>\n        </div>\n        <button class="ts-btn ts-btn-secondary inset-border" data-tid="navigate-chat-tab" ng-click="aidc.navigate(\'tab\')" track-click-silent="true">\n          <span translate-once="{{::$root.resources.strings.extensibility_installed_dialog_go}}"></span>\n        </button>\n      </div>\n    </section>\n    <section ng-if="::aidc.showDisabledCapabilitiesWarning" class="permission-error caption" translate-once="{{::$root.resources.strings.extension_installed_dialog_tabDisabled}}">\n    </section>\n  </modal-dialog>\n</div>'},1855:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(1856),i=n(146),o=function(){function e(t,n,a,i,o,s,r,p,l,c,d,h,g,u,m,v,f,S){this.$q=t,this.$document=n,this.$timeout=a,this.constants=i,this.ariaLiveService=o,this.channelService=s,this.channelTeamSortHelper=r,this.chatListService=p,this.chatSearchService=l,this.chatTitlesService=c,this.conversationsService=d,this.peopleService=h,this.teamMembershipPropertiesService=g,this.teamSettingsService=u,this.settingsService=m,this.loggingService=v,this.$translate=f,this.resources=S,this.searchString="",this.chats=[],this.teams=[],this.teamAndChannelConcatenatedList=[],this.showSuggestion=!0,this.showDropDown=!1,this.currentIndex=0;var y=this.initializeAllTeams();this.preselectChat&&this.appHasGroupChatScope&&this.initializeChat(this.preselectChat),this.appHasTeamScope&&this.initializeDefaultTeams(e.DEFAULT_TEAM_SIZE),this.appHasGroupChatScope&&this.initializeDefaultChats(e.DEFAULT_CHAT_SIZE),this.isAddAppDialogV3&&(this.appInstallScope===teamspace.components.AppInstallScope.GroupChat?this.initializeDefaultChats(e.DEFAULT_CHAT_SIZE):this.initializeDefaultTeamAndChannels(y,e.DEFAULT_TEAM_SIZE))}return e.$inject=["$q","$document","$timeout","constants","ariaLiveService","channelService","channelTeamSortHelper","chatListService","chatSearchService","chatTitlesService","conversationsService","peopleService","teamMembershipPropertiesService","teamSettingsService","settingsService","loggingService","$translate","resources"],e.prototype.showSelectorDropdown=function(){this.currentIndex=0,this.showDropDown=!0},e.prototype.closeSelectorDropdown=function(e){var t=e&&e.target;this.isChatAndTeamSelectorElement(t)||(this.showDropDown=!1)},e.prototype.filterBySearch=function(){var t=this.searchString&&this.searchString.toLowerCase();this.currentIndex=0,this.isAddAppDialogV3?this.appInstallScope===teamspace.components.AppInstallScope.Team?this.searchTeamsAndChannels(t):this.appInstallScope===teamspace.components.AppInstallScope.GroupChat&&this.searchChats(t):_.isEmpty(t)?(this.showSuggestion=!0,this.appHasTeamScope&&this.initializeDefaultTeams(e.DEFAULT_TEAM_SIZE),this.appHasGroupChatScope&&this.initializeDefaultChats(e.DEFAULT_CHAT_SIZE)):(this.showSuggestion=!1,this.appHasTeamScope&&this.searchTeams(t),this.appHasGroupChatScope&&this.searchChats(t)),this.isDropdownVisible()||this.showSelectorDropdown()},e.prototype.selectItem=function(e){this.searchString=e.text,this.selectedItem=e,this.setSelectedItem()},e.prototype.resetSelectedItem=function(){this.selectedItem&&(this.selectedItem=null,this.searchString="",this.setSelectedItem())},e.prototype.hoverRow=function(e){this.currentIndex=e},e.prototype.handleKeyDown=function(e){if(this.showDropDown)if(e.which===this.constants.keyCodes.down)e.preventDefault(),this.currentIndex=this.currentIndex>=this.getSearchResultsLength()-1?0:this.currentIndex+1,this.narrateCurrentItem(this.currentIndex);else if(e.which===this.constants.keyCodes.up)e.preventDefault(),this.currentIndex=this.currentIndex>0?this.currentIndex-1:this.getSearchResultsLength()-1,this.narrateCurrentItem(this.currentIndex);else if(e.which===this.constants.keyCodes.enter){e.preventDefault();var t=this.getCurrentItem(this.currentIndex);this.selectItem(t),this.closeSelectorDropdown(),this.$timeout(function(){var e=angular.element("#chat-and-team-selector-close-button");e&&e.focus()})}else e.which===this.constants.keyCodes.tab?this.closeSelectorDropdown():e.which===this.constants.keyCodes.escape&&(this.closeSelectorDropdown(),e.preventDefault(),e.stopPropagation())},e.prototype.setSelectedItem=function(){this.onItemSelected&&this.onItemSelected({selectedItem:this.selectedItem})},e.prototype.initializeAllTeams=function(){var e=this;return this.allTeams=[],this.channelService.getTeams().then(function(t){t=_.filter(t,function(e){return!e.isArchived}),(t=e.filterTeamsBySideloadingPermission(t)).sort(),t.forEach(function(t){var n=e.convertTeamSelector(t);e.preselectTeam===t.objectId&&e.selectItem(n),e.allTeams.push(n)})})},e.prototype.searchTeams=function(e){var t=this;this.teams=[],this.allTeams.forEach(function(n){n.text&&n.text.toLowerCase().contains(e)&&t.teams.push(n)})},e.prototype.searchTeamsAndChannels=function(e){this.teamAndChannelConcatenatedList=[];var t=e.split(" ");this.teamAndChannelConcatenatedList=this.teamAndChannelSearchInstance.search(t).getResults(5)},e.prototype.isGeneralChannel=function(e){var t=this.channelService.getParentTeamAndChannelByChannelId(e.channelId);return t&&t.channel&&t.channel.isGeneral},e.prototype.createGeneralChannel=function(e){return{name:this.$translate.instant(this.resources.strings.channel_general),channelId:e,type:teamspace.components.SelectorItemType.Channel,index:-1}},e.prototype.searchChats=function(t){var n=this;this.chats=[];var a={groupOnly:!1,ignoreCase:!0},i=this.chatSearchService.retrieveChats(t,a);i=(i=_.filter(i,function(e){return!n.shouldFilterChat(e)})).slice(0,e.MAX_CHAT_SIZE),this.convertChatsToSelectors(i)},e.prototype.initializeDefaultChats=function(e){var t=this;if(this.preselectChat)this.initializeChat(this.preselectChat);else{this.chats=[];var n=this.chatListService.getChatConversations(teamspace.services.ChatListType.RECENTS),a=_.filter(n,function(e){return!t.shouldFilterChat(e)}).slice(0,e);this.convertChatsToSelectors(a)}},e.prototype.getTeamlist=function(e){var t=this;return this.channelService.getTeams().then(function(n){n=_.filter(n,function(e){return!e.isArchived}),n=t.filterTeamsBySideloadingPermission(n);var a=t.channelTeamSortHelper.createOrderedTeamLists(n),i=_.union(a.favoriteTeamsByOrder,a.moreTeamsByName).slice(0,e);return t.$q.resolve(i)})},e.prototype.initializeDefaultTeams=function(e){var t=this;this.teams=[],this.getTeamlist(e).then(function(e){e.forEach(function(e){t.teams.push(t.convertTeamSelector(e))})})},e.prototype.initializeDefaultTeamAndChannels=function(e,t){var n=this;this.teamAndChannelConcatenatedList=[],this.getTeamlist().then(function(e){if(n.preselectTeam)for(var a=0,i=e;a<i.length;a++)if((l=i[a]).objectId===n.preselectTeam){var o=n.convertTeamSelector(l);return void n.selectItem(n.convertTeamAndChannelSelector(o,n.createGeneralChannel(o.teamId)))}for(var s=0,r=0,p=e;r<p.length;r++){var l=p[r];if(s>t)break;(o=n.convertTeamSelector(l)).installAppEnabled&&(n.teamAndChannelConcatenatedList.push(n.convertTeamAndChannelSelector(o,n.createGeneralChannel(o.teamId))),s++)}});var a=this.$translate.instant(this.resources.strings.channel_general);e.then(function(){var e=[];n.allTeams.forEach(function(t){if(t.text&&t.installAppEnabled){var a=n.convertTeamAndChannelSelector(t,n.createGeneralChannel(t.teamId));e.push(a),t.channels&&t.channels.length&&t.channels.forEach(function(a){if(!n.isGeneralChannel(a)){var i=n.convertTeamAndChannelSelector(t,a);e.push(i)}})}}),n.teamAndChannelSearchInstance=new i.Search(e,[new i.LevenshteinDistanceStrategy("teamname",{tokenizer:new i.SplitAndLeadingSubStrsTokenizer,getDistanceModifier:function(){return 0},getTargetText:function(e){return e.teamName.toLocaleLowerCase()},getThreshold:function(e){return e/2}}),new i.LevenshteinDistanceStrategy("channelname",{tokenizer:new i.SplitAndLeadingSubStrsTokenizer,getDistanceModifier:function(){return 0},getThreshold:function(e){return e/2},getTargetText:function(e){return e.channelName===a?e.teamName.toLocaleLowerCase():e.channelName.toLocaleLowerCase()}})])})},e.prototype.filterTeamsBySideloadingPermission=function(e){var t=this;return this.settingsService.valueAsBoolean(this.constants.settings.names.enableSideloadingEnforcement)&&this.appIsSideloaded?_.filter(e,function(e){return t.teamSettingsService.canUploadCustomApp(e.objectId)||t.teamMembershipPropertiesService.isAdmin(e.objectId)}):e},e.prototype.convertGroupChatSelector=function(e){var t=this;return this.chatTitlesService.buildChatTitles(e.id).then(function(n){var a=n?n.title:"",i=n?n.pictureMembers:[],o=t.peopleService.getPlGroupKeyFromPictureGroup(i);return{type:teamspace.components.SelectorItemType.Chat,id:e.id,text:a,pictureGroup:i,plGroupKey:o,isGroupChat:!0}})},e.prototype.convertOneOnOneChatSelector=function(e){return this.chatTitlesService.buildChatTitles(e.id).then(function(t){var n=t?t.title:"";return{type:teamspace.components.SelectorItemType.Chat,id:e.id,text:n,upn:e.otherMembers[0].upn||e.otherMembers[0].nameHint&&e.otherMembers[0].nameHint.upn||e.otherMembers[0].mri,displayName:e.otherMembers[0].nameHint&&e.otherMembers[0].nameHint.displayName||e.title,isGroupChat:!1}})},e.prototype.convertTeamAndChannelSelector=function(e,t){return{type:teamspace.components.SelectorItemType.Channel,index:null,teamId:e.teamId,teamName:e.text,channelName:t.name,channelId:t.channelId,text:e.text+" -> "+t.name,installAppEnabled:e.installAppEnabled,teamPicture:e.teamPicture,groupId:e.groupId,thumbnailUri:e.thumbnailUri,pictureETag:e.pictureETag,smtpAddress:e.smtpAddress}},e.prototype.convertTeamSelector=function(e){var t=this.conversationsService.getConversation(e.objectId),n=t?t.threadProperties[SkypeX.Services.ChatServiceUtils.ThreadProp_Picture]:null;n=n?n+this.constants.amsImageTemplate.thumbnail:null;var a,i=this.teamMembershipPropertiesService.isAdmin(e.objectId);a=this.settingsService.valueAsBoolean(this.constants.settings.names.enableSideloadingEnforcement)&&this.appIsSideloaded?this.teamSettingsService.canUploadCustomApp(e.objectId)||i:this.teamSettingsService.canAddApp(e.objectId);var o=void 0===i||void 0===a||(i||a);return{type:teamspace.components.SelectorItemType.Team,index:null,teamId:e.objectId,text:e.displayName,channels:this.convertChannelSelector(e.allChannels),installAppEnabled:o,teamPicture:n,groupId:e.siteInfo.groupId,thumbnailUri:e.thumbnailUri,pictureETag:e.pictureETag,smtpAddress:e.smtpAddress}},e.prototype.isChatAndTeamSelectorElement=function(e){return angular.element(e).closest("input.chat-and-team-selector-search").length>0},e.prototype.isDropdownVisible=function(){return!!this.$document.find("div.chat-and-team-dropdown")[0]},e.prototype.shouldFilterChat=function(e){return e.isHidden||e.isOneOnOneBotChat||e.isMeeting||!e.isUserMember||e.isSfB||e.isFederated||e.isThreadDisabled||SkypeX.Services.SkypeConversationLocal.isLie(e.id)},e.prototype.convertChatsToSelectors=function(e){var t=this,n=[],a=this.loggingService.newScenario(this.constants.scenarios.extensibility.chatAndTeamSelector.buildChatTitles);return e.forEach(function(e){var a=e.isOneOnOne?t.convertOneOnOneChatSelector(e):t.convertGroupChatSelector(e);n.push(a),a.then(function(e){t.chats.push(e)})}),this.$q.all(n).then(function(){a.stop()}).catch(function(e){a.fail({error:e})})},e.prototype.convertChannelSelector=function(e){var t=[];return e.forEach(function(e){t.push({channelId:e.objectId,name:e.displayName})}),t},e.prototype.getSearchResultsLength=function(){return this.teams.length+this.chats.length+this.teamAndChannelConcatenatedList.length},e.prototype.getCurrentItem=function(e){return this.isAddAppDialogV3&&this.appInstallScope===teamspace.components.AppInstallScope.Team?this.teamAndChannelConcatenatedList[e]:e>this.teams.length-1?this.chats[e-this.teams.length]:this.teams[e]},e.prototype.narrateCurrentItem=function(e){var t=this.getCurrentItem(e);this.ariaLiveService.update(t.text,!0)},e.prototype.initializeChat=function(e){var t=this,n=this.chatListService.getChatConversation(teamspace.services.ChatListType.PINNED,e),a=this.chatListService.getChatConversation(teamspace.services.ChatListType.RECENTS,e),i=n||a;(i.isOneOnOne?this.convertOneOnOneChatSelector(i):this.convertGroupChatSelector(i)).then(function(e){t.selectItem(e)})},e.DEFAULT_CHAT_SIZE=4,e.DEFAULT_TEAM_SIZE=4,e.MAX_CHAT_SIZE=20,e}();t.ChatAndTeamSelectorController=o,angular.module("teamspace.chatAndTeamSelector",[]).directive("chatAndTeamSelector",function(){return{restrict:"E",scope:{},bindToController:{isAddAppDialogV3:"<",appInstallScope:"<",appHasTeamScope:"<",appHasGroupChatScope:"<",appIsSideloaded:"<",onItemSelected:"&",preselectTeam:"<",preselectChat:"<"},templateUrl:"components/extensibility/chat-and-team-selector/chat-and-team-selector.html",controllerAs:"chatAndTeamSelector",controller:o}}).run(["$templateCache",function(e){e.put("components/extensibility/chat-and-team-selector/chat-and-team-selector.html",a)}])},1856:function(e,t){e.exports='<div class="ts-chat-and-team-selector ts-div" role="search">\n  <div outside-click="chatAndTeamSelector.closeSelectorDropdown()" class="ts-div">\n    <input sanitized class="ts-header-search ts-heading-font ng-valid-maxlength chat-and-team-selector-search single-line-truncation" ng-model="chatAndTeamSelector.searchString" placeholder="{{::$root.resources.strings.search_placeholderText|translate}}" aria-label="{{::$root.resources.strings.search_placeholderText|translate}}" autocapitalize="off" autocorrect="off" autocomplete="off" maxlength="150" ng-click="chatAndTeamSelector.showSelectorDropdown($event)" ng-change="chatAndTeamSelector.filterBySearch()" ng-disabled="chatAndTeamSelector.selectedItem" ng-keydown="chatAndTeamSelector.handleKeyDown($event)" title="{{chatAndTeamSelector.searchString}}">\n    <div class="input-group-btn ts-div">\n      <button class="ts-sym icons-search" ng-if="!chatAndTeamSelector.selectedItem" ng-click="chatAndTeamSelector.filterBySearch()" data-tid="searchBtn" aria-label="{{::$root.resources.strings.search_placeholderText|translate}}" tabindex="-1">\n        <ng-include src="\'svg/icons-search.html\'"></ng-include>\n      </button>\n      <button class="ts-sym icons-search app-icons-fill-hover" ng-if="chatAndTeamSelector.selectedItem" ng-click="chatAndTeamSelector.resetSelectedItem(); chatAndTeamSelector.filterBySearch()" data-tid="closeBtn" id="chat-and-team-selector-close-button" tabindex="0">\n        <ng-include src="\'svg/icons-close.html\'"></ng-include>\n      </button>\n    </div>\n  </div>\n</div>\n<div class="chat-and-team-dropdown" ng-if="chatAndTeamSelector.showDropDown">\n  <div class="dropdown-menu" acc-role="menu">\n    <div class="dropdown-menu-area">\n      <div class="dropdown-menu-content" simple-scrollbar scroll-helper scroll-current-index="chatAndTeamSelector.currentIndex" scroll-list-item-selector=".dropdown-item" scroll-list-element=".dropdown-menu-content">\n        <div class="dropdown-menu-items">\n          \x3c!-- Team Selector --\x3e\n          <div ng-if="chatAndTeamSelector.appHasTeamScope && chatAndTeamSelector.teams.length > 0" class="chat-and-team-dropdown-label">\n            <span ng-if="chatAndTeamSelector.showSuggestion" class="results-label app-small-font">\n              {{::$root.resources.strings.extension_addAppDialog_suggestions_team_label|translate}}\n            </span>\n            <span ng-if="!chatAndTeamSelector.showSuggestion" class="results-label app-small-font">\n              {{::$root.resources.strings.extension_addAppDialog_search_team_results_label|translate}}\n            </span>\n          </div>\n          <div ng-repeat="item in chatAndTeamSelector.teams track by $index" acc-role="menu-item" ng-mouseenter="chatAndTeamSelector.hoverRow($index)">\n            <button class="ts-sym dropdown-item" type="button" aria-hidden="true" ng-click="chatAndTeamSelector.selectItem(item)" ng-class="{ \'ts-selectedRow\': $index == chatAndTeamSelector.currentIndex}">\n              \x3c!-- Picture Load for Teams --\x3e\n              <div class="profile-img-parent">\n                <profile-picture css-class="profile-img team-icon" display-name="item.text" team-id="item.groupId" etag="item.pictureETag"></profile-picture>\n              </div>\n\n              <div class="result-data">\n                <div class="result-title single-line-truncation" title="{{item.text}}">\n                  {{item.text}}\n                </div>\n              </div>\n            </button>\n          </div>\n\n          \x3c!-- Chat Selector --\x3e\n          <div ng-if="chatAndTeamSelector.appHasGroupChatScope && chatAndTeamSelector.chats.length > 0" class="chat-and-team-dropdown-label">\n            <span ng-if="chatAndTeamSelector.showSuggestion" class="results-label app-small-font">\n              {{::$root.resources.strings.extension_addAppDialog_suggestions_chat_label|translate}}\n            </span>\n            <span ng-if="!chatAndTeamSelector.showSuggestion" class="results-label app-small-font">\n              {{::$root.resources.strings.extension_addAppDialog_search_chat_results_label|translate}}\n            </span>\n          </div>\n          <div ng-repeat="item in chatAndTeamSelector.chats track by $index" acc-role="menu-item" ng-mouseenter="chatAndTeamSelector.hoverRow($index + chatAndTeamSelector.teams.length)">\n            <button class="ts-sym dropdown-item" type="button" aria-hidden="true" ng-click="chatAndTeamSelector.selectItem(item)" ng-class="{ \'ts-selectedRow\': ($index + chatAndTeamSelector.teams.length) == chatAndTeamSelector.currentIndex}">\n              \x3c!-- Picture Load for Groups --\x3e\n              <div class="profile-img-parent" ng-if="item.isGroupChat">\n                <profile-picture css-class="ts-contact-image" group-id="item.plGroupKey" group-users="item.pictureGroup" source="chat-and-team-selector-dropdown"></profile-picture>\n              </div>\n\n              \x3c!-- Picture Load for Persons --\x3e\n              <div class="profile-img-parent" ng-if="!item.isGroupChat">\n                <profile-picture css-class="ts-contact-image" principal-name="item.upn" display-name="item.displayName" source="chat-and-team-selector-dropdown"></profile-picture>\n              </div>\n\n              <div class="result-data">\n                <div class="result-title single-line-truncation" title="{{item.text}}">\n                  {{item.text}}\n                </div>\n              </div>\n            </button>\n          </div>\n\n\n          \x3c!-- Team and Channel Selector --\x3e\n          <div ng-repeat="item in chatAndTeamSelector.teamAndChannelConcatenatedList track by $index" acc-role="menu-item" ng-mouseenter="chatAndTeamSelector.hoverRow($index)">\n            <button class="ts-sym dropdown-item" type="button" aria-hidden="true" ng-click="chatAndTeamSelector.selectItem(item)" ng-class="{ \'ts-selectedRow\': ($index + chatAndTeamSelector.teams.length + chatAndTeamSelector.chats.length) == chatAndTeamSelector.currentIndex}">\n              <div class="team-and-channel-picture">\n                <div class="profile-img-parent">\n                  <profile-picture css-class="profile-img team-icon" display-name="item.text" team-id="item.groupId" etag="item.pictureETag"></profile-picture>\n                </div>\n              </div>\n              <div class="team-and-channel-names">\n                <div ng-class="{ \'app-font-base-semibold\': $index == chatAndTeamSelector.currentIndex }">\n                  {{item.channelName}}\n                </div>\n                <div class="app-font-caption-regular">{{item.teamName}}</div>\n              </div>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>'},1857:function(e,t,n){"use strict";var a=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function a(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(a.prototype=n.prototype,new a)}}();Object.defineProperty(t,"__esModule",{value:!0});var i,o=n(1858),s=n(78),r=n(17);!function(e){e[e.Cancel=0]="Cancel",e[e.Save=1]="Save",e[e.Remove=2]="Remove"}(i||(i={}));var p=function(e){function t(t,n,a,i,o,s,r,p,l,c,d,h,g,u,m,v,f,S,y){var A=e.call(this,t,n,a,i,o,s,p,c,d,h,g,u,m,f,y)||this;return A.$q=t,A.$sce=n,A.$scope=a,A.$element=i,A.$interval=o,A.$timeout=s,A.$translate=r,A.$window=p,A.resources=l,A.constants=c,A.loggingService=d,A.extensionTabService=h,A.utilityService=g,A.sdkHelperService=u,A.settingsService=m,A.uiOrchestrator=v,A.htmlSanitizer=f,A.desktopUtilityService=S,A.navigationService=y,A.buttonIndex=0,A.removeTimer=null,A.saveTimer=null,A.addEmbeddedPageContainer=!0,A.saveFooterButtonText=r.instant(l.strings.extensibility_connectorInstanceConfigurationDialog_save),A.removeFooterButtonText=r.instant(l.strings.extensibility_connectorInstanceConfigurationDialog_remove),A.logger=d.newLogger("ConnectorInstanceConfiguration"),A.updateDialogConext(),a.$on("$destroy",function(){A.stopLoadTimer(),A.loadScenario&&(A.cancelScenario(A.loadScenario,"connectorConfigurationDestroyed"),A.loadScenario=null),A.saveTimer&&(s.cancel(A.saveTimer),A.saveTimer=null),A.removeTimer&&(s.cancel(A.removeTimer),A.removeTimer=null),A.addEmbeddedPageContainer&&(A.frame=null)}),A.iFrameTitle=r.instant(l.strings.extension_iFrame_ConnectorConfigurationTitle,{appName:g.stripHtml(g.escapeHtml(A.context.appDefinition.name))}),A}return a(t,e),t.$inject=["$q","$sce","$scope","$element","$interval","$timeout","$translate","$window","resources","constants","loggingService","extensionTabService","utilityService","sdkHelperService","settingsService","uiOrchestrator","htmlSanitizer","desktopUtilityService","navigationService"],t.prototype.createMessageHandler=function(t){var n=e.prototype.createMessageHandler.call(this,t);return n.addMessageHandler(this.constants.SdkMessageTypes.settings.setValidityState,this.handleSetValidityState.bind(this)),n.addMessageHandler(this.constants.SdkMessageTypes.settings.getSettings,this.handleGetSettings.bind(this)),n.addMessageHandler(this.constants.SdkMessageTypes.settings.setSettings,this.handleSetSettings.bind(this)),n.addMessageHandler(this.constants.SdkMessageTypes.settings.save.success,this.handleSaveSuccess.bind(this)),n.addMessageHandler(this.constants.SdkMessageTypes.settings.save.failure,this.handleSaveFailure.bind(this)),n},t.prototype.beginLoad=function(e){var t=this;return this.extensionTabService.formatTabUrl(e,this.context.entityId).then(function(e){return t.extensionTabService.isValidTabUrl(e,t.definitionId,!1).then(function(n){if(n){t.loadScenario&&(t.cancelScenario(t.loadScenario,"connectorConfigurationReloaded"),t.loadScenario=null);var a="";return a=t.context.appDefinition.externalId?"ext_view_connector_configuration_"+t.frameContext+"_sideloaded":"ext_view_connector_configuration_"+t.frameContext+"_"+(t.definitionId||"extension"),t.loadScenario=t.startScenario(a),t.setContainerUrl(e),t.startLoadTimer(),!0}return t.logger.warn("Attempted to load an invalid {0} connector url",t.context.appDefinition.connectors[0].connectorId),!1}).catch(function(e){return t.logger.error("Failed to validate {0} connector url with error: {1}",t.context.appDefinition.connectors[0].connectorId,e),!1})}).catch(function(e){return t.logger.error("Failed to format {0} connector url with error: {1}",t.context.appDefinition.connectors[0].connectorId,e),!1})},t.prototype.onLoadHandler=function(){this.stopLoadTimer(),this.loadScenario&&(this.stopScenario(this.loadScenario),this.loadScenario=null)},t.prototype.updateDialogConext=function(){switch(this.definitionId=this.context.appDefinition.id,this.frameContext=this.frameContexts.settings,this.context.operationType){case s.ConnectorDialogOperationType.AddConnectorInstance:this.footerButtons=[this.createDefaultButton(i.Cancel),this.createDefaultButton(i.Save)],this.buttonIndex=1,this.biScenarioName=teamspace.components.PanelActionScenario.addConnector,this.beginLoad(this.context.appDefinition.connectors[0].configurationUrl);break;case s.ConnectorDialogOperationType.ManageConnectorInstance:this.footerButtons=[this.createDefaultButton(i.Cancel),this.createDefaultButton(i.Remove),this.createDefaultButton(i.Save)],this.buttonIndex=2,this.biScenarioName=teamspace.components.PanelActionScenario.updateConnector,this.beginLoad(this.context.contentUrl)}this.context.footerButtons=this.footerButtons},t.prototype.createDefaultButton=function(e){var t=this;switch(e){case i.Cancel:return{text:this.$translate.instant(this.resources.strings.extensibility_connectorInstanceConfigurationDialog_cancel),func:function(){return t.cancelButtonClicked()},tid:"connectorInstanceConfiguration-backBtn",disabled:this.context.isBusy,secondaryStyle:!0,outcome:teamspace.components.PanelActionOutcome.nav,scenario:teamspace.components.PanelActionScenario.backToConnectorGallery,scenarioType:teamspace.components.PanelActionScenarioType.connectorMgmt,type:teamspace.components.PanelModuleType.nav,name:teamspace.components.PanelModuleName.connectorBackButtonClick,summary:"Back Button to Connector Gallery"};case i.Save:return{text:this.saveFooterButtonText,func:function(){return t.saveButtonClicked()},tid:"connectorInstanceConfiguration-saveBtn",disabled:!0,outcome:teamspace.components.PanelActionOutcome.submit,scenario:this.biScenarioName,scenarioType:teamspace.components.PanelActionScenarioType.connectorMgmt,type:teamspace.components.PanelModuleType.submit,name:teamspace.components.PanelModuleName.connectorSaveClick,summary:"Save Connector Configuration Button"};case i.Remove:return{text:this.removeFooterButtonText,func:function(){return t.removeButtonClicked()},tid:"connectorInstanceConfiguration-removeBtn",disabled:this.context.isBusy,secondaryStyle:!0,outcome:teamspace.components.PanelActionOutcome.submit,scenario:teamspace.components.PanelActionScenario.removeConnector,scenarioType:teamspace.components.PanelActionScenarioType.connectorMgmt,type:teamspace.components.PanelModuleType.submit,name:teamspace.components.PanelModuleName.connectorRemoveClick,summary:"Remove Connector Configuration Button"};default:return null}},t.prototype.setContainerUrl=function(e){var t=this,n=this.utilityService.parseUrl(e);this.sdkWindowMessageHandler&&(this.sdkWindowMessageHandler.destroy(),this.sdkWindowMessageHandler=null),this.frameSrc?(this.frameSrc="",this.$timeout(function(){t.frameSrc=n.href},0,!1)):this.frameSrc=n.href},t.prototype.handleSetValidityState=function(e,t){(t=Boolean(t))&&(this.context.footerButtons[this.buttonIndex].disabled=!t)},t.prototype.handleGetSettings=function(e){return this.context?{entityId:this.context.entityId,webhookUrl:this.context.webhookUrl,contentUrl:this.context.contentUrl,configName:this.context.configName,userObjectId:this.context.userObjectId,appType:this.context.appType}:(this.logger.error("Connectors: Connector context is not available for get settings."),null)},t.prototype.handleSetSettings=function(e,t){this.context?(this.context.configName=t.configName?String(t.configName):null,this.context.entityId=t.entityId?String(t.entityId):null,this.context.contentUrl=t.contentUrl?String(t.contentUrl):null):this.logger.error("Connectors: Connector context is not available for set settings.")},t.prototype.handleSaveSuccess=function(e){if(!this.context)return this.logger.error("Connectors: Connector context is not available for handleSaveSuccess."),null;this.context.onSave(this.context)},t.prototype.handleSaveFailure=function(e,t){if(!this.context)return this.logger.error("Connectors: Connector context is not available for handleSaveFailure."),null;this.changeSaveButtonState(!0,this.$translate.instant(this.resources.strings.extensibility_connectorInstanceConfigurationDialog_save),this.$translate.instantWithoutEncoding(this.resources.strings.extensibility_connectorInstanceConfigurationDialog_savingConfiguration_failed,{appName:this.context.appDefinition.name})),this.context.operationType===s.ConnectorDialogOperationType.ManageConnectorInstance&&this.changeRemoveButtonState(!0),this.saveTimer&&(this.$timeout.cancel(this.saveTimer),this.saveTimer=null),this.context.onFailure(_.assign(this.context,{errorMessage:t}))},t.prototype.cancelButtonClicked=function(){this.context.onCancel(this.context)},t.prototype.saveButtonClicked=function(){var e=this;this.changeSaveButtonState(!1,this.$translate.instant(this.resources.strings.extensibility_connectorInstanceConfigurationDialog_saving),this.$translate.instantWithoutEncoding(this.resources.strings.extensibility_connectorInstanceConfigurationDialog_savingConfigurationFooterMessage,{appName:this.context.appDefinition.name})),this.context.operationType===s.ConnectorDialogOperationType.ManageConnectorInstance&&this.changeRemoveButtonState(!1),this.saveTimer&&(this.$timeout.cancel(this.saveTimer),this.saveTimer=null),this.saveTimer=this.$timeout(function(){e.changeSaveButtonState(!0,e.$translate.instant(e.resources.strings.extensibility_connectorInstanceConfigurationDialog_save),e.$translate.instantWithoutEncoding(e.resources.strings.extensibility_connectorInstanceConfigurationDialog_savingConfiguration_failed,{appName:e.context.appDefinition.name})),e.context.operationType===s.ConnectorDialogOperationType.ManageConnectorInstance&&e.changeRemoveButtonState(!0),e.context.onFailure(_.assign(e.context,{errorMessage:"Timeout"}))},t.saveTimeout),this.sdkWindowMessageHandler.sendRequestMessage(this.frame,"settings.save")},t.prototype.removeButtonClicked=function(){var e=this;this.changeRemoveButtonState(!1,this.$translate.instant(this.resources.strings.extensibility_connectorInstanceConfigurationDialog_removing),this.$translate.instantWithoutEncoding(this.resources.strings.extensibility_connectorInstanceConfigurationDialog_removingConfigurationFooterMessage,{appName:this.context.appDefinition.name})),this.changeSaveButtonState(!1),this.removeTimer&&(this.$timeout.cancel(this.removeTimer),this.removeTimer=null),this.removeTimer=this.$timeout(function(){e.changeRemoveButtonState(!0,e.$translate.instant(e.resources.strings.extensibility_connectorInstanceConfigurationDialog_remove),e.$translate.instantWithoutEncoding(e.resources.strings.extensibility_connectorInstanceConfigurationDialog_removingConfiguration_failed,{appName:e.context.appDefinition.name})),e.changeSaveButtonState(!0)},t.removeTimeout),this.sdkWindowMessageHandler.sendRequestMessage(this.frame,"settings.remove"),this.context.onRemove(this.context)},t.prototype.changeSaveButtonState=function(e,t,n){this.context.isBusy=!e,this.context.footerButtons[this.buttonIndex].disabled=!e,t&&(this.context.footerButtons[this.buttonIndex].text=t),n&&(this.context.footerMessage="",this.context.footerMessage=n)},t.prototype.changeRemoveButtonState=function(e,t,n){this.context.isBusy=!e,this.context.footerButtons[1].disabled=!e,t&&(this.context.footerButtons[1].text=t),n&&(this.context.footerMessage="",this.context.footerMessage=n)},t.prototype.startLoadTimer=function(){var e=this;this.stopLoadTimer(),this.loadTimer=this.$timeout(function(){e.loadScenario&&(e.failScenario(e.loadScenario,"connectorConfigurationTimedOut"),e.loadScenario=null),e.loadTimer=null},t.loadTimeout,!1)},t.prototype.stopLoadTimer=function(){this.loadTimer&&(this.$timeout.cancel(this.loadTimer),this.loadTimer=null)},t.prototype.startScenario=function(e){return this.loggingService.newScenario(e)},t.prototype.stopScenario=function(e){this.context&&this.context.appDefinition&&this.context.appDefinition.externalId&&(e.eventData.externalId=this.context.appDefinition.externalId),e.stop()},t.prototype.failScenario=function(e,t){e.fail({errorInfo:e.name+"_failed_"+t})},t.prototype.cancelScenario=function(e,t){e.cancel({errorInfo:e.name+"_cancelled_"+t})},t.loadTimeout=15e3,t.removeTimeout=3e4,t.saveTimeout=3e4,t}(r.ExtensionFrameBase);t.ConnectorInstanceConfigurationController=p,angular.module("teamspace.connectorInstanceConfiguration",[]).run(["$templateCache",function(e){e.put("components/extensibility/connector-instance-configuration/connector-instance-configuration.html",o)}]).directive("connectorInstanceConfiguration",[function(){return{restrict:"E",replace:!0,bindToController:{context:"=?"},controllerAs:"connectorInstanceConfiguration",templateUrl:"components/extensibility/connector-instance-configuration/connector-instance-configuration.html",controller:p}}])},1858:function(e,t){e.exports='  <embedded-page-container ng-if="connectorInstanceConfiguration.frameSrc" class="extension-connector-configuration-container" url="{{connectorInstanceConfiguration.frameSrc}}" enable-message-passing="true" on-content-loaded="connectorInstanceConfiguration.onContentLoaded(isSuccessful, frameInfo)" on-message-received="connectorInstanceConfiguration.onMessageReceived(source, data)" iframe-title="{{::connectorInstanceConfiguration.iFrameTitle}}" page-identifier="{{connectorInstanceConfiguration.frameContext + \'_\' + connectorInstanceConfiguration.context.appDefinition.id}}">\n  </embedded-page-container>'},1859:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(1860),i=n(78),o=function(){function e(e){this.definition=e.ngDialogData.appDefinition,e.ngDialogData.action===i.ConnectorDialogOperationType.AddConnectorInstance?this.instanceConfigurationContext={operationType:i.ConnectorDialogOperationType.AddConnectorInstance,appDefinition:this.definition,webhookUrl:e.ngDialogData.webhookUrl,userObjectId:e.ngDialogData.userObjectId,appType:e.ngDialogData.appType,targetOrigin:e.ngDialogData.targetOrigin,onSave:e.ngDialogData.onSave,onFailure:e.ngDialogData.onFailure,onCancel:e.ngDialogData.onCancel}:e.ngDialogData.action===i.ConnectorDialogOperationType.ManageConnectorInstance&&(this.instanceConfigurationContext={operationType:i.ConnectorDialogOperationType.ManageConnectorInstance,appDefinition:this.definition,webhookUrl:e.ngDialogData.webhookUrl,contentUrl:e.ngDialogData.contentUrl,entityId:e.ngDialogData.entityId,configName:e.ngDialogData.configName,userObjectId:e.ngDialogData.userObjectId,appType:e.ngDialogData.appType,targetOrigin:e.ngDialogData.targetOrigin,onSave:e.ngDialogData.onSave,onFailure:e.ngDialogData.onFailure,onCancel:e.ngDialogData.onCancel,onRemove:e.ngDialogData.onRemove}),this.isSvg=!_.startsWith(this.definition.largeImageUrl,"data:")&&!_.startsWith(this.definition.largeImageUrl,"https:")}return e.$inject=["$scope"],e}();t.ConnectorInstanceConfigurationDialogController=o,angular.module("teamspace.connectorInstanceConfigurationDialog",[]).run(["constants","dialogService","$templateCache",function(e,t,n){n.put("components/extensibility/connector-instance-configuration-dialog/connector-instance-configuration-dialog.html",a),t.register(e.lazyDialogs.connectorInstanceConfigurationDialog,{template:"components/extensibility/connector-instance-configuration-dialog/connector-instance-configuration-dialog.html",className:"ts-modal-dialog custom-width ts-connector-instance-configuration-dialog",closeByEscape:!0,closeByDocument:!0,disableAnimation:!1,ariaAuto:!1,ariaRole:"dialog",ariaLabelledById:"modalDialog-title",ariaDescribedById:"connector-configuration-definition-summary"})}]).controller("ConnectorInstanceConfigurationDialogController",o)},1860:function(e,t){e.exports='<div class="ts-connector-instance-config" ng-controller="ConnectorInstanceConfigurationDialogController as cicdc" data-tid="connector-instance-config-dialog">\n  <modal-dialog dialog-title="{{cicdc.definition.name}}" footer-buttons="cicdc.instanceConfigurationContext.footerButtons" footer-message="cicdc.instanceConfigurationContext.footerMessage" suppress-default-button="true" dialog-busy="cicdc.instanceConfigurationContext.isBusy" add-close-icon="true">\n    <section>\n      <div class="ts-connector-configuration-definition">\n        <div class="ts-connector-configuration-definition-icon">\n          <ng-include src="::cicdc.definition.largeImageUrl" ng-if="::cicdc.isSvg"></ng-include>\n          <img class="image-icon" ng-src="{{cicdc.definition.largeImageUrl}}" ng-style="{ \'background\': cicdc.definition.accentColor }" ng-if="::!cicc.isSvg"/>\n        </div>\n        <div class="ts-connector-configuration-definition-info">\n          <div class="ts-connector-configuration-definition-summary" id="connector-configuration-definition-summary">{{::cicdc.definition.longDescription}}</div>\n          <div class="ts-connector-configuration-definition-summary">\n            <a ng-if="::cicdc.definition.developerUrl" ng-href="{{::cicdc.definition.developerUrl}}" rel="noopener noreferrer" target="_blank" translate-once="{{::$root.resources.strings.extension_tabLearnMoreLabel}}">\n            </a>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <section class="flex-fill ts-connector-configuration-custom-settings">\n      <connector-instance-configuration directive-flex-fill="true" context="::cicdc.instanceConfigurationContext"></connector-instance-configuration>\n    </section>\n  </modal-dialog>\n</div>'},1861:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(1862),i=n(78),o=function(){function e(e,t,n,a,i,o,s,r,p,l,c,d,h,g,u,m,v,f,S,y,A,b,D,C){var I=this;if(this.$location=e,this.$q=t,this.$element=a,this.$scope=i,this.$timeout=o,this.appStateService=s,this.eventingService=r,this.$window=l,this.appsService=c,this.authenticationService=d,this.channelMembershipPropertiesService=h,this.teamSettingsService=g,this.constants=u,this.dialogService=m,this.loggingService=v,this.settingsService=S,this.localizationService=y,this.$cookies=A,this.utilityService=b,this.isOffline=!1,this.enableConnectorApps=S.valueAsBoolean(u.settings.names.enableConnectorApps),this.enableInlineConnectorConfiguration=S.valueAsBoolean(u.settings.names.enableInlineConnectorConfiguration),this.team=i.ngDialogData.team,this.channel=i.ngDialogData.channel,this.connectorId=i.ngDialogData.connectorId,this.dialogTitle=p.instantWithoutEncoding(f.strings.connectorsManager_dialogTitle,{teamName:this.team.displayName,channelName:this.channel.displayName}),this.isDesktopApp=S.valueAsBoolean(u.settings.names.isDesktopApp),this.loadingScenario=v.newScenario(u.scenarios.extensibility.connectors.viewConnectorsManager),S.valueAsBoolean(u.settings.names.enableConnectorsOfflineDetection)&&(this.handleOfflineAppState(),this.registerOfflineEventHandler(i)),!this.isOffline){this.enableConnectorApps&&(this.getApps=c.getTeamAppDefinitions(this.channel.parentTeamId,"connectors-manager-dialog",{category:teamspace.services.AppsServiceCategoryFilter.Connectors},!0));var T=[];T.push(d.getSkypeTokens().then(function(e){I.skypeToken=e.skypeToken})),T.push(C.getServiceEndpoint(D.host).then(function(e){I.chatServiceHost=e})),T.push(d.getAuthTokens([u.connectors.resourceUri]).then(function(e){I.accessToken=e})),t.all(T).then(function(){I.initConnectorsSiteUrl(),o(function(){I.frame=l.document.getElementById("connectorsTileFrame"),I.frame.onload=function(){I.loadingScenario&&I.loadingScenario.mark("frame_load_or_redirect_complete")},I.frame.onerror=function(){I.loadingScenario&&(I.loadingScenario.fail(),I.loadingScenario=null)};var e=function(e){return I.processMessage(e)};l.addEventListener("message",e),i.$on("$destroy",function(){l.removeEventListener("message",e),I.loadingScenario&&(v.warn("Connectors - closed before loading finished"),I.loadingScenario.cancel(),I.loadingScenario=null)}),I.frame.src=n.trustAsResourceUrl(I.url)}).catch(function(e){I.loadingScenario&&(I.loadingScenario.fail(e),I.loadingScenario=null)})})}}return e.$inject=["$location","$q","$sce","$element","$scope","$timeout","appStateService","eventingService","$translate","$window","appsService","authenticationService","channelMembershipPropertiesService","teamSettingsService","constants","dialogService","loggingService","resources","settingsService","localizationService","$cookies","utilityService","chatServiceClient","geoRoutingService"],e.prototype.handleOfflineAppState=function(){this.appStateService.isOnline&&this.appStateService.isConnected||(this.loggingService.error("Connectors: Client Offline detection on initial load, Showing offline page."),this.failLoadingScenarioWithMarker("dialog_offline_or_disconnected_on_load"),this.isOffline=!0)},e.prototype.registerOfflineEventHandler=function(e){var t=this;this.eventingService.$on(e,this.constants.events.appState.changed,function(e,n){n.newState!==teamspace.services.ApplicationState.Offline&&n.newState!==teamspace.services.ApplicationState.Disconnected||(t.loggingService.error("Connectors: Client Offline detection on app state transition, Showing offline page."),t.failLoadingScenarioWithMarker("dialog_offline_or_disconnected_on_transition"),t.isOffline=!0)})},e.prototype.failLoadingScenarioWithMarker=function(e){this.loadingScenario&&(this.loadingScenario.mark(e),this.loadingScenario.fail(),this.loadingScenario=null)},e.prototype.processMessage=function(t){var n=this;this.$timeout(function(){if(t){var a=t.origin||t.originalEvent.origin;if(n.constants.connectors.management.eventDomainsAllowList.indexOf(a)<0)return void n.loggingService.info("Connectors: Ignoring event from domain not in allow-list - "+a);var i;try{i=JSON.parse(t.data)}catch(e){return void n.loggingService.error("Connectors: Did not receive valid JSON in event")}if(n.loggingService.info("Connectors: Received event - "+i.action),i.hasOwnProperty("keyEvent")){if("OnCancelMainEvent"===i.keyEvent)return void n.$scope.closeThisDialog();if("TabOnLastSection"===i.keyEvent){var o=n.$element.find(e.dialogCloseElementClass);if(o.length>0)return void o.focus()}}if(i.action&&i.action.endsWith("Error"))n.loadingScenario&&(n.loadingScenario.fail(i.data),n.loadingScenario=null),i.data.hasOwnProperty("nonPIIInfo")&&delete i.data.nonPIIInfo,n.loggingService.error("Received error from connectors "+JSON.stringify(i.data));else if("ListeningForToken"===i.action){n.loadingScenario&&n.loadingScenario.mark("ListeningForTokenReceived");var s={eventName:"AuthenticateUsingToken",authToken:n.accessToken,ssToken:n.skypeToken,teamId:n.team.objectId},r=JSON.stringify(s);n.frame.contentWindow.postMessage(r,a)}else if("ListeningForTeamsConnectors"===i.action){if(n.enableConnectorApps&&n.getApps){n.loadingScenario&&n.loadingScenario.mark("ListeningForTeamsConnectorsReceived");var p=n.appsService.getInstalledAppsForTeam(n.channel.parentTeamId,{category:teamspace.services.AppsServiceCategoryFilter.Connectors});n.$q.all([n.getApps,p]).then(function(e){if(e[0]&&e[1]){for(var t=e[0],i=e[1],o={},s=0;s<i.length;s++)o[i[s].appDefinition.id.toLowerCase()]=i[s];for(var r=n.channelMembershipPropertiesService.isAdmin(n.channel.objectId)||n.teamSettingsService.canAddApp(n.team.objectId),p=[],l=[],c=[],s=0;s<t.length;s++){var d=t[s],h=o[d.id];if(!h||!teamspace.services.AppsServiceUtils.isAppDeprecated(h)){var g=d.connectors[0].connectorId;n.appsService.isSideloadedApp(d)?p.push(g):h&&teamspace.services.AppsServiceUtils.isAppInstalled(h)?h.appDefinition&&h.appDefinition.tenantId?p.push(g):l.push(g):r&&c.push(g)}}var u={eventName:"SetTeamsConnectors",sideloadedConnectors:p,installedConnectors:l,featuredConnectors:c},m=JSON.stringify(u);if(n.frame.contentWindow.postMessage(m,a),!n.settingsService.valueAsBoolean(n.constants.settings.names.disablePostInstallConnectorConfig)&&n.connectorId){var v={eventName:"InstallAppComplete",connector:n.connectorId,success:!0},f=JSON.stringify(v);n.frame.contentWindow.postMessage(f,a),n.connectorId=null}}})}}else"InstallAppForConnector"===i.action?n.enableConnectorApps&&n.installAppForConnector(i.connector).then(function(e){var t={eventName:"InstallAppComplete",connector:i.connector,success:e,name:i.name},o=JSON.stringify(t);n.frame.contentWindow.postMessage(o,a)}):"AllowWindowOpen"===i.action?n.enableConnectorApps&&n.allowWindowOpen(i.url).then(function(e){var t={eventName:"WindowOpenAllowed",url:i.url,success:e},o=JSON.stringify(t);n.frame.contentWindow.postMessage(o,a)}):"Connector.Add"===i.action?n.configure(i,a):"Connector.Show"===i.action?n.manage(i,a):"Connector.Close"===i.action?n.configurationDialog&&n.configurationDialog.close():(n.loadingScenario&&(n.loadingScenario.stop(),n.loadingScenario=null),n.isDesktopApp&&n.frame.contentWindow.postMessage(t.data,a))}})},e.prototype.initConnectorsSiteUrl=function(){var e=this.constants.connectors.management,t=e.siteUrlSSO,n=this.authenticationService.getLoggedInUser(),a=this.team.siteInfo.groupId+"@"+n.profile.tid,i=this.constants.connectors.management.defaultParameterValues.client,o=this.channel.objectId.toString(),s=this.channel.displayName.substring(0,this.constants.connectors.management.constraints.maxChannelNameLength),r=this.localizationService.getLocale(),p=this.$location.host(),l=this.constants.connectors.management.defaultParameterValues.environment,c=this.constants.connectors.management.defaultParameterValues.format,d=this.$cookies.get(this.constants.themes.cookieName)||"default",h="";h=this.utilityService.appendToQueryString(h,e.parameters.groupMailboxSmtp,this.utilityService.encodeUriComponentIncludingApostrophe(a)),h=this.utilityService.appendToQueryString(h,e.parameters.client,this.utilityService.encodeUriComponentIncludingApostrophe(i)),h=this.utilityService.appendToQueryString(h,e.parameters.thread,this.utilityService.encodeUriComponentIncludingApostrophe(o)),h=this.utilityService.appendToQueryString(h,e.parameters.hostname,this.utilityService.encodeUriComponentIncludingApostrophe(p)),h=this.utilityService.appendToQueryString(h,e.parameters.culture,this.utilityService.encodeUriComponentIncludingApostrophe(r)),h=this.utilityService.appendToQueryString(h,e.parameters.upn,this.utilityService.encodeUriComponentIncludingApostrophe(n.profile.upn)),h=this.utilityService.appendToQueryString(h,e.parameters.environment,this.utilityService.encodeUriComponentIncludingApostrophe(l)),h=this.utilityService.appendToQueryString(h,e.parameters.channelName,this.utilityService.encodeUriComponentIncludingApostrophe(s)),h=this.utilityService.appendToQueryString(h,e.parameters.chatServiceHost,this.utilityService.getHostNameFromUrl(this.chatServiceHost)),h=this.utilityService.appendToQueryString(h,e.parameters.iframe,this.constants.connectors.management.defaultParameterValues.iframe),h=this.utilityService.appendToQueryString(h,e.parameters.theme,this.utilityService.encodeUriComponentIncludingApostrophe(d)),h=this.utilityService.appendToQueryString(h,e.parameters.ssTokenType,this.utilityService.encodeUriComponentIncludingApostrophe(this.constants.connectors.management.defaultParameterValues.ssTokenType)),this.settingsService.valueAsBoolean(this.constants.settings.names.useCardsForConnectors)&&(h=this.utilityService.appendToQueryString(h,e.parameters.format,c)),this.enableConnectorApps&&(h=this.utilityService.appendToQueryString(h,e.parameters.isDesktopClient,this.isDesktopApp?"true":"false"),h=this.utilityService.appendToQueryString(h,e.parameters.enableConnectorApps,"true")),this.url=this.utilityService.combineUriComponents(t,h)},e.prototype.installAppForConnector=function(e){var t=this;return this.getApps.then(function(n){for(var a=0;a<n.length;a++){var i=function(a){if(n[a].connectors[0].connectorId===e){var i=t.$q.defer(),o={appID:n[a].id,intent:teamspace.components.AddAppDialogIntent.Team,teamId:t.channel.parentTeamId,autoNavigationOnDone:!1,skipInstalledSuccess:!0,source:"connectors-manager-dialog"},s={entryPoint:teamspace.components.AddAppDialogEntryPoint.ConnectorManagementDialog,appId:n[a].id,teamId:t.channel.parentTeamId};return t.dialogService.openLazyDialog(t.constants.lazyDialogs.addAppNew,t.constants.lazyModules.extensibilityDialogs,Object.assign(o,s),function(e){i.resolve(e&&e.installSucceeded),t.dialogService.registerCloseCallback(t.constants.lazyDialogs.addAppNew,null)}),{value:i.promise.then(function(e){return e&&(t.getApps=t.appsService.getTeamAppDefinitions(t.channel.parentTeamId,"connectors-manager-dialog",{category:teamspace.services.AppsServiceCategoryFilter.Connectors},!0)),e})}}}(a);if("object"==typeof i)return i.value}})},e.prototype.configure=function(e,t){var n=this;if(this.enableInlineConnectorConfiguration)return e.connectorId||this.loggingService.error("Connectors: ConnectorId not present in Connector.Add event."),this.getAppDefinitionWithConnectorId(e.connectorId).then(function(a){if(a){var o={action:i.ConnectorDialogOperationType.AddConnectorInstance,appDefinition:a,webhookUrl:e.webhookUrl,userObjectId:e.userObjectId,appType:e.appType,targetOrigin:t};n.bindCallbacks(o),n.connectorId=e.connectorId,n.targetOrigin=t,n.dialogService.openLazyDialog(n.constants.lazyDialogs.connectorInstanceConfigurationDialog,n.constants.lazyModules.extensibilityDialogs,o).then(function(e){n.configurationDialog=e})}else n.loggingService.error("Connectors: AppDefinition not found for configuration. ConnectorId:"+e.connectorId)})},e.prototype.manage=function(e,t){var n=this;if(this.enableInlineConnectorConfiguration)return this.getAppDefinitionWithConnectorId(e.connectorId).then(function(a){if(a){var o={action:i.ConnectorDialogOperationType.ManageConnectorInstance,appDefinition:a,webhookUrl:e.webhookUrl,contentUrl:e.contentUrl,entityId:e.entityId,configName:e.configName,userObjectId:e.userObjectId,appType:e.appType,targetOrigin:t};n.bindCallbacks(o),n.connectorId=e.connectorId,n.targetOrigin=t,n.dialogService.openLazyDialog(n.constants.lazyDialogs.connectorInstanceConfigurationDialog,n.constants.lazyModules.extensibilityDialogs,o).then(function(e){n.configurationDialog=e})}else n.loggingService.error("Connectors: AppDefinition not found for managing. ConnectorId:"+e.connectorId)})},e.prototype.bindCallbacks=function(e){e.onSave=this.onSave.bind(this),e.onCancel=this.onCancel.bind(this),e.onFailure=this.onFailure.bind(this),e.onRemove=this.onRemove.bind(this),e.postCloseCallback=this.onClose.bind(this)},e.prototype.onSave=function(e){var t={action:"Connector.SaveSuccess",configName:e.configName,entityId:e.entityId,contentUrl:e.contentUrl,webhookUrl:e.webhookUrl};this.postMessage(t,e.targetOrigin)},e.prototype.onRemove=function(e){var t={action:"Connector.Delete",connectorId:e.appDefinition.connectors[0].connectorId};this.postMessage(t,e.targetOrigin)},e.prototype.onFailure=function(e){var t={action:"Connector.SaveFailure",reason:e.errorMessage};this.postMessage(t,e.targetOrigin)},e.prototype.onCancel=function(e){var t={action:"Connector.Cancel",connectorId:e.appDefinition.connectors[0].connectorId};this.postMessage(t,e.targetOrigin),this.configurationDialog.close()},e.prototype.onClose=function(){var e={action:"Connector.Cancel",connectorId:this.connectorId};this.postMessage(e,this.targetOrigin)},e.prototype.postMessage=function(e,t){var n=JSON.stringify(e);this.frame.contentWindow.postMessage(n,t)},e.prototype.getAppDefinitionWithConnectorId=function(e){var t=this;return this.getApps.then(function(t){return _.find(t,function(t){return t.connectors[0].connectorId===e})}).catch(function(e){return t.loggingService.error("Connectors: getAppDefinitionWithConnectorId failed. Error:"+e),null})},e.prototype.allowWindowOpen=function(e){return e.length<"https:".length||"https:"!==e.substr(0,6).toLowerCase()?(this.loggingService.warn("Connectors: Attempted to allow a non-https url to open"),this.$q.resolve(!1)):(this.isDesktopApp&&this.$window.electronSafeIpc&&this.$window.electronSafeIpc.send(this.constants.events.desktopApp.allowWindowOpenUrl,e),this.$timeout(function(){return!0}))},e.dialogCloseElementClass=".ngdialog-close",e}();t.ConnectorsManagerDialogController=o,angular.module("teamspace.connectorsManagerDialog",[]).run(["constants","dialogService","$templateCache",function(e,t,n){n.put("components/extensibility/connectors-manager-dialog/connectors-manager-dialog.html",a),t.register(e.lazyDialogs.connectorsManager,{template:"components/extensibility/connectors-manager-dialog/connectors-manager-dialog.html",className:"ts-modal-dialog custom-width ts-connectors-manager-dialog",closeByEscape:!0,closeByDocument:!0,ariaAuto:!1,ariaRole:"dialog",ariaLabelledById:"modalDialog-title"})}]).controller("ConnectorsManagerDialogController",o)},1862:function(e,t){e.exports='<div class="ts-connectors-manager" ng-controller="ConnectorsManagerDialogController as cmdc" acc-role="dialog">\n  <modal-dialog dialog-title="{{::cmdc.dialogTitle}}" add-close-icon="true" suppress-default-button="true" track-panel-type="{{$root.trackConstants.panelType.connectorsManagerDialog}}">\n\n    <div ng-if="cmdc.isOffline" class="offline-content">\n      <ng-include src="\'svg/illustrations/illustration-dog-with-cord.html\'"></ng-include>\n      <div role="alert">\n        <div class="app-font-title2-bold offline-error-message">\n          {{($root.resources.strings.extensibility_offline_error_message|translate)}}\n        </div>\n        <div class="app-font-base-regular offline-retry-message">\n          {{($root.resources.strings.extensibility_offline_retry_message|translate)}}\n        </div>\n      </div>\n    </div>\n\n    <div ng-if="!cmdc.isOffline" class="connectors-iframe-container">\n      <iframe class="connectors-iframe" id="connectorsTileFrame" aria-live="assertive" frameborder="0" border="0" seamless>\n      </iframe>\n    </div>\n\n  </modal-dialog>\n</div>\n'},1863:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(1864),i=function(){function e(e,t,n,a,i,o,s,r){var p=this;this.$scope=e,this.$translate=t,this.resources=n,this.constants=a,this.$window=i,this.appsDevicePermissionService=o,this.appsService=s,this.analyticsService=r,i.desktopSettings.devicePermissionsEnabledV2||e.closeThisDialog(),this.appId=e.ngDialogData.appId,this.deviceType=e.ngDialogData.deviceType,this.guid=e.ngDialogData.guid,this.initializeDialog(),this.logTelemetryForDevicePermissionDialog(),this.footerButtons=[{text:t.instant(n.strings.extension_devicePermissionConsentDeny),func:function(){return p.deny()},disabled:!1,secondaryStyle:!0,outcome:teamspace.components.PanelActionOutcome.submit,type:teamspace.components.PanelModuleType.button,name:teamspace.components.PanelModuleName.denyDevicePermissionButton,summary:"Deny permission to the device",scenarioType:teamspace.components.PanelActionScenarioType.appMgmt,tid:"devicePermission-Deny"},{text:t.instant(n.strings.extension_devicePermissionConsentAllow),func:function(){return p.allow()},disabled:!1,outcome:teamspace.components.PanelActionOutcome.closeDialog,type:teamspace.components.PanelModuleType.button,name:teamspace.components.PanelModuleName.allowDevicePermissionButton,summary:"Allow permission to the device",scenarioType:teamspace.components.PanelActionScenarioType.appMgmt,tid:"devicePermission-Allow"}]}return e.$inject=["$scope","$translate","resources","constants","$window","appsDevicePermissionService","appsService","analyticsService"],e.prototype.allow=function(){this.appsDevicePermissionService.storeNewPermission(this.appId,this.deviceType,!0),this.logTelemetryForDevicePermissionConsent(!0),this.$scope.closeThisDialog(),this.sendPermissionToElectron(!0)},e.prototype.deny=function(){this.appsDevicePermissionService.storeNewPermission(this.appId,this.deviceType,!1),this.logTelemetryForDevicePermissionConsent(!1),this.$scope.closeThisDialog(),this.sendPermissionToElectron(!1)},e.prototype.logTelemetryForDevicePermissionConsent=function(e){var t={action:{gesture:teamspace.components.PanelActionGesture.click},module:{type:teamspace.components.PanelModuleType.devicePermission,name:teamspace.components.PanelModuleName[teamspace.components.PanelModuleName.devicePermissionConsentDialog],summary:"Get device permission consent"},app:{id:this.appId,name:this.appName,scenarioCapability:teamspace.components.PanelAppScenarioCapability.tabs},dataBag:{deviceType:this.deviceType,consentForDevicePermission:e}};this.analyticsService.onPanelAction(this.$scope,t)},e.prototype.logTelemetryForDevicePermissionDialog=function(){var e={panel:{type:teamspace.PanelType.devicePermissionConsent},app:{id:this.appId,name:this.appName,scenarioCapability:teamspace.components.PanelAppScenarioCapability.tabs}};this.analyticsService.onPanelView(this.$scope,e)},e.prototype.sendPermissionToElectron=function(e){this.$window.electronSafeIpc&&this.$window.electronSafeIpc.send(this.constants.events.desktopApp.hasDevicePermissionsCallback,{guid:this.guid,permission:e})},e.prototype.initializeDialog=function(){var e=this;this.appsService.getUserAppDefinition(this.appId,"devicePermissionSettings").then(function(t){switch(e.appName=t.name,e.deviceType){case e.constants.deviceTypeForAppPermission.media:e.initializeContents(e.$translate.instant(e.resources.strings.extension_devicePermissionDeviceConsentTitle,{appName:e.appName}),e.$translate.instant(e.resources.strings.extension_devicePermissionDeviceConsentText,{appName:e.appName}),"svg/icons-video.html");break;case e.constants.deviceTypeForAppPermission.geolocation:e.initializeContents(e.$translate.instant(e.resources.strings.extension_devicePermissionLocationConsentTitle,{appName:e.appName}),e.$translate.instant(e.resources.strings.extension_devicePermissionLocationConsentText,{appName:e.appName}),"svg/icons-location.html");break;case e.constants.deviceTypeForAppPermission.notifications:e.initializeContents(e.$translate.instant(e.resources.strings.extension_devicePermissionNotificationsConsentTitle,{appName:e.appName}),e.$translate.instant(e.resources.strings.extension_devicePermissionNotificationsConsentText,{appName:e.appName}),"svg/icons-bell.html");break;case e.constants.deviceTypeForAppPermission.openExternal:e.initializeContents(e.$translate.instant(e.resources.strings.extension_devicePermissionExternalLinkConsentTitle,{appName:e.appName}),e.$translate.instant(e.resources.strings.extension_devicePermissionExternalLinkConsentText,{appName:e.appName}),"svg/icons-open-outside.html");break;case e.constants.deviceTypeForAppPermission.midi:e.initializeContents(e.$translate.instant(e.resources.strings.extension_devicePermissionMIDIConsentTitle,{appName:e.appName}),e.$translate.instant(e.resources.strings.extension_devicePermissionMIDIConsentText,{appName:e.appName}),"svg/icons-audio.html");break;default:e.$scope.closeThisDialog()}})},e.prototype.initializeContents=function(e,t,n){this.consentTitle=e,this.consentText=t,this.iconSrc=n},e}();t.DevicePermissionController=i,angular.module("teamspace.devicePermission",["teamspace.utilityService"]).run(["constants","dialogService","$templateCache",function(e,t,n){n.put("components/extensibility/device-permission-dialog/device-permission-dialog.html",a),t.register(e.lazyDialogs.devicePermission,{template:"components/extensibility/device-permission-dialog/device-permission-dialog.html",className:"ts-modal-dialog device-permission-dialog",closeByEscape:!0,closeByDocument:!0,ariaAuto:!1,ariaRole:"dialog",ariaLabelledById:"modalDialog-title"})}]).controller("DevicePermissionController",i)},1864:function(e,t){e.exports='<div class="device-permission" ng-controller="DevicePermissionController as ctrl" acc-role="dialog">\n  <modal-dialog add-close-icon="false" suppress-default-button="true" skip-auto-focus="false" footer-buttons="ctrl.footerButtons" right-align-buttons="true" data-tid="devicePermissionDialog">\n      <section class="title-container" id="modalDialog-title">\n        <div class="text-container">\n          <span ng-bind="::ctrl.consentTitle"></span>\n        </div>\n      </section>\n      <section class="dialog-content">\n        <div class="dialog-text">\n          <div class="badge-icon">\n              <ng-include src="ctrl.iconSrc"></ng-include>\n          </div>\n          <div class="permission-text">\n            <span ng-bind="::ctrl.consentText" title="{{::ctrl.consentText}}"></span>\n          </div>\n        </div>\n        <div class="dialog-manage" translate-once="{{::$root.resources.strings.extension_devicePermissionConsentManage}}"></div>\n      </section>\n  </modal-dialog>\n</div>'},1865:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(1866),i=function(){function e(e,t,n,a,i,o){this.$scope=e,this.$translate=t,this.resources=n,this.constants=a,this.appsDevicePermissionService=i,this.analyticsService=o,this.permissionsForAnApp=[],this.appPermission=e.ngDialogData.appPermission,this.initializeDialog(),this.logTelemetryForDevicePermissionForAnApp()}return e.$inject=["$scope","$translate","resources","constants","appsDevicePermissionService","analyticsService"],e.prototype.initializeDialog=function(){var e=this;this.headerButtons=[{text:this.$translate.instant(this.resources.strings.settings_back_to_settings_label),func:function(){e.$scope.closeThisDialog()},icon:"svg/icons-chevron-left-small.html"}],this.populateApp(this.appPermission.media,this.resources.strings.extension_devicePermissionSettingsMedia,this.$translate.instant(this.resources.strings.extension_devicePermissionDeviceConsentTitle,{appName:this.appPermission.name}),this.constants.deviceTypeForAppPermission.media),this.populateApp(this.appPermission.geolocation,this.resources.strings.extension_devicePermissionSettingsLocation,this.$translate.instant(this.resources.strings.extension_devicePermissionLocationConsentTitle,{appName:this.appPermission.name}),this.constants.deviceTypeForAppPermission.geolocation),this.populateApp(this.appPermission.notifications,this.resources.strings.extension_devicePermissionSettingsNotifications,this.$translate.instant(this.resources.strings.extension_devicePermissionNotificationsConsentTitle,{appName:this.appPermission.name}),this.constants.deviceTypeForAppPermission.notifications),this.populateApp(this.appPermission.openExternal,this.resources.strings.extension_devicePermissionSettingsExternalLinks,this.$translate.instant(this.resources.strings.extension_devicePermissionExternalLinkConsentTitle,{appName:this.appPermission.name}),this.constants.deviceTypeForAppPermission.openExternal),this.populateApp(this.appPermission.midi,this.resources.strings.extension_devicePermissionSettingsMIDI,this.$translate.instant(this.resources.strings.extension_devicePermissionMIDIConsentTitle,{appName:this.appPermission.name}),this.constants.deviceTypeForAppPermission.midi)},e.prototype.populateApp=function(e,t,n,a){var i=this;this.permissionsForAnApp.push({devicePermission:e,deviceName:this.$translate.instant(t),permissionText:n,changePermission:function(e){i.appPermission[a]=e,i.logTelemetryForPermissionChange(a,e),i.appsDevicePermissionService.storeNewPermission(i.appPermission.appId,a,e)}})},e.prototype.logTelemetryForDevicePermissionForAnApp=function(){var e={panel:{type:teamspace.PanelType.devicePermissionSettingPerApp}};this.analyticsService.onPanelView(this.$scope,e)},e.prototype.logTelemetryForPermissionChange=function(e,t){var n={action:{gesture:teamspace.components.PanelActionGesture.click},module:{type:teamspace.components.PanelModuleType.devicePermission,name:teamspace.components.PanelModuleName[teamspace.components.PanelModuleName.devicePermissionSettingsDialog],summary:"Change device permission for an app"},app:{id:this.appPermission.appId,name:this.appPermission.name,scenarioCapability:teamspace.components.PanelAppScenarioCapability.tabs},dataBag:{deviceType:e,consentForGlobalPermission:t}};this.analyticsService.onPanelAction(this.$scope,n)},e}();t.DevicePermissionSettingsController=i,angular.module("teamspace.devicePermissionDialogSettings",["teamspace.utilityService"]).run(["constants","dialogService","$templateCache",function(e,t,n){n.put("components/extensibility/device-permission-dialog/device-permission-dialog-settings.html",a),t.register(e.lazyDialogs.devicePermissionDialogSettings,{template:"components/extensibility/device-permission-dialog/device-permission-dialog-settings.html",className:"ts-modal-dialog device-permission-dialog-settings",closeByEscape:!0,closeByDocument:!0,ariaAuto:!1,ariaRole:"dialog",ariaLabelledById:"modalDialog-title"})}]).controller("DevicePermissionSettingsController",i)},1866:function(e,t){e.exports='<div class="device-permission-dialog-settings" ng-controller="DevicePermissionSettingsController as ctrl" acc-role="dialog">\n  <modal-dialog add-close-icon="true" suppress-default-button="true" skip-auto-focus="false" right-align-buttons="true" header-buttons="ctrl.headerButtons" data-tid="devicePermissionDialogSettings">\n    <section class="title-container">\n      <div class="apps-name" title="{{ctrl.appPermission.name}}">\n        <div class="apps-icon" ng-style="{ \'background\': ctrl.appPermission.accentColor }">\n          <ng-include src="ctrl.appPermission.icon" ng-if="::ctrl.utilityService.useNgIncludeForIcon(ctrl.appPermission.icon)"></ng-include>\n          <img ng-src="{{::ctrl.appPermission.icon}}" ng-if="::!ctrl.utilityService.useNgIncludeForIcon(ctrl.appPermission.icon)"/>\n        </div>\n        <div class="apps-display-name" dir="auto">{{ctrl.appPermission.name}}</div>\n      </div>\n    </section>\n    <section class="app-container">\n      <div class="permission" ng-repeat="permission in ctrl.permissionsForAnApp track by permission.deviceName">\n        <div ng-if="permission.devicePermission != undefined">\n          <div class="device-text">{{permission.deviceName}}</div>\n          <div class="permission-text">\n            <span ng-bind="::permission.permissionText" title="{{::permission.permissionText}}"></span>\n            <div class="device-permission-button">\n              <toggle-switch is-checked="permission.devicePermission" on-toggle="permission.changePermission(isChecked)" ds-aria-label="{{permission.deviceName}}">\n              </toggle-switch>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </modal-dialog>\n</div>'},1867:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(1868);angular.module("teamspace.inContextAppStoreAppGrid",[]).directive("inContextAppStoreAppGrid",[function(){return{restrict:"E",scope:{apps:"<",headerMessage:"<",onAppTileClick:"&"},templateUrl:"components/extensibility/incontext-store-dialog/in-context-app-store-app-grid.html"}}]).run(["$templateCache",function(e){e.put("components/extensibility/incontext-store-dialog/in-context-app-store-app-grid.html",a)}])},1868:function(e,t){e.exports='<div ng-if="apps.length > 0">\n  <label class="app-store-dialog-grid-title" ng-bind="headerMessage"></label>\n  <ul aria-label="{{headerMessage}}" acc-role="listgrid-horizontal-and-vertical" role="listbox" class="app-store-dialog-app-grid" data-tid="tabs-gallery-installed-apps" ng-if="apps.length > 0">\n    <li ng-repeat="app in apps track by app.id" ng-click="onAppTileClick({appVM: app})" data-tid="tabs-gallery-app-{{::app.name}}" acc-role="listgrid-item" role="option" aria-label="{{::app.name}}" track-click-silent="true">\n      <div class="app-icon" title="{{::app.description}}" ng-style="{ \'background\': app.accentColor }">\n        <ng-include src="app.icon" ng-if="::app.useNgIncludeForIcon"></ng-include>\n        <img role="img" alt="{{::($root.resources.strings.extensibility_app_icon_alt|translate:{appName:app.name})}}" aria-label="{{::($root.resources.strings.extensibility_app_icon_alt|translate:{appName:app.name})}}" ng-src="{{::app.icon}}" ng-if="::!app.useNgIncludeForIcon"/>\n        <div class="app-icon-mask"></div>\n      </div>\n      <div ng-bind="::app.name" dir="auto" title="{{::app.name}}" id="tabs-gallery-name-{{::app.id}}" class="app-name"></div>\n    </li>\n  </ul>\n</div>\n'},1869:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(1870),i=n(1871),o=n(1872),s=n(1873),r=n(1874),p=n(1875),l=teamspace.services.AppsServiceCategoryFilter,c=teamspace.components.TelemetryHelper,d=teamspace.components.PanelActionGesture,h=teamspace.components.PanelActionOutcome,g=teamspace.components.PanelActionScenario,u=teamspace.components.PanelActionScenarioType,m=teamspace.components.PanelModuleName,v=teamspace.components.PanelModuleType,f=function(){function e(e,t,n,a,r,l,c,d,h,g,u,m,v,f,S,y,A,b,D,C,I,T,x){var _=this;this.$scope=e,this.constants=t,this.ariaLiveService=n,this.utilityService=a,this.navigationService=r,this.loggingService=l,this.analyticsService=c,this.capabilities=[],this.installedApps=[],this.notInstalledApps=[],this.filteredInstalledApps=[],this.filteredNotInstalledApps=[],this.logger=l.newLogger("InContextAppStoreDialogController"),this.enableInstallChatAppsFromStore=D.valueAsBoolean(t.settings.names.enableInstallChatAppsFromStore),this.appSortingRule=D.valueFor(t.settings.names.appSortingRule),this.isAppDiscoveryEnabled=m.isAppsDiscoveryEnabled(),this.stringsHelper=new p.InContextAppStoreDialogStringsHelper(t,g,u),this.appStoreActionsHandler=new o.AppStoreActionsHandler(d,h,this.logger,t,f,I,v,b,r,T,x,D,C,D.valueAsBoolean(t.settings.names.enableSideloadedAppsInGroupChat)),this.appStoreContextHelper=new i.AppStoreContextHelper(d,t,m,S,y,A,b,D),this.storeContext=this.appStoreContextHelper.getAppStoreContext(e.ngDialogData.threadId),this.showManageApps=this.shouldShowManageApps(),this.showMoreApps=this.shouldShowMoreApps(),this.capabilities=new s.AppStoreCapabilityHelper(g,u,t).getCapabilities(this.storeContext.scope);var P=e.ngDialogData.selectedCapability&&this.capabilities.find(function(t){return t.value===e.ngDialogData.selectedCapability});P?this.selectCapabilityFilter(P):this.selectCapabilityFilter(this.capabilities[0]),this.updateDialogTitle(),this.appStoreContextHelper.registerForAppEntitlementChanges(e,this.storeContext,function(){return _.initialiseAppsList()})}return e.$inject=["$scope","constants","ariaLiveService","utilityService","navigationService","loggingService","analyticsService","$q","$rootScope","$translate","resources","appsService","dialogService","extensionDefinitionService","conversationsService","teamMembershipPropertiesService","teamSettingsService","channelService","settingsService","tabService","eventingService","uiOrchestrator","routeUtilityService"],e.prototype.filterBySearch=function(){var e=this.searchString.toLowerCase();this.filteredInstalledApps=_.filter(this.installedApps,function(t){return t.nameLowerCase.contains(e)}),this.filteredNotInstalledApps=_.filter(this.notInstalledApps,function(t){return t.nameLowerCase.contains(e)}),this.announceSearchResultsChanged(this.filteredInstalledApps.length+this.filteredNotInstalledApps.length)},e.prototype.clearSearch=function(){this.clearSearchString(),this.filterBySearch(),this.focusSearchInput()},e.prototype.gotoManageApps=function(){this.appStoreActionsHandler.gotoManageApps(this.storeContext.scope,this.storeContext.threadId),this.closeDialog()},e.prototype.gotoAppGallery=function(){var e={intent:this.storeContext.scope===this.constants.extensibility.groupChatContextName?teamspace.components.AddAppDialogIntent.GroupChat:teamspace.components.AddAppDialogIntent.Team,category:this.selectedCapability.value,threadId:this.storeContext.threadId,autoNavigationOnDone:!0,skipInstalledSuccess:!1,filterByPersonal:!1,storeLaunchFromChat:this.storeContext.scope===this.constants.extensibility.groupChatContextName,preselectTeam:this.storeContext.scope===this.constants.extensibility.teamContextName&&this.storeContext.teamId,preselectChat:this.storeContext.scope===this.constants.extensibility.groupChatContextName&&this.storeContext.threadId,addAppDialogEntryPoint:this.storeContext.scope===this.constants.extensibility.groupChatContextName?teamspace.components.AddAppDialogEntryPoint.InContextGalleryDialogMoreAppsFromGroupChat:teamspace.components.AddAppDialogEntryPoint.InContextGalleryDialogMoreAppsFromChannel};this.navigationService.navigateToAppsView(e),this.closeDialog(),this.logTelemetryForGotoAppGallery()},e.prototype.selectCapabilityFilter=function(e){var t=this;this.clearSearchString(),this.selectedCapability=e,this.initialiseAppsList().then(function(){t.updateDialogStrings(),t.logTelemetryForCapabilityFilterChange()})},e.prototype.onNotInstalledItemClick=function(e){var t=this;this.logTelemetryForNotInstalledAppTileClick(e);var n=this.loggingService.newScenario(this.constants.scenarios.extensibility.apps.inContextAppStoreDialog.installDialogView);this.appStoreActionsHandler.executeAppInstallAction(this.storeContext,e.id,this.selectedCapability.value,this.$scope.ngDialogData.messageId).then(function(){t.appStoreActionsHandler.executePostInstallAction(t.storeContext,t.$scope.ngDialogData.messageId,e,t.selectedCapability.value),n.stop()}).catch(function(){n.cancel()}),this.closeDialog()},e.prototype.onInstalledItemClick=function(e){this.logTelemetryForInstalledAppTileClick(e),this.appStoreActionsHandler.executePostInstallAction(this.storeContext,this.$scope.ngDialogData.messageId,e,this.selectedCapability.value),this.closeDialog()},e.prototype.shouldShowManageApps=function(){return this.isAppDiscoveryEnabled&&!this.storeContext.isPrivateChannel&&(this.storeContext.scope!=this.constants.extensibility.groupChatContextName||this.enableInstallChatAppsFromStore)},e.prototype.shouldShowMoreApps=function(){return this.isAppDiscoveryEnabled&&!this.storeContext.isPrivateChannel},e.prototype.initialiseAppsList=function(){var e=this,t=this.loggingService.newScenario(this.constants.scenarios.extensibility.apps.inContextAppStoreDialog.view);return this.isLoading=!0,this.getAppStoreData().then(function(n){e.isLoading=!1;var a=n.installedApps,i=n.notInstalledApps,o=n.appRankMap,s=new r.AppStoreViewModelAdapter(e.utilityService,o);e.installedApps=a.map(function(e){return s.convertInstalledAppToInContextStoreViewModel(e)}),e.notInstalledApps=i.map(function(e){return s.convertAppDefinitionToInContextStoreViewModel(e)}),e.sortViewModels(),e.filteredInstalledApps=e.installedApps,e.filteredNotInstalledApps=e.notInstalledApps,t.stop()}).catch(function(e){t.fail({errorInfo:e,errorInfo1:e})}).finally(function(){e.isLoading=!1})},e.prototype.sortViewModels=function(){this.installedApps=_.sortBy(this.installedApps,"nameLowerCase"),this.notInstalledApps=this.shouldSortAppsByInstall()?_.sortBy(this.notInstalledApps,["installRank","nameLowerCase"]):_.sortBy(this.notInstalledApps,"nameLowerCase")},e.prototype.getAppStoreData=function(){return this.appStoreContextHelper.getAppStoreData(this.storeContext,{category:this.selectedCapability.value},this.shouldSortAppsByInstall())},e.prototype.shouldSortAppsByInstall=function(){return this.appSortingRule===this.constants.extensibility.apps.appRanking.appSortingRuleInstall},e.prototype.announceSearchResultsChanged=function(e){var t=this.stringsHelper.getSearchResultsAriaString(this.selectedCapability.value,e);this.ariaLiveService.update(t)},e.prototype.closeDialog=function(){this.$scope.closeThisDialog()},e.prototype.clearSearchString=function(){this.searchString=""},e.prototype.focusSearchInput=function(){$(".app-store-dialog-search input").focus()},e.prototype.updateDialogStrings=function(){this.updateEmptyStateMessage(),this.updateInstalledAppsHeaderMessage(),this.updateNotInstalledHeaderMessage()},e.prototype.updateDialogTitle=function(){this.dialogTitle=this.stringsHelper.getDialogTitle(this.selectedCapability.value)},e.prototype.updateEmptyStateMessage=function(){this.emptyStateMessage=this.stringsHelper.getEmptyStateMessage(this.selectedCapability.value)},e.prototype.updateInstalledAppsHeaderMessage=function(){this.installedAppsHeaderMessage=this.stringsHelper.getInstalledHeaderMessage(this.selectedCapability.value,this.storeContext)},e.prototype.updateNotInstalledHeaderMessage=function(){this.notInstalledAppsHeaderMessage=this.stringsHelper.getNotInstalledHeaderMessage(this.selectedCapability.value,this.filteredInstalledApps.length)},e.prototype.logTelemetryForCapabilityFilterChange=function(){var e=this;_.defer(function(){var t={actionGesture:d.click,actionOutcome:h.nav,actionScenario:g.navInContextAppStoreDialog,actionScenarioType:e.getScenarioTypeForCurrentCapability(),moduleName:m.inContextAppStoreDialog,moduleType:v.inContextAppStoreDialog,moduleSummary:"in-context app store dialog navigation"};c.logTelemetry(t,e.loggingService,e.analyticsService)})},e.prototype.logTelemetryForGotoAppGallery=function(){var e=this;_.defer(function(){var t={actionGesture:d.click,actionOutcome:h.nav,actionScenario:g.moreApps,actionScenarioType:e.getScenarioTypeForCurrentCapability(),moduleName:m.inContextAppStoreDialog,moduleType:v.inContextAppStoreDialog,moduleSummary:"in-context app store goto app gallery"};c.logTelemetry(t,e.loggingService,e.analyticsService)})},e.prototype.logTelemetryForInstalledAppTileClick=function(e){var t=this;_.defer(function(){var n={actionGesture:d.click,actionOutcome:h.nav,actionScenario:g.configureApp,actionScenarioType:t.getScenarioTypeForCurrentCapability(),moduleName:m.inContextAppStoreDialog,moduleType:v.inContextAppStoreDialog,moduleSummary:"in-context app store configure app",dataBag:{definitionId:e.id,definitionName:e.isSideloaded?"<redacted_sideloaded>":e.name}};c.logTelemetry(n,t.loggingService,t.analyticsService)})},e.prototype.logTelemetryForNotInstalledAppTileClick=function(e){var t=this;_.defer(function(){var n={actionGesture:d.click,actionOutcome:h.nav,actionScenario:g.addApp,actionScenarioType:t.getScenarioTypeForCurrentCapability(),moduleName:m.inContextAppStoreDialog,moduleType:v.inContextAppStoreDialog,moduleSummary:"in-context app store add app",dataBag:{definitionId:e.id,definitionName:e.isSideloaded?"<redacted_sideloaded>":e.name}};c.logTelemetry(n,t.loggingService,t.analyticsService)})},e.prototype.getScenarioTypeForCurrentCapability=function(){switch(this.selectedCapability.value){case l.Tabs:return u.tabs;case l.Bots:return u.bots;case l.Connectors:return u.connectors;case l.InputExtensions:return u.inputExtensions}},e}();t.InContextAppStoreDialogController=f,angular.module("teamspace.incontextAppStoreDialog",[]).run(["constants","dialogService","$templateCache",function(e,t,n){var i="components/extensibility/in-context-store-dialog/in-context-app-store-dialog.html";n.put(i,a),t.register(e.lazyDialogs.inContextAppStore,{template:i,className:"ts-modal-dialog in-context-app-store-dialog",closeByEscape:!0,closeByDocument:!0,ariaAuto:!1,ariaRole:"dialog",ariaLabelledById:"modalDialog-title"})}]).controller("InContextAppStoreDialogController",f)},1870:function(e,t){e.exports='<div class="in-context-app-store-dialog-container" ng-controller="InContextAppStoreDialogController as dialogCtrl" acc-role="dialog">\n  <modal-dialog dialog-title="{{::dialogCtrl.dialogTitle}}" add-close-icon="true" dialog-busy="dialogCtrl.isLoading" suppress-default-button="true" suppress-default-footer="true" data-tid="inContextAppStoreDialog" track-panel-type="{{::$root.trackConstants.panelType.inContextAppStoreDialog}}" skip-auto-focus="true" aria-label="{{::dialogCtrl.dialogTitle}}">\n\n    <div class="capability-caption">\n      <div class="caption-message">\n           <span ng-bind="::dialogCtrl.selectedCapability.caption"></span>\n           <a ng-click="dialogCtrl.gotoAppGallery()" ng-if="::dialogCtrl.showMoreApps" href="javascript:void(0)" track-click-silent="true">\n             {{::$root.resources.strings.in_context_app_store_dialog_goto_app_gallery | translate}}\n            </a>\n      </div>\n\n      \x3c!-- Search --\x3e\n      <div class="app-store-dialog-search">\n        <input sanitized ng-model="dialogCtrl.searchString" placeholder="{{::$root.resources.strings.search_placeholderText | translate}}" autocapitalize="off" aria-label="{{::$root.resources.strings.search_placeholderText | translate}}" autocorrect="off" autocomplete="off" maxlength="750" tabindex="0" ng-change="dialogCtrl.filterBySearch()">\n        <ng-include class="search-box-icon" ng-if="!dialogCtrl.searchString" src="\'svg/icons-search.html\'"></ng-include>\n        <button class="search-box-icon ts-btn app-icons-fill-hover app-icons-fill-focus" ng-if="dialogCtrl.searchString" ng-click="dialogCtrl.clearSearch()" aria-label="{{ ::$root.resources.strings.search_filterClearText | translate}}">\n          <ng-include class="icon" src="\'svg/icons-close.html\'" role="presentation"></ng-include>\n        </button>\n      </div>\n    </div>\n\n    <div class="app-store-dialog-scroll-parent">\n      <div class="app-store-dialog-scroll-container" simple-scrollbar>\n        <div class="app-store-dialog-scroll-content">\n          \x3c!-- This extra div is needed since simple-scrollbar uses the first child only for height calculations --\x3e\n\n          \x3c!-- Loading Indicator --\x3e\n          <div class="app-store-dialog-spinner">\n            <busy-animation ng-if="dialogCtrl.isLoading" size="large"></busy-animation>\n          </div>\n\n          \x3c!-- Installed Apps --\x3e\n          <in-context-app-store-app-grid apps="dialogCtrl.filteredInstalledApps" header-message="dialogCtrl.installedAppsHeaderMessage" on-app-tile-click="dialogCtrl.onInstalledItemClick(appVM)" data-tid="installed-apps"/>\n\n          \x3c!-- Not Installed Apps --\x3e\n          <in-context-app-store-app-grid apps="dialogCtrl.filteredNotInstalledApps" header-message="dialogCtrl.notInstalledAppsHeaderMessage" on-app-tile-click="dialogCtrl.onNotInstalledItemClick(appVM)" data-tid="not-installed-apps"/>\n\n          <div ng-if="dialogCtrl.searchString && dialogCtrl.filteredInstalledApps.length === 0 && dialogCtrl.filteredNotInstalledApps.length === 0" translate-with-html-params translate-id="extension_tabsGallery_noSearchResults" translate-values=\'{"searchString": "{{dialogCtrl.searchString}}"}\'></div>\n\n          <div ng-if="!dialogCtrl.isLoading && !dialogCtrl.searchString && dialogCtrl.filteredInstalledApps.length === 0 && dialogCtrl.filteredNotInstalledApps.length === 0" class="app-store-dialog-empty-message" ng-bind="::dialogCtrl.emptyStateMessage"></div>\n        </div>\n        \x3c!-- simple scroll bar adds classes the containing element like not-at-bottom and not-at-top --\x3e\n        \x3c!-- the two divs below provide the styling for the divider line at the top and bottom of the scrolled content --\x3e\n        <div class="more-indicator-top"></div>\n        <div class="more-indicator-bottom"></div>\n      </div>\n    </div>\n\n    \x3c!-- dialog custom footer --\x3e\n    <div class="app-store-dialog-footer">\n      <button class="ts-sym ts-btn app-icons-fill-hover app-icons-fill-focus" ng-click="dialogCtrl.gotoManageApps()" ng-if="::dialogCtrl.showManageApps" track-gesture="{{::$root.trackConstants.trackGesture.click}}" track-scenario="{{::$root.trackConstants.trackScenario.manageApps}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.appSettings}}" track-outcome="{{::$root.trackConstants.trackOutcome.nav}}" track-name="{{::$root.trackConstants.trackModuleName.navInContextAppStoreDialog}}" track-type="{{::$root.trackConstants.trackType.navInContextAppStoreDialog}}" track-summary="in-context app store manage apps">\n        <ng-include class="icon" src="\'svg/icons-settings.html\'"></ng-include>\n        <span class="tabs-gallery-ftr-button-text" ng-bind="::$root.resources.strings.in_context_app_store_dialog_goto_manage_apps | translate"></span>\n      </button>\n    </div>\n  </modal-dialog>\n</div>'},1871:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=teamspace.services.AppsServiceEvents,i=teamspace.services.AppsServiceCategoryFilter,o=function(){function e(e,t,n,a,i,o,s,r){this.$q=e,this.constants=t,this.appsService=n,this.conversationsService=a,this.teamMembershipPropertiesService=i,this.teamSettingsService=o,this.channelService=s,this.enableSideloadedAppsInGroupChat=r.valueAsBoolean(t.settings.names.enableSideloadedAppsInGroupChat),this.privateChannelAuthorizedApps=r.valueFor(t.settings.names.privateChannelAuthorizedApps)}return e.prototype.getAppStoreData=function(e,t,n){var a=this,i=this.getInstalledApps(e,t),o=this.getAppDefinitions(e,t),s=n?this.appsService.getAppStoreRankMap():this.$q.resolve({}),r=e.isPrivateChannel;return this.$q.all([i,o,s]).then(function(n){var i=n[0],o=n[1],s=n[2];return i=_.filter(i,function(n){return(!r||a.privateChannelAuthorizedApps.includes(n.appDefinition.id.toLowerCase()))&&teamspace.services.AppsServiceUtils.isAppInstalled(n)&&a.isValidScope(n.appDefinition,t.category,e.scope)}),o=_.filter(o,function(n){return(!n.state||n.state!=a.constants.extensibility.apps.appStates.installedAndDeprecated)&&a.isValidScope(n,t.category,e.scope)}),o=_.differenceWith(o,i,function(e,t){return e.id===t.appDefinition.id}),{installedApps:i,notInstalledApps:o,appRankMap:s||{}}})},e.prototype.isValidScope=function(e,t,n){switch(t){case i.Tabs:return e.galleryTabs&&e.galleryTabs.some(function(e){return e.scopes.some(function(e){return e.toLowerCase()===n.toLowerCase()})});case i.Bots:return e.bots&&e.bots.some(function(e){return e.scopes.some(function(e){return e.toLowerCase()===n.toLowerCase()})});case i.Connectors:return e.connectors&&e.connectors.some(function(e){return e.scopes.some(function(e){return e.toLowerCase()===n.toLowerCase()})});case i.InputExtensions:return e.inputExtensions&&e.inputExtensions.some(function(e){return e.scopes.some(function(e){return e.toLowerCase()===n.toLowerCase()})});default:throw"AppServiceWrapper::isValidScope unknown capability"}},e.prototype.getAppStoreContext=function(e){var t=this.conversationsService.getConversation(e);if(t&&t.isChannelConversation()){var n=this.channelService.getChannelByObjectId(e),a=n&&n.channelType===teamspace.services.ChannelType.Private;return{scope:this.constants.extensibility.teamContextName,threadId:t.id,teamId:n&&n.parentTeamId||t.getTeamId(),isPrivateChannel:a}}if(this.enableSideloadedAppsInGroupChat)return{scope:this.constants.extensibility.groupChatContextName,threadId:t.id};if(t)return{scope:this.constants.extensibility.oneOnOneContextName,threadId:t.id};throw"AppServiceWrapper::getAppStoreContext sope unsupported"},e.prototype.getInstalledApps=function(e,t){var n=e.scope,a=e.threadId,i=e.teamId;switch(n){case this.constants.extensibility.teamContextName:return this.appsService.getInstalledAppsForTeam(i,t);case this.constants.extensibility.groupChatContextName:return this.appsService.getInstalledAppsForGroupChat(a,t);case this.constants.extensibility.oneOnOneContextName:this.appsService.getInstalledAppsForUser(t);break;default:throw"AppServiceWrapper::getInstalledApps invalid scope"}},e.prototype.getAppDefinitions=function(e,t){var n=e.scope,a=e.threadId,i=e.teamId;switch(n){case this.constants.extensibility.teamContextName:return!(this.teamMembershipPropertiesService.isAdmin(i)||this.teamSettingsService.canAddApp(i))||e.isPrivateChannel?this.$q.resolve([]):this.appsService.getTeamAppDefinitions(i,"in-context-app-store-dialog",t,!0);case this.constants.extensibility.groupChatContextName:return this.appsService.getGroupChatAppDefinitions(a,"in-context-app-store-dialog",t);default:return this.appsService.getUserAppDefinitions("in-context-app-store-dialog",t,!0)}},e.prototype.registerForAppEntitlementChanges=function(e,t,n){var i,o,s=t.scope,r=t.threadId,p=t.teamId;switch(s){case this.constants.extensibility.teamContextName:o=p,i=a.TeamDefinitionsChanged;break;case this.constants.extensibility.groupChatContextName:o=r,i=a.GroupChatDefinitionsChanged;break;case this.constants.extensibility.oneOnOneContextName:i=a.UserDefinitionsChanged;break;default:throw"registerForAppEntitlementChanges: invalid scope"}this.appsService.safeSubscribe(e,n,i,o)},e}();t.AppStoreContextHelper=o},1872:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=teamspace.services.AppsServiceCategoryFilter,i=function(){function e(e,t,n,a,i,o,s,r,p,l,c,d,h,g){this.$q=e,this.$rootScope=t,this.logger=n,this.constants=a,this.extensionDefinitionService=i,this.eventingService=o,this.dialogService=s,this.channelService=r,this.navigationService=p,this.uiOrchestrator=l,this.routeUtilityService=c,this.tabService=h,this.enableSideloadedAppsInGroupChat=g,this.enableTabInlineConfig=d.valueAsBoolean(a.settings.names.enableTabInlineConfig),this.appStoreDialogHelper=new teamspace.components.InContextAppStoreDialogHelper(a,s)}return e.prototype.executePostInstallAction=function(e,t,n,i){switch(i){case a.Tabs:this.openTabConfigurationDialog(e.threadId,n.id,e.scope);break;case a.Bots:this.atMentionBot(n.name,n.botId,e,t);break;case a.InputExtensions:this.launchInputExtension(n.id,t);break;case a.Connectors:this.openConnectorConfigurationDialog(n.connectorId);break;default:throw"executePostInstallAction : invalid capability"}},e.prototype.executeAppInstallAction=function(e,t,n,a){var i,o=this,s=e.scope,r=e.threadId,p=e.teamId,l=this.$q.defer(),c=this.logger.service.newScenario(this.constants.scenarios.extensibility.tabs.gallery.openInstallAppDialog),d=s===this.constants.extensibility.groupChatContextName&&this.enableSideloadedAppsInGroupChat&&r?teamspace.components.AddAppDialogInstallOptionFlag.GroupChat:teamspace.components.AddAppDialogInstallOptionFlag.Team,h=s===this.constants.extensibility.groupChatContextName&&this.enableSideloadedAppsInGroupChat&&r?teamspace.components.AddAppDialogIntent.GroupChat:r?teamspace.components.AddAppDialogIntent.Team:teamspace.components.AddAppDialogIntent.User,g=s===this.constants.extensibility.teamContextName&&p?p:void 0,u=s===this.constants.extensibility.teamContextName&&r?r:void 0,m=s===this.constants.extensibility.groupChatContextName&&this.enableSideloadedAppsInGroupChat?r:void 0,v=function(){o.appStoreDialogHelper.openDialog(g||m,n,a)},f={appID:t,installOptionFlags:d,intent:h,teamId:g,channelId:u,chatId:m,skipInstalledSuccess:!0,source:this.constants.extensibility.contextualStoreDialog,onBackButtonClicked:v};return i=s===this.constants.extensibility.groupChatContextName&&this.enableSideloadedAppsInGroupChat&&r?{entryPoint:teamspace.components.AddAppDialogEntryPoint.InContextGalleryDialogFromGroupChat,appId:t,chatId:m,onBackButtonClicked:v}:{entryPoint:teamspace.components.AddAppDialogEntryPoint.InContextGalleryDialogFromChannel,appId:t,channelId:u,teamId:g,onBackButtonClicked:v},this.dialogService.openLazyDialog(this.constants.lazyDialogs.addAppNew,this.constants.lazyModules.extensibilityDialogs,Object.assign(f,i),function(e){e&&e.installSucceeded?l.resolve():l.reject(),o.dialogService.registerCloseCallback(o.constants.lazyDialogs.addAppNew,null)}),c.stop(),l.promise},e.prototype.gotoManageApps=function(e,t){switch(e){case this.constants.extensibility.groupChatContextName:this.navigationService.navigateToManageAppsInChat(t,"in-context-app-store-dialog");break;case this.constants.extensibility.teamContextName:var n=this.channelService.getCurrentTeamAndChannel();this.navigationService.navigateToManageAppsInTeam(n.team,"in-context-app-store-dialog");break;default:throw"AppStoreActionsHandler::gotoManageApps invalid scope"}},e.prototype.openTabConfigurationDialog=function(e,t,n){var a=this,i=this.logger.service.newScenario(this.constants.scenarios.extensibility.tabs.gallery.openTabConfigurationDialog);i.eventData[this.constants.scenarios.extensibility.tabs.params.inlineConfig]=this.enableTabInlineConfig,this.extensionDefinitionService.getExtensionDefinition(t).then(function(o){var s=new teamspace.services.ExtensionInstanceViewModel(o,a.constants);if(a.enableTabInlineConfig){var r={actionGesture:teamspace.components.PanelActionGesture.click,actionOutcome:teamspace.components.PanelActionOutcome.nav,actionScenario:teamspace.components.PanelActionScenario.createUnconfigTab,actionScenarioType:teamspace.components.PanelActionScenarioType.tabs,moduleType:teamspace.components.PanelModuleType.inContextAppStoreDialog,moduleName:teamspace.components.PanelModuleName.inContextAppStoreDialog,moduleSummary:"Create an unconfigured tab from in-context store",dataBag:{appId:t,threadId:e},app:{id:t,scope:n===a.constants.extensibility.teamContextName?teamspace.components.PanelAppScope.team:teamspace.components.PanelAppScope.group,scenarioCapability:teamspace.components.PanelAppScenarioCapability.tabs}};a.tabService.createTab(e,s,!1,!0,!0,!0,r)}else a.dialogService.openLazyDialog(a.constants.lazyDialogs.tabInstanceConfiguration,a.constants.lazyModules.extensibilityTabs,{tabDefinition:o,tabInstance:s,threadId:e,operationType:teamspace.components.DialogTabMenuOperationType.AddTabSettings,backToTabGallery:!0});i.stop()}).catch(function(e){i.fail({errorInfo:e,errorInfo1:e})})},e.prototype.atMentionBot=function(e,t,n,a){var i=this,o=function(){var o={botProfile:{memberCount:0,accountEnabled:!0,displayName:e,mri:i.constants.bots.keyPrefix+t,type:i.constants.atMentions.type.bot},messageId:n.scope===i.constants.extensibility.teamContextName?a:void 0,type:i.constants.atMentions.type.bot};i.eventingService.$emit(i.constants.events.bots.insertBotAtMention,o)};n.scope===this.constants.extensibility.teamContextName?(this.navigationService.navigateToChannel(n.threadId,"in-context-app-store-dialog"),this.executeOnEditorSync(n.threadId,function(){o()},a)):this.routeUtilityService.getRootRouteParams().middlePane===this.constants.messages.panes.conversations?o():(this.navigationService.navigateToChat(n.threadId,"in-context-app-store-dialog"),this.executeOnEditorSyncForChat(n.threadId,function(){o()}))},e.prototype.openConnectorConfigurationDialog=function(e){var t=this.channelService.getCurrentTeamAndChannel();this.dialogService.openLazyDialog(this.constants.lazyDialogs.connectorsManager,this.constants.lazyModules.extensibilityDialogs,{team:t.team,channel:t.channel,connectorId:e})},e.prototype.launchInputExtension=function(e,t){var n={appId:e,messageId:t,type:this.constants.events.funStuff.type.inputExtension};this.eventingService.$emit(this.constants.events.app.installed,n)},e.prototype.executeOnEditorSync=function(e,t,n){var a=this,i=this.$rootScope.$on(this.constants.events.messages.focusInEditor,function(o,s){var r=s&&s.replyChainId;if(n&&n==r||!r&&!n){var p=a.routeUtilityService.getRootRouteParams();(!e||p&&p.threadId===e)&&a.uiOrchestrator.nextFrame(teamspace.services.UiOrchestratorPriority.Low,function(){t()}),i&&i()}})},e.prototype.executeOnEditorSyncForChat=function(e,t){var n=this,a=this.$rootScope.$on(this.constants.events.messages.focusInEditor,function(){var i=n.routeUtilityService.getRootRouteParams();(!e||i&&i.peopleSlug===e)&&n.uiOrchestrator.nextFrame(teamspace.services.UiOrchestratorPriority.Low,function(){t()}),a&&a()})},e}();t.AppStoreActionsHandler=i},1873:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t,n){this.$translate=e,this.resources=t,this.constants=n}return e.prototype.getCapabilities=function(e){switch(e){case this.constants.extensibility.teamContextName:case this.constants.extensibility.groupChatContextName:return[this.getTabsCapability(e),this.getBotsCapability()];case this.constants.extensibility.oneOnOneContextName:return[this.getTabsCapability(e)]}},e.prototype.getTabsCapability=function(e){var t=this.resources.strings.in_context_app_store_dialog_caption_message_tabs_chats;return e===this.constants.extensibility.teamContextName&&(t=this.resources.strings.in_context_app_store_dialog_caption_message_tabs_channel),{value:teamspace.services.AppsServiceCategoryFilter.Tabs,text:this.$translate.instant(this.resources.strings.extensibility_apps_gallery_tabs_option),title:this.$translate.instant(this.resources.strings.extensibility_apps_gallery_title_tabs_option),caption:this.$translate.instant(t)}},e.prototype.getBotsCapability=function(){return{value:teamspace.services.AppsServiceCategoryFilter.Bots,text:this.$translate.instant(this.resources.strings.extensibility_apps_gallery_bots_option),title:this.$translate.instant(this.resources.strings.extensibility_apps_gallery_title_bots_option),caption:this.$translate.instant(this.resources.strings.in_context_app_store_dialog_caption_message_bots)}},e}();t.AppStoreCapabilityHelper=a},1874:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){this.utilityService=e,this.appRankMap=t}return e.prototype.convertInstalledAppToInContextStoreViewModel=function(e){return this.convertAppDefinitionToInContextStoreViewModel(e.appDefinition)},e.prototype.convertAppDefinitionToInContextStoreViewModel=function(e){return{id:e.id,name:e.name,nameLowerCase:e.name.toLowerCase(),description:e.shortDescription,icon:e.largeImageUrl,useNgIncludeForIcon:this.utilityService.useNgIncludeForIcon(e.largeImageUrl),accentColor:e.accentColor,installRank:this.getInstallRank(e),isSideloaded:!!e.externalId,botId:this.getBotId(e),inputExtensionId:this.getInputExtensionId(e),connectorId:this.getConnectorId(e)}},e.prototype.getInstallRank=function(e){return this.appRankMap[e.id]?this.appRankMap[e.id].installRank:0},e.prototype.getBotId=function(e){return e.bots&&e.bots.length>0?e.bots[0].id:void 0},e.prototype.getInputExtensionId=function(e){return e.inputExtensions&&e.inputExtensions.length>0?e.inputExtensions[0].botId:void 0},e.prototype.getConnectorId=function(e){return e.connectors&&e.connectors.length>0?e.connectors[0].connectorId:void 0},e}();t.AppStoreViewModelAdapter=a},1875:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=teamspace.services.AppsServiceCategoryFilter,i=function(){function e(e,t,n){this.constants=e,this.$translate=t,this.resources=n,this.MF_SELECTOR_VALUE_CHAT="chats",this.MF_SELECTOR_VALUE_CHANNEL="channel",this.MF_SELECTOR_VALUE_PRIVATE_CHANNEL="private_channel",this.MF_SELECTOR_VALUE_TABS="tabs",this.MF_SELECTOR_VALUE_BOTS="bots"}return e.prototype.getDialogTitle=function(e){var t=this.getResourceParams(e);return this.$translate.instant(this.resources.strings.in_context_app_store_dialog_title_mf,t,this.constants.translation.interpolationIds.messageformat)},e.prototype.getEmptyStateMessage=function(e){var t=this.getResourceParams(e);return this.$translate.instant(this.resources.strings.in_context_app_store_dialog_empty_state_message_mf,t,this.constants.translation.interpolationIds.messageformat)},e.prototype.getInstalledHeaderMessage=function(e,t){var n;switch(e){case a.Tabs:n=this.resources.strings.in_context_app_store_dialog_installed_apps_heading_tabs_mf;break;case a.Bots:n=this.resources.strings.in_context_app_store_dialog_installed_apps_heading_bots_mf}var i=this.getResourceParams(e,t);return this.$translate.instant(n,i,this.constants.translation.interpolationIds.messageformat)},e.prototype.getNotInstalledHeaderMessage=function(e,t){var n;switch(e){case a.Tabs:n=this.resources.strings.in_context_app_store_dialog_not_installed_apps_heading_tabs_mf;break;case a.Bots:n=this.resources.strings.in_context_app_store_dialog_not_installed_apps_heading_bots_mf}var i=this.getResourceParams(e,null,t);return this.$translate.instant(n,i,this.constants.translation.interpolationIds.messageformat)},e.prototype.getSearchResultsAriaString=function(e,t){var n;switch(e){case a.Tabs:n=this.resources.strings.in_context_app_store_dialog_search_result_update_tabs_mf;break;case a.Bots:n=this.resources.strings.in_context_app_store_dialog_search_result_update_bots_mf}var i=this.getResourceParams(e,null,t);return this.$translate.instant(n,i,this.constants.translation.interpolationIds.messageformat)},e.prototype.getResourceParams=function(e,t,n){var i={};switch(e){case a.Tabs:i.capability=this.MF_SELECTOR_VALUE_TABS;break;case a.Bots:i.capability=this.MF_SELECTOR_VALUE_BOTS}return t&&(t.scope===this.constants.extensibility.teamContextName?t.isPrivateChannel?i.context=this.MF_SELECTOR_VALUE_PRIVATE_CHANNEL:i.context=this.MF_SELECTOR_VALUE_CHANNEL:i.context=this.MF_SELECTOR_VALUE_CHAT),void 0!==n&&(i.count=n),i},e}();t.InContextAppStoreDialogStringsHelper=i},1876:function(e,t,n){"use strict";"user strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(1877),i=function(){function e(e,t,n,a,i,o,s){var r=this;this.$scope=n,this.$state=a,this.constants=i,this.tooltipService=o,this.utilityService=s,this.errorMessage=n.ngDialogData.errorMessage,this.errorDetails=n.ngDialogData.errorDetails,this.footerButtons=[{icon:"svg/icons-discover-apps.html",text:e.instant(t.strings.extensibility_go_to_store),func:function(){return r.openAppStore()},tid:"manifestErrorDialog-openStore"}]}return e.$inject=["$translate","resources","$scope","$state","constants","tooltipService","utilityService"],e.prototype.onCopyErrorDetailsClick=function(e){var t={};t[teamspace.services.UtilityServiceStatics.ClipboardFormats.Text]=this.errorDetails,this.utilityService.copyMultipleFormatsToClipboard(t);var n=angular.element(document.querySelector(".manifest-error-dialog-link-text"));n&&this.tooltipService.showLinkCopiedTooltip(e,this.$scope,n,n,12)},e.prototype.openAppStore=function(){var e={intent:teamspace.components.AddAppDialogIntent.Ambiguous,category:teamspace.services.AppsServiceCategoryFilter.All,autoNavigationOnDone:!0,skipInstalledSuccess:!1,storeLaunchFromChat:!1};this.$state.go(this.constants.states.appApps,e),this.$scope.closeThisDialog()},e}();t.ManifestErrorDialogController=i,angular.module("teamspace.manifestErrorDialog",["teamspace.dialogService","teamspace.utilityService","teamspace.tooltipService","teamspace.constants"]).run(["constants","dialogService","$templateCache",function(e,t,n){n.put(e.files.templates.manifestErrorDialog,a),t.register(e.lazyDialogs.manifestError,{template:e.files.templates.manifestErrorDialog,className:"ts-modal-dialog custom-width manifest-error-dialog new-dialog",showClose:!1,isPersistent:!0})}]).controller("ManifestErrorDialogController",i)},1877:function(e,t){e.exports='<div class="manifest-error-dialog-container" ng-controller="ManifestErrorDialogController as medc" aria-modal="true" acc-role="dialog">\n  <modal-dialog footer-buttons="medc.footerButtons" center-align-buttons="true" add-close-icon="true" suppress-default-button="true" skip-auto-focus="true" class="manifest-error-dialog">\n    <div class="manifest-error-dialog-content">\n      <div class="manifest-error-dialog-image">\n        <ng-include src="\'svg/surprised-woman.html\'"></ng-include>\n      </div>\n      <div class="app-font-title2-bold manifest-error-dialog-message" ng-bind-html="medc.errorMessage">\n      </div>\n      <div class="manifest-error-dialog-helper-message" translate-once="extensibility_manifest_error_message">For more information, please visit aka.ms/teamsdocs\n      </div>\n      <a ng-click="medc.onCopyErrorDetailsClick($event)" ng-if="medc.errorDetails" rel="noopener noreferrer" class="manifest-error-dialog-link" tabindex="0">\n        <div class="manifest-error-dialog-link-text" translate-once="extension_addAppDialogManifestParsingCopyClipboardLabel">Copy Error Details to Clipboard\n        </div>\n      </a>\n    </div>\n  </modal-dialog>\n</div>'},1878:function(e,t,n){"use strict";var a=this&&this.__assign||function(){return(a=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++){t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var i=n(1879),o=n(51),s=function(){function e(e,t,n,a,i,o,s,r,p,l,c,d,h,g,u,m,v,f,S,y,A,b,D){var C=this;this.$q=e,this.$rootScope=t,this.$scope=n,this.$translate=a,this.analyticsService=i,this.appsExtensionDefinitionService=o,this.appsService=s,this.channelService=r,this.constants=p,this.dialogService=l,this.eventingService=c,this.extensionDefinitionService=d,this.extensionManifestService=h,this.loggingService=g,this.navigationService=u,this.resources=m,this.routeUtilityService=v,this.tabService=S,this.uiOrchestrator=y,this.teamMembershipPropertiesService=A,this.teamSettingsService=b,this.utilityService=D,this.enableTabInlineConfig=!1,this.strName="",this.largeImageUrl="",this.strAccentColor="",this.title="",this.subTitle="",this.buttonText="",this.inputPrompt="",this.appCapabilities=[],this.hasMoreCapabilities=!1,this.isAppInstalledToTeamScope=!1,this.isAppInstalledToChatScope=!1,this.isSideloadedApp=!1,this.shouldShowDropdown=!1,this.isInstalling=!1,this.closeDropdown=function(){C.$scope.$apply(function(){return C.shouldShowDropdown=!1})},this.logger=g.newLogger("team-or-channel-picker"),this.navigationScenario=g.newScenario(p.scenarios.extensibility.apps.appInstalledDialog.navigation),this.teamPickerDialogData=n.ngDialogData,this.enableTabInlineConfig=f.valueAsBoolean(p.settings.names.enableTabInlineConfig),this.appInstallScope=this.teamPickerDialogData.pickerType,this.isSideloadedApp=this.teamPickerDialogData.isSideloadApp,this.updateButtonText(),this.isSideloadedApp?this.handleSideloadFlow(this.teamPickerDialogData.manifestZipFile):this.populateDetails(this.teamPickerDialogData)}return e.$inject=["$q","$rootScope","$scope","$translate","analyticsService","appsExtensionDefinitionService","appsService","channelService","constants","dialogService","eventingService","extensionDefinitionService","extensionManifestService","loggingService","navigationService","resources","routeUtilityService","settingsService","tabService","uiOrchestrator","teamMembershipPropertiesService","teamSettingsService","utilityService"],Object.defineProperty(e.prototype,"navCtx",{get:function(){return"team-or-channel-picker"},enumerable:!0,configurable:!0}),e.prototype.handleSideloadFlow=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.apps.teamOrChannelPicker.sideloadFlow);this.extensionManifestService.extractAppDefinition(e,!0).then(function(e){t.appDefinition=e,t.populateDialogFromAppDefinition(e),n.stop()}).catch(function(e){t.logger.error("extract app definition failed "+e),n.fail({error:e,error1:e})})},e.prototype.populateDetails=function(e){var t=this;this.preselectTeamId=e.teamId,this.preselectChatId=e.chatId,this.appsService.getUserAppDefinition(e.appId,"team-or-channel-picker").then(function(e){t.appDefinition=e,t.populateDialogFromAppDefinition(e)})},e.prototype.openSchemaErrorDialog=function(e){var t=this.$translate.instant(this.resources.strings.extension_addAppDialogErrorMessage),n=null;e.data&&e.data.errorCode===this.constants.extensibility.apps.errorCodes.unableToParseTeamsAppManifest&&(t=this.$translate.instant(this.resources.strings.extension_addAppDialogManifestParsingErrorMessage),n=e.data.message),this.dialogService.close(this.constants.lazyDialogs.teamOrChannelPicker),this.dialogService.openLazyDialog(this.constants.lazyDialogs.manifestError,this.constants.lazyModules.extensibilityDialogs,{errorMessage:t,errorDetails:n})},e.prototype.openV3ErrorDialog=function(e){this.dialogService.close(this.constants.lazyDialogs.teamOrChannelPicker),this.dialogService.openLazyDialog(this.constants.lazyDialogs.addAppNewError,this.constants.lazyModules.extensibilityDialogs,{errorType:e})},e.prototype.onItemSelected=function(e){var t=this.loggingService.newScenario(this.constants.scenarios.extensibility.apps.teamOrChannelPicker.itemselectedFromDropDown);if(!e)return this.selectedTeamAndChannel=null,this.selectedChat=null,t.mark("no item selected from drop down"),void t.stop();this.populateAppCapabilities(),e.type===teamspace.components.SelectorItemType.Channel&&this.appInstallScope===teamspace.components.AppInstallScope.Team?(t.mark("team and channel selected from drop down"),this.selectedTeamAndChannel=e,this.evaluateDisabledCapabilitiesWarning(),this.isAppInstalledToTeam()):e.type===teamspace.components.SelectorItemType.Chat&&this.appInstallScope===teamspace.components.AppInstallScope.GroupChat&&(t.mark("chat selected from drop down"),this.selectedChat=e,this.isAppInstalledToChat()),t.stop()},e.prototype.evaluateDisabledCapabilitiesWarning=function(){this.showDisabledCapabilitiesWarning=!1,this.appDefinition.galleryTabs&&this.appDefinition.galleryTabs.length>0&&!this.isAddingTabEnabled()&&(this.removeAppCapability(teamspace.components.CapabilityType.Tab),this.showDisabledCapabilitiesWarning=!0),this.appDefinition.connectors&&this.appDefinition.connectors.length>0&&!this.isAddingConnectorEnabled()&&(this.removeAppCapability(teamspace.components.CapabilityType.Connector),this.showDisabledCapabilitiesWarning=!0)},e.prototype.removeAppCapability=function(e){this.appCapabilities=this.appCapabilities.filter(function(t){return t.type!==e}),this.updateButtonText()},e.prototype.isAddingTabEnabled=function(){return this.teamMembershipPropertiesService.isAdmin(this.selectedTeamAndChannel.teamId)||this.teamSettingsService.canAddTab(this.selectedTeamAndChannel.teamId)},e.prototype.isAddingConnectorEnabled=function(){return this.teamMembershipPropertiesService.isAdmin(this.selectedTeamAndChannel.teamId)||this.teamSettingsService.canAddConnector(this.selectedTeamAndChannel.teamId)},e.prototype.installApp=function(){this.isInstalling=!0;var e=this.loggingService.newScenario(this.constants.scenarios.extensibility.apps.teamOrChannelPicker.menuItemNoSpecificCapability);this.appInstallScope===teamspace.components.AppInstallScope.Team?(e.mark("No specific capability selected for team"),this.isSideloadedApp?this.processTeamSideloadInstall():this.processTeamInstall()):this.appInstallScope===teamspace.components.AppInstallScope.GroupChat?(e.mark("No specific capability selected for chat"),this.isSideloadedApp?this.processChatSideloadInstall():this.processChatInstall()):(this.logger.error("should not reach here: app scope not present"),e.fail()),e.stop()},e.prototype.processTeamInstall=function(e){this.selectedTeamAndChannel?this.isAppInstalledToTeamScope?this.navigateToTheSelectedCapability(e||this.appCapabilities[0]):this.installAppForTeam(e):this.logger.error("team or channel not selected")},e.prototype.processTeamSideloadInstall=function(e){var t=this;this.selectedTeamAndChannel?this.sideloadAppForTeamScope().then(function(n){if(!n)return t.$q.reject("no sideloaded app");t.appDefinition=n.appDefinition,t.navigateToTheSelectedCapability(e||t.appCapabilities[0])}).catch(function(e){t.logger.error("sideload for team failed "+e)}):this.logger.error("team or channel not selected")},e.prototype.processChatSideloadInstall=function(e){var t=this;this.selectedChat?this.sideloadAppForChatScope().then(function(n){n&&(t.appDefinition=n.appDefinition,t.navigateToTheSelectedCapability(e||t.appCapabilities[0]))}).catch(function(e){t.logger.error("sideload for chat failed "+e)}):this.logger.error("chat not selected")},e.prototype.sideloadAppForTeamScope=function(){var e=this,t=_.cloneDeep(this.appDefinition),n=this.appDefinition.externalId.toLowerCase();return this.extensionManifestService.getZipStreamPromise(this.teamPickerDialogData.manifestZipFile).then(function(a){return e.appsService.getAggregatedInstalledAppsForTeam(!1,[e.selectedTeamAndChannel.teamId]).then(function(i){for(var o=0;o<i.length;o++){var s=function(o){var s=i[o];if(teamspace.services.AppsServiceUtils.isAppInstalled(s)&&s.appDefinition.externalId&&n===s.appDefinition.externalId.toLowerCase()&&!s.appDefinition.tenantId)return t.id=s.appDefinition.id,{value:e.appsService.updateTeamAppDefinitionFromZip(e.selectedTeamAndChannel.teamId,t.id,a).then(function(){return e.$q.resolve(s)})}}(o);if("object"==typeof s)return s.value}return e.appsService.createTeamAppDefinitionFromZip(e.selectedTeamAndChannel.teamId,a).then(function(){return e.appsService.getAggregatedInstalledAppsForTeam(!1,[e.selectedTeamAndChannel.teamId]).then(function(t){var a=_.findIndex(t,function(e){return e.appDefinition.externalId===n});return e.$q.resolve(t[a])})})})}).catch(function(t){e.logger.error("sideload for team failed "+t),e.openSchemaErrorDialog(t)})},e.prototype.sideloadAppForChatScope=function(){var e=this,t=_.cloneDeep(this.appDefinition),n=this.appDefinition.externalId.toLowerCase();return this.extensionManifestService.getZipStreamPromise(this.teamPickerDialogData.manifestZipFile).then(function(a){return e.appsService.getInstalledAppsForGroupChat(e.selectedChat.id).then(function(i){for(var o=0;o<i.length;o++){var s=function(o){var s=i[o];if(teamspace.services.AppsServiceUtils.isAppInstalled(s)&&s.appDefinition.externalId&&n===s.appDefinition.externalId.toLowerCase()&&!s.appDefinition.tenantId)return t.id=s.appDefinition.id,{value:e.appsService.updateGroupChatAppDefinitionFromZip(e.selectedChat.id,t.id,a).then(function(){return e.$q.resolve(s)})}}(o);if("object"==typeof s)return s.value}return e.appsService.createGroupChatAppDefinitionFromZip(e.selectedChat.id,a).then(function(){return e.appsService.getInstalledAppsForGroupChat(e.selectedChat.id).then(function(t){var a=_.findIndex(t,function(e){return e.appDefinition.externalId===n});return e.$q.resolve(t[a])})})})}).catch(function(t){e.logger.error("sideload for chat failed "+t),e.openSchemaErrorDialog(t)})},e.prototype.processChatInstall=function(e){this.selectedChat&&(this.isAppInstalledToChatScope?this.navigateToTheSelectedCapability(e||this.appCapabilities[0]):this.installAppForChat(e))},e.prototype.isAppInstalledToTeam=function(){var e=this;this.appsService.getInstalledAppForTeam(this.selectedTeamAndChannel.teamId,this.teamPickerDialogData.appId).then(function(t){t&&teamspace.services.AppsServiceUtils.isAppInstalled(t)?e.isAppInstalledToTeamScope=!0:e.isAppInstalledToTeamScope=!1})},e.prototype.isAppInstalledToChat=function(){var e=this;this.appsService.getInstalledAppForGroupChat(this.selectedChat.id,this.teamPickerDialogData.appId).then(function(t){t&&teamspace.services.AppsServiceUtils.isAppInstalled(t)?e.isAppInstalledToChatScope=!0:e.isAppInstalledToChatScope=!1})},e.prototype.installAppForTeam=function(e){var t=this;return this.appsService.createTeamAppEntitlement(this.selectedTeamAndChannel.teamId,this.appDefinition).then(function(){t.logTelemetryForInstall(t.appDefinition),t.navigateToTheSelectedCapability(e||t.appCapabilities[0])}).catch(function(e){t.logger.error("install for team failed "+e),t.openV3ErrorDialog("something-wrong")})},e.prototype.installAppForChat=function(e){var t=this;return this.appsService.createGroupChatAppEntitlement(this.selectedChat.id,this.appDefinition).then(function(){t.logTelemetryForInstall(t.appDefinition),t.navigateToTheSelectedCapability(e||t.appCapabilities[0])}).catch(function(e){t.logger.error("install for chat failed "+e),t.openV3ErrorDialog("something-wrong")})},e.prototype.navigateToTheSelectedCapability=function(e){var t=this.loggingService.newScenario(this.constants.scenarios.extensibility.apps.teamOrChannelPicker.navigateToTheCapability);switch(e.type){case teamspace.components.CapabilityType.Tab:this.appInstallScope===teamspace.components.AppInstallScope.GroupChat?(t.mark("navigate to chat Tab"),this.navigateToChatTab()):(t.mark("navigate to team Tab"),this.navigateToTeamTab());break;case teamspace.components.CapabilityType.Bot:t.mark("navigate to bot"),this.navigateToBot();break;case teamspace.components.CapabilityType.Messaging:t.mark("navigate to messaging"),this.navigateToTeamMessaging();break;case teamspace.components.CapabilityType.Connector:t.mark("navigate to connector"),this.navigateToTeamConnector();break;default:this.logger.error("should not reach here: no capability type selected")}t.stop()},e.prototype.back=function(){this.dialogService.close(this.constants.lazyDialogs.teamOrChannelPicker),this.dialogService.openLazyDialog(this.constants.lazyDialogs.addAppNew,this.constants.lazyModules.extensibilityDialogs,this.teamPickerDialogData.addAppDialogData)},e.prototype.hasTeamScope=function(e){return!!(e&&e.length>0)&&_.every(e,function(e){return!!(e.scopes&&e.scopes.length>0)&&_.some(e.scopes,function(e){return"Team"===e})})},e.prototype.hasGroupChatScope=function(e){return!!(e&&e.length>0)&&_.every(e,function(e){return!!(e.scopes&&e.scopes.length>0)&&_.some(e.scopes,function(e){return"GroupChat"===e})})},e.prototype.createAppCapability=function(e,t,n){return{type:e,icon:t,description:n}},e.prototype.populateDialogFromAppDefinition=function(e){this.largeImageUrl=e.largeImageUrl,this.largeImageUrlUseNgInclude=this.utilityService.useNgIncludeForIcon(e.largeImageUrl),this.strName=e.name,this.strAccentColor=e.accentColor,this.appInstallScope===teamspace.components.AppInstallScope.Team?(this.title=this.$translate.instant(this.resources.strings.extension_teamOrChannelPicker_title,{appName:e.name}),this.subTitle=this.$translate.instant(this.resources.strings.extension_teamOrChannelPicker_subTitle,{appName:e.name}),this.inputPrompt=this.$translate.instant(this.resources.strings.extension_teamOrChannelPicker_teamPrompt)):(this.title=this.$translate.instant(this.resources.strings.extension_chatPicker_title,{appName:e.name}),this.subTitle="",this.inputPrompt=this.$translate.instant(this.resources.strings.extension_teamOrChannelPicker_chatPrompt))},e.prototype.populateAppCapabilities=function(){var e=this.loggingService.newScenario(this.constants.scenarios.extensibility.apps.teamOrChannelPicker.populateAppCapabilities);if(this.appDefinition){if(this.appCapabilities=[],this.appInstallScope===teamspace.components.AppInstallScope.Team&&(this.appDefinition.galleryTabs&&this.appDefinition.galleryTabs.length>0&&this.hasTeamScope(this.appDefinition.galleryTabs)||this.appDefinition.staticTabs&&this.appDefinition.staticTabs.length>0&&this.hasTeamScope(this.appDefinition.staticTabs))){e.mark("Add team tab capability");var t=this.createAppCapability(teamspace.components.CapabilityType.Tab,"svg/icons-tab-badge.html",this.$translate.instant(this.resources.strings.extension_teamOrChannelPicker_setUpTabString));this.appCapabilities.push(t)}if(this.appInstallScope===teamspace.components.AppInstallScope.GroupChat&&(this.appDefinition.galleryTabs&&this.appDefinition.galleryTabs.length>0&&this.hasGroupChatScope(this.appDefinition.galleryTabs)||this.appDefinition.staticTabs&&this.appDefinition.staticTabs.length>0&&this.hasGroupChatScope(this.appDefinition.staticTabs))){e.mark("Add chat tab capability");var n=this.createAppCapability(teamspace.components.CapabilityType.Tab,"svg/icons-tab-badge.html",this.$translate.instant(this.resources.strings.extension_teamOrChannelPicker_setUpTabString));this.appCapabilities.push(n)}if(this.appInstallScope===teamspace.components.AppInstallScope.Team&&this.appDefinition.bots&&this.appDefinition.bots.length>0&&this.hasTeamScope(this.appDefinition.bots)){e.mark("Add team bot capability");var a=this.createAppCapability(teamspace.components.CapabilityType.Bot,"svg/icons-bot.html",this.$translate.instant(this.resources.strings.extension_teamOrChannelPicker_setUpBotString));this.appCapabilities.push(a)}if(this.appInstallScope===teamspace.components.AppInstallScope.GroupChat&&this.appDefinition.bots&&this.appDefinition.bots.length>0&&this.hasGroupChatScope(this.appDefinition.bots)){e.mark("Add chat bot capability");var i=this.createAppCapability(teamspace.components.CapabilityType.Bot,"svg/icons-bot.html",this.$translate.instant(this.resources.strings.extension_teamOrChannelPicker_setUpBotString));this.appCapabilities.push(i)}if(this.appInstallScope===teamspace.components.AppInstallScope.Team&&this.appDefinition.inputExtensions&&this.appDefinition.inputExtensions.length>0&&this.hasTeamScope(this.appDefinition.inputExtensions)){e.mark("Add team messaging capability");var o=this.createAppCapability(teamspace.components.CapabilityType.Messaging,"svg/icons-compose-extension-badge.html",this.$translate.instant(this.resources.strings.extension_teamOrChannelPicker_setUpMessagingString));this.appCapabilities.push(o)}if(this.appInstallScope===teamspace.components.AppInstallScope.Team&&this.appDefinition.connectors&&this.appDefinition.connectors.length>0&&this.hasTeamScope(this.appDefinition.connectors)){e.mark("Add team connector capability");var s=this.createAppCapability(teamspace.components.CapabilityType.Connector,"svg/icons-connector-badge.html",this.$translate.instant(this.resources.strings.extension_teamOrChannelPicker_setUpConnectorString));this.appCapabilities.push(s)}this.updateButtonText()}else this.logger.error("should not reach here: no appdefinition present");e.stop()},e.prototype.updateButtonText=function(){this.buttonText=1==this.appCapabilities.length?this.appCapabilities[0].description:this.$translate.instant(this.resources.strings.extension_teamOrChannelPicker_setUpGeneralString)},e.prototype.processClickedItem=function(e){this.isInstalling=!0;var t=this.loggingService.newScenario(this.constants.scenarios.extensibility.apps.teamOrChannelPicker.menuItemSpecificCapability);this.appInstallScope===teamspace.components.AppInstallScope.Team?(t.mark("Specific capability selected for team"),this.isSideloadedApp?this.processTeamSideloadInstall(e):this.processTeamInstall(e)):this.appInstallScope===teamspace.components.AppInstallScope.GroupChat?(t.mark("Specific capability selected for group chat"),this.isSideloadedApp?this.processChatSideloadInstall(e):this.processChatInstall(e)):(this.logger.error("should not reach here: app scope not present"),t.fail()),t.stop()},e.prototype.navigateToTeamTab=function(){var e=this;try{this.dialogService.close(this.constants.lazyDialogs.teamOrChannelPicker),this.navigationService.navigateToChannel(this.selectedTeamAndChannel.channelId,this.navCtx),this.extensionDefinitionService.getExtensionDefinition(this.appDefinition.id).then(function(t){var n=new teamspace.services.ExtensionInstanceViewModel(t,e.constants);if(e.enableTabInlineConfig){var i={actionGesture:teamspace.components.PanelActionGesture.click,actionOutcome:teamspace.components.PanelActionOutcome.nav,actionScenario:teamspace.components.PanelActionScenario.createUnconfigTab,actionScenarioType:teamspace.components.PanelActionScenarioType.tabs,moduleType:teamspace.components.PanelModuleType.button,moduleName:teamspace.components.PanelModuleName.navigationButton,moduleSummary:"Create an unconfigured tab",app:a({},e.getAppInformationForTelemetry(e.appDefinition,e.selectedTeamAndChannel.teamId,e.selectedTeamAndChannel.channelId,null)),dataBag:{appId:e.appDefinition.id,threadId:e.selectedTeamAndChannel.channelId}};return e.tabService.createTab(e.selectedTeamAndChannel.channelId,n,!1,!0,!0,!0,i,!0)}e.dialogService.openLazyDialog(e.constants.lazyDialogs.tabInstanceConfiguration,e.constants.lazyModules.extensibilityTabs,{tabDefinition:t,tabInstance:n,threadId:e.selectedTeamAndChannel.channelId,operationType:teamspace.components.DialogTabMenuOperationType.AddTabSettings})}).catch(function(t){e.navigationScenario.fail(a({},e.getScenarioEventData(),{error:"Navigation to a team's channel to add a tab failed. "+t,error1:"Navigation to a team's channel to add a tab failed. "+t}))}),this.navigationScenario.stop(this.getScenarioEventData()),this.logTelemetryForNavigation(teamspace.components.PanelActionScenario.navTab,this.appDefinition,this.selectedTeamAndChannel.teamId,this.selectedTeamAndChannel.channelId)}catch(e){this.navigationScenario.fail(a({},this.getScenarioEventData(),{error:"Navigation to a team's channel to add a tab failed. "+e,error1:"Navigation to a team's channel to add a tab failed. "+e}))}},e.prototype.navigateToBot=function(){try{this.dialogService.close(this.constants.lazyDialogs.teamOrChannelPicker);var e={botProfile:{memberCount:0,accountEnabled:!0,displayName:this.appDefinition.name,mri:this.constants.bots.keyPrefix+this.appDefinition.bots[0].id,type:this.constants.atMentions.type.bot},messageId:void 0,type:this.constants.atMentions.type.bot};this.appInstallScope===teamspace.components.AppInstallScope.GroupChat?(this.navigationService.navigateToChat(this.selectedChat.id,this.navCtx),this.executeOnEditorSyncForChat(this.selectedChat.id,e)):(this.navigationService.navigateToChannel(this.selectedTeamAndChannel.channelId,this.navCtx),this.executeOnEditorSync(this.selectedTeamAndChannel.channelId,e,void 0)),this.navigationScenario.stop(this.getScenarioEventData()),this.logTelemetryForNavigation(teamspace.components.PanelActionScenario.navBot,this.appDefinition,this.selectedTeamAndChannel?this.selectedTeamAndChannel.teamId:null,this.selectedTeamAndChannel?this.selectedTeamAndChannel.channelId:null,this.selectedChat?this.selectedChat.id:null)}catch(e){this.navigationScenario.fail(a({},this.getScenarioEventData(),{error:"Navigation  to add a bot failed. "+e,error1:"Navigation  to add a bot failed. "+e}))}},e.prototype.executeOnEditorSync=function(e,t,n){var a=this;this.eventingService.$once(this.$rootScope,this.constants.events.messages.focusInEditor,function(i,o){var s=o&&o.replyChainId;if(n&&n==s||!s&&!n){var r=a.routeUtilityService.getRootRouteParams();(!e||r&&r.threadId===e)&&a.uiOrchestrator.nextFrame(teamspace.services.UiOrchestratorPriority.Low,function(){a.eventingService.$emit(a.constants.events.app.installed,t)})}})},e.prototype.executeOnEditorSyncForChat=function(e,t){var n=this;this.eventingService.$once(this.$rootScope,this.constants.events.messages.focusInEditor,function(){var a=n.routeUtilityService.getRootRouteParams();(!e||a&&a.peopleSlug===e)&&n.uiOrchestrator.nextFrame(teamspace.services.UiOrchestratorPriority.Low,function(){n.eventingService.$emit(n.constants.events.app.installed,t)})})},e.prototype.navigateToChatTab=function(){var e=this;try{this.dialogService.close(this.constants.lazyDialogs.teamOrChannelPicker),this.navigationService.navigateToChat(this.selectedChat.id,this.navCtx),this.appsService.getInstalledAppForGroupChat(this.selectedChat.id,this.appDefinition.id).then(function(t){var n=new teamspace.services.ExtensionDefinitionViewModel(e.appsExtensionDefinitionService.createTabExtensionDefinition(t.appDefinition),e.constants),i=new teamspace.services.ExtensionInstanceViewModel(n,e.constants);if(e.enableTabInlineConfig){var o={actionGesture:teamspace.components.PanelActionGesture.click,actionOutcome:teamspace.components.PanelActionOutcome.nav,actionScenario:teamspace.components.PanelActionScenario.createUnconfigTab,actionScenarioType:teamspace.components.PanelActionScenarioType.tabs,moduleType:teamspace.components.PanelModuleType.button,moduleName:teamspace.components.PanelModuleName.navigationButton,moduleSummary:"Create an unconfigured tab",app:a({},e.getAppInformationForTelemetry(e.appDefinition,null,null,e.selectedChat.id)),dataBag:{appId:e.appDefinition.id,threadId:e.selectedChat.id}};return e.tabService.createTab(e.selectedChat.id,i,!1,!0,!0,!0,o,!0)}e.dialogService.openLazyDialog(e.constants.lazyDialogs.tabInstanceConfiguration,e.constants.lazyModules.extensibilityTabs,{tabDefinition:n,tabInstance:i,threadId:e.selectedChat.id,operationType:teamspace.components.DialogTabMenuOperationType.AddTabSettings})}),this.navigationScenario.stop(this.getScenarioEventData()),this.logTelemetryForNavigation(teamspace.components.PanelActionScenario.navTab,this.appDefinition,this.selectedChat.id)}catch(e){this.navigationScenario.fail(a({},this.getScenarioEventData(),{error:"Navigation to a chat to add a tab failed. "+e,error1:"Navigation to a chat to add a tab failed. "+e}))}},e.prototype.navigateToTeamMessaging=function(){try{this.dialogService.close(this.constants.lazyDialogs.teamOrChannelPicker),this.navigationService.navigateToChannel(this.selectedTeamAndChannel.channelId,this.navCtx);var e={appId:this.appDefinition.id,messageId:void 0,type:this.constants.events.funStuff.type.inputExtension};this.executeOnEditorSync(this.selectedTeamAndChannel.channelId,e,void 0),this.navigationScenario.stop(this.getScenarioEventData()),this.logTelemetryForNavigation(teamspace.components.PanelActionScenario.navComposeExtension,this.appDefinition,this.selectedTeamAndChannel.teamId,this.selectedTeamAndChannel.channelId)}catch(e){this.navigationScenario.fail(a({},this.getScenarioEventData(),{error:"Navigation to a team's channel to add a messaging extension failed. "+e,error1:"Navigation to a team's channel to add a messaging extension failed. "+e}))}},e.prototype.navigateToTeamConnector=function(){try{this.dialogService.close(this.constants.lazyDialogs.teamOrChannelPicker),this.navigationService.navigateToChannel(this.selectedTeamAndChannel.channelId,this.navCtx);var e=this.channelService.getCurrentTeamAndChannel();this.dialogService.openLazyDialog(this.constants.lazyDialogs.connectorsManager,this.constants.lazyModules.extensibilityDialogs,{team:e.team,channel:e.channel,connectorId:this.appDefinition.connectors[0].connectorId}),this.navigationScenario.stop(this.getScenarioEventData()),this.logTelemetryForNavigation(teamspace.components.PanelActionScenario.navConnector,this.appDefinition,this.selectedTeamAndChannel.teamId,this.selectedTeamAndChannel.channelId)}catch(e){this.navigationScenario.fail(a({},this.getScenarioEventData(),{error:"Navigation to a team's channel to add a connector failed. "+e,error1:"Navigation to a team's channel to add a connector failed. "+e}))}},e.prototype.getScenarioEventData=function(){return this.appDefinition?{appId:this.appDefinition.id,externalId:this.appDefinition.externalId,tenantId:this.appDefinition.tenantId}:null},e.prototype.logTelemetryForNavigation=function(e,t,n,i,o){var s=this,r={action:{gesture:teamspace.components.PanelActionGesture.click,outcome:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionOutcome.nav.toString(),teamspace.components.PanelActionOutcome,this.loggingService),scenario:teamspace.shared.AttributeHelper.tryGetEnum(e.toString(),teamspace.components.PanelActionScenario,this.loggingService),scenarioType:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenarioType.nav.toString(),teamspace.components.PanelActionScenarioType,this.loggingService)},module:{name:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelModuleName.navigationButton.toString(),teamspace.components.PanelModuleName,this.loggingService),type:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelModuleType.nav.toString(),teamspace.components.PanelModuleType,this.loggingService),summary:"Post app installation navigation"},app:a({},this.getAppInformationForTelemetry(t,n,i,o)),dataBag:{teamId:n,channelId:i,chatId:o}};this.analyticsService.getAnalyticsPanelActionEventData(r).then(function(e){s.analyticsService.sendPanelAction(e)}).catch(function(e){s.logger.error("failed to log navigation scenario "+e)})},e.prototype.logTelemetryForInstall=function(e){var t=this;_.defer(function(){var n={action:{gesture:teamspace.components.PanelActionGesture.click,outcome:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionOutcome.submit.toString(),teamspace.components.PanelActionOutcome,t.loggingService),scenario:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenario.addAppDialog.toString(),teamspace.components.PanelActionScenario,t.loggingService),scenarioType:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelActionScenarioType.appMgmt.toString(),teamspace.components.PanelActionScenarioType,t.loggingService)},module:{name:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelModuleName.addAppButton.toString(),teamspace.components.PanelModuleName,t.loggingService),type:teamspace.shared.AttributeHelper.tryGetEnum(teamspace.components.PanelModuleType.button.toString(),teamspace.components.PanelModuleType,t.loggingService),summary:"Consent to add an app"},app:a({},t.getAppInformationForTelemetry(e),{scope:t.appInstallScope===teamspace.components.AppInstallScope.Team?teamspace.components.PanelAppScope.team:teamspace.components.PanelAppScope.group,scenarioCapability:teamspace.components.PanelAppScenarioCapability.na})};t.appInstallScope===teamspace.components.AppInstallScope.Team&&(n.team={id:t.selectedTeamAndChannel.teamId}),t.analyticsService.getAnalyticsPanelActionEventData(n).then(function(e){t.analyticsService.sendPanelAction(e)})})},e.prototype.getAppInformationForTelemetry=function(e,t,n,a){var i=teamspace.components.AppAnalyticsHelper.getAppAnalyticsData({appDefinition:e});return i.teamId=t,i.channelId=n,i.chatId=a,i.source=teamspace.shared.AttributeHelper.tryGetEnum(this.teamPickerDialogData.addAppDialogData.entryPoint.toString(),teamspace.components.AddAppDialogEntryPoint,this.loggingService),this.teamPickerDialogData.addAppDialogData.entryPoint===teamspace.components.AddAppDialogEntryPoint.DeepLink&&(i.deepLinkSource=this.teamPickerDialogData.addAppDialogData.deepLinkSource),i},e.prototype.onKeyboard=function(e){if(e.keyCode!==this.constants.keyCodes.escape){if(e.keyCode===this.constants.keyCodes.tab)return event.stopPropagation(),void event.preventDefault();e.keyCode!==this.constants.keyCodes.up?e.keyCode!==this.constants.keyCodes.down||o.focusNextInTheList(".ts-tcpc-set-up-button-dropdown",".ts-tcpc-menu-item-button"):o.focusPreviousInTheList(".ts-tcpc-set-up-button-dropdown",".ts-tcpc-menu-item-button")}else{e.preventDefault(),e.stopPropagation(),this.toggleDropdown();var t=angular.element(document).find(".setup-button-arrow");t&&t.length&&t[0].focus()}},e.prototype.toggleDropdown=function(e){e&&e.stopPropagation&&e.stopPropagation(),this.shouldShowDropdown=!this.shouldShowDropdown,this.shouldShowDropdown?(angular.element(document).one("click",this.closeDropdown),e&&e.detail&&e.detail<0&&o.focusNthInTheList(".ts-tcpc-set-up-button-dropdown",".ts-tcpc-menu-item-button")):angular.element(document).off("click",this.closeDropdown)},e}();t.TeamOrChannelPickerController=s,angular.module("teamspace.teamOrChannelPicker",[]).run(["constants","dialogService","$templateCache",function(e,t,n){n.put("components/extensibility/team-or-channel-picker/team-or-channel-picker.html",i),t.register(e.lazyDialogs.teamOrChannelPicker,{template:"components/extensibility/team-or-channel-picker/team-or-channel-picker.html",className:"ts-modal-dialog custom-width ts-team-or-channel-picker",closeByEscape:!0,closeByDocument:!0,ariaAuto:!1,ariaRole:"dialog",ariaLabelledById:"modalDialog-title"})}]).controller("TeamOrChannelPickerController",s)},1879:function(e,t){e.exports='<div class="ts-team-or-channel-picker-container" ng-controller="TeamOrChannelPickerController as tcpc" aria-modal="true" acc-role="dialog">\n  <modal-dialog add-close-icon="true" suppress-default-footer="true" data-tid="teamOrChannelPicker" track-panel-type="{{$root.trackConstants.panelType.teamOrChannelPicker}}">\n    <section class="ts-team-or-channel-picker-main-content">\n      <div class="ts-team-or-channel-picker-description">\n        <div class="image-container">\n          <div class="image" ng-style="{ \'background\': tcpc.strAccentColor }">\n            <ng-include src="tcpc.largeImageUrl" ng-if="tcpc.largeImageUrlUseNgInclude"></ng-include>\n            <img role="img" alt="{{($root.resources.strings.extensibility_app_icon_alt|translate:{appName:tcpc.strName})}}" aria-label="{{($root.resources.strings.extensibility_app_icon_alt|translate:{appName:tcpc.strName})}}" ng-if="!tcpc.largeImageUrlUseNgInclude" ng-src="{{tcpc.largeImageUrl}}"/>\n           </div>\n        </div>\n        <div class="title">{{tcpc.title}}</div>\n        <div class="subtitle">{{tcpc.subTitle}}</div>\n      </div>\n      <div class="team-or-chat-search">\n        <div class="search-box-title app-font-caption-regular">{{tcpc.inputPrompt}}</div>\n        <chat-and-team-selector data-tid="choose-team-and-channel" is-add-app-dialog-v3="true" app-install-scope="tcpc.appInstallScope" on-item-selected="tcpc.onItemSelected(selectedItem)" preselect-chat="tcpc.preselectChatId" preselect-team="tcpc.preselectTeamId">\n\n        </chat-and-team-selector>\n      </div>\n      <div ng-if="tcpc.showDisabledCapabilitiesWarning" class="permission-error app-font-caption-regular" translate-once="{{::$root.resources.strings.extension_installed_dialog_tabDisabled}}">\n      </div>\n    </section>\n    <section class="ts-team-or-channel-picker-footer">\n      <button class="back-button" ng-click="tcpc.back()" track-scenario="{{::$root.trackConstants.trackScenario.addAppDialogV3TeamChatPickerBackButton}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.appMgmt}}" track-outcome="{{::$root.trackConstants.trackOutcome.nav}}">\n        <ng-include src="\'svg/icons-chevron-left.html\'"></ng-include>\n        {{::$root.resources.strings.extension_addAppDialog_back|translate}}\n      </button>\n\n      <div class="setup-button">\n        <button type="button" class="ts-btn ts-btn-fluent ts-btn-fluent-primary setup-button-main" ng-disabled="!(tcpc.appCapabilities.length > 0) || tcpc.isInstalling" ng-click="tcpc.installApp()" data-tid="team-picker-primary-set-up-button" track-scenario="{{::$root.trackConstants.trackScenario.addAppDialogV3TeamChatSetup}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.appMgmt}}" track-outcome="{{::$root.trackConstants.trackOutcome.submit}}">\n          {{tcpc.buttonText}}\n        </button>\n        <button class="ts-btn ts-btn-fluent ts-btn-fluent-primary setup-button-arrow" ng-if="!(tcpc.appCapabilities.length == 1)" ng-disabled="!(tcpc.appCapabilities.length> 0) || tcpc.isInstalling" ng-click="tcpc.toggleDropdown($event)">\n          <svg-include src="\'svg/icons-triangle-down-small.html\'"></svg-include>\n        </button>\n        <div ng-if="tcpc.shouldShowDropdown" ng-keydown="tcpc.onKeyboard($event)" class="ts-tcpc-set-up-button-dropdown">\n          <ul role="list">\n            <li ng-repeat="menuItem in tcpc.appCapabilities track by $index">\n              <button role="listitem" class="ts-tcpc-menu-item-button" ng-click="tcpc.processClickedItem(menuItem)" track-scenario="{{::$root.trackConstants.trackScenario.addAppDialogV3TeamChatSetup}}" track-scenario-type="{{::$root.trackConstants.trackScenarioType.appMgmt}}" track-outcome="{{::$root.trackConstants.trackOutcome.submit}}">\n                <ng-include src="menuItem.icon"></ng-include>\n                <span aria-hidden="true">{{menuItem.description}}</span>\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </section>\n  </modal-dialog>\n</div>'},25:function(e,t){e.exports=angular},51:function(e,t,n){"use strict";function a(e,t){return _.some(t,function(t){return e===t.toLocaleLowerCase()})}function i(e,t){return!(!t||!t.length)&&_.every(t,function(t){return!!(t&&t.scopes&&t.scopes.length)&&a(e,t.scopes)})}function o(e,t,n){angular.element(e).ready(function(e){var a=e.find(t);a&&a.length&&n(a)})}Object.defineProperty(t,"__esModule",{value:!0}),t.Supported=["bots","connectors","galleryTabs","inputExtensions","staticTabs"],t.checkIfAppHasScope=function(e,n){return _.some(t.Supported,function(t){return n[t]&&i(e,n[t])})},t.hasScope=i,t.findListOfFocusable=o,t.focusNthInTheList=function(e,t,n){void 0===n&&(n=0),o(e,t,function(e){e[n].focus()})},t.focusNextInTheList=function(e,t){o(e,t,function(e){var t=_.findIndex(e,function(e){return e===document.activeElement});e[t+1>=e.length?e.length-1:t+1].focus()})},t.focusPreviousInTheList=function(e,t){o(e,t,function(e){var t=_.findIndex(e,function(e){return e===document.activeElement});e[t-1<0?0:t-1].focus()})};var s=['button:not([tabindex="-1"])','[href]:not([tabindex="-1"])','input:not([tabindex="-1"])','select:not([tabindex="-1"])','textarea:not([tabindex="-1"])','[tabindex]:not([tabindex="-1"])'];t.focusFirstFocusable=function(e){angular.element(e).ready(function(t){var n=_.map(s,function(t){return e+" "+t}),a=t.find(n.join(","));a&&a.length&&a[0].focus()})}},78:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});!function(e){e[e.AddConnectorInstance=0]="AddConnectorInstance",e[e.ManageConnectorInstance=1]="ManageConnectorInstance"}(t.ConnectorDialogOperationType||(t.ConnectorDialogOperationType={}))}},[1840]);
//# sourceMappingURL=https://statics.teams.microsoft.com/hashedjs/lazy-ng1-mod-extensibility-dialogs.min.js-0e09790f.map