#
# Copyright (c) 2011, 2016 Eurotech and/or its affiliates
#
#  All rights reserved. This program and the accompanying materials
#  are made available under the terms of the Eclipse Public License v1.0
#  which accompanies this distribution, and is available at
#  http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#   Eurotech
#

## -----------------------------------------------------------------------------
##  Kura Properties
## -----------------------------------------------------------------------------
kura.name=Kura
kura.version=kura_emulator
kura.company=Eclipse
kura.project=Dev
kura.platform=dynacor
kura.device.name=DevEmulator
kura.model.id=DevModelId
kura.model.name=DevModelName
kura.partNumber=DevPartNumber
kura.serialNumber=DevSerialNumber
kura.bios.version=DevBiosVersion
kura.firmware.version=DevFirmwareVersion
# kura.mac.address= Fetch from Java
kura.home=/tmp/kura
kura.plugins=/tmp/kura/plugins
kura.packages=/tmp/kura/packages
kura.data=/tmp/kura/data
kura.tmp=/tmp/kura/tmp
kura.snapshots=/tmp/kura/snapshots
kura.snapshots.count=10
kura.have.net.admin=false
# os.arch= Fetch from Java
# os.name= Fetch from Java
# os.version= Fetch from Java
os.distribution=DevOsDitribution
os.distribution.version=DevOsDitributionVersion
# java.version= Fetch from Java
# java.vendor= Fetch from Java
# java.vm.name= Fetch from Java
# java.vm.version= Fetch from Java
# java.home= Fetch from Java
# file.separator= Fetch from Java


## -----------------------------------------------------------------------------
## Java Key Store Settings
## -----------------------------------------------------------------------------
kura.ssl.keyStorePassword=everyware
kura.ssl.trustStorePassword=everyware


## -----------------------------------------------------------------------------
## HSQLDB Service Properties
## -----------------------------------------------------------------------------
# The following configurations represent different trade-offs between data durability
# and wearing of the physical storage. This aspect is particularly important for
# embedded devices where the storage is tipically a flash based device (NAND, SD etc.)
# with a limited number of write/erase cycles.

## 1. In-memory configuration.
## This configuration is suggested for high publish rates.
## DB survives to network/connection drops but all messages are lost
## in case of a crash or power failure.
## see http://hsqldb.org/doc/guide/ch04.html
db.service.hsqldb.url=jdbc:hsqldb:mem:kuradb

## 2. Mostly persistent.
## This configuration is suggested for medium publish rates.
## DB survives to network/connection drops. In case of a crash or power failure,
## all the messages stored since the last checkpoint will be lost.
## A checkpoint should be run periodically to control the desired consistency of the database.
## As data logging is disabled, the defragmentation is operated periodically by the ESF Housekeeper task.
## This will flush the .data and perform a defragmentation.
## The defragmentation will keep the data.data file to a relatively small size.
## The CPU utilization will rise significantly while this is in progress.
## Applications can call manual \u201Ccheckpoint\u201D if they need further durability.
## see http://hsqldb.org/doc/guide/ch04.html
# db.service.hsqldb.url=jdbc:hsqldb:file:/tmp/kura/data/db/data;hsqldb.lock_file=false;
# db.service.hsqldb.log_data=false
# db.service.hsqldb.nio_data_file=false
# db.service.hsqldb.defrag_limit=Does not apply
# db.service.hsqldb.write_delay_millis=Does not apply
# db.service.hsqldb.cache_rows=Rely on defaults if not set
# db.service.hsqldb.lob_file_scale=Rely on defaults if not set
# db.service.hsqldb.log_size=Rely on defaults if not set

## 3. Most persistent.
## This configuration is suggested for slow publish rates.
## DB survives to network/connection drops. In case of a crash or power failure,
## most of the data can be recovered from the data.log file.
## A periodic checkpoint is not needed in this case.
## An automatic defragmentation is operated by HSQLDB as set in the db.service.hsqldb.defrag_limit which should NOT be set to 0.
## In this configuration with logging enabled, the Housekeeper task will NOT perform any defragmentation.  
## The defragmentation will keep the data.data file to a relatively small size.
## The CPU utilization will rise significantly while this is in progress.
## The configuration parameter db.service.hsqldb.write_delay_millis controls the delay with which the data is flushed to disk.
## The default is 500ms. In the case of power interruption you would loose the last X millies of data.
## see http://hsqldb.org/doc/guide/ch04.html
# db.service.hsqldb.url=jdbc:hsqldb:file:/tmp/kura/data/db/data;hsqldb.lock_file=false;
# db.service.hsqldb.log_data=true
# db.service.hsqldb.nio_data_file=false
# db.service.hsqldb.defrag_limit=50
# db.service.hsqldb.write_delay_millis=Rely on defaults if not set
# db.service.hsqldb.cache_rows=Rely on defaults if not set
# db.service.hsqldb.lob_file_scale=Rely on defaults if not set
# db.service.hsqldb.log_size=Rely on defaults if not set


## -----------------------------------------------------------------------------
## File upload settings
## -----------------------------------------------------------------------------
# default 10240
file.upload.in.memory.size.threshold=10240
# -1: unlimited (default)
file.upload.size.max=-1


## -----------------------------------------------------------------------------
## Deployment Agent settings
## -----------------------------------------------------------------------------
# see copyURLToFile() http://commons.apache.org/proper/commons-io/javadocs/api-2.4/index.html
dpa.connection.timeout = 60000
dpa.read.timeout = 60000


## -----------------------------------------------------------------------------
## Cloud Connection Status settings
## -----------------------------------------------------------------------------

#1. Cloud Connection Status on system log
#The Cloud Connection Status will be indicated in the log files, and nowere else
#ccs.status.notification.url=ccs:log

#2. Cloud Connection Status on LED
#The Cloud Connection Status will be indicated by a blinking LED connected to the system GPIOs
#The URL should indicate the GPIO logic index of the GPIO Pin used for the LED
ccs.status.notification.url=ccs:led:16

#3. Cloud Connection Status disabled
#Disables the Cloud Connection Status service
#ccs.status.notification.urs=ccs:none
