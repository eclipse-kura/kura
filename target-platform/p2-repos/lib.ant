<?xml version="1.0" encoding="UTF-8"?>
<project default="default"
	xmlns:if="ant:if"
	xmlns:unless="ant:unless">
	
	<property name="target" location="target" />
	<property name="local.root" location="../.."/>
	
	<property file="${local.root}/config/download.version.properties"/>
		
	<property environment="env"/>
	
	<!-- ================================= 
          target: default
         ================================= -->
    <target name="default">
        <fail message="This is just a library"/>
    </target>
	
	<!-- ================================= 
          target: init
         ================================= -->
    <target name="init">
        <mkdir dir="${target}/download"/>
    	<mkdir dir="${target}/unpack"/>
    	<mkdir dir="${target}/source/plugins"/>
    	
    	<echo message="${env.KURA_BUILD_CACHE}" />
    </target>
	
	<!--
	  - Fetch a file from a remote location.
	  - 
	  - If the KURA_BUILD_CACHE environment variable is set, then its value will
	  - be used as a patch for caching downloads
	  -->
	<macrodef name="fetch">
		<attribute name="src"/>
		<attribute name="dest"/>
		<attribute name="ignoreerrors" default="false"/>
		<sequential>
			<sequential unless:set="env.KURA_BUILD_CACHE">
				<get src="@{src}" dest="@{dest}" usetimestamp="true" ignoreerrors="@{ignoreerrors}"/>
			</sequential>
			<sequential if:set="env.KURA_BUILD_CACHE">
				<local name="fn"/>
				<basename file="@{src}" property="fn"/>
				<echo message="Build cache: ${fn}" />
				<mkdir dir="${env.KURA_BUILD_CACHE}"/>
				<get src="@{src}" dest="${env.KURA_BUILD_CACHE}/${fn}" usetimestamp="true" ignoreerrors="@{ignoreerrors}"/>

				<local name="fa"/>
				<local name="fe"/>
				
				<available property="fa" file="${env.KURA_BUILD_CACHE}/${fn}" />
				
				<condition property="fe">
					<and>
						<not><isset property="fa"/></not>
						<not><istrue value="@{ignoreerrors}"/></not>
					</and>
				</condition>
				
				<fail if:set="fe" message="Unable to download required file: @{src}"/>
				
				<copy if:set="fa" file="${env.KURA_BUILD_CACHE}/${fn}" tofile="@{dest}" />
			</sequential>
		</sequential>
	</macrodef>

	<!-- = = = = = = = = = = = = = = = = =
          macrodef: orbit
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="orbit">
        <attribute name="bundle" />
        <sequential>
        	<fetch src="http://download.eclipse.org/tools/orbit/downloads/drops/${orbit.release}/repository/plugins/@{bundle}_${@{bundle}.version}.jar" dest="${target}/source/plugins/@{bundle}_${@{bundle}.version}.jar" />
	    	<fetch src="http://download.eclipse.org/tools/orbit/downloads/drops/${orbit.release}/repository/plugins/@{bundle}.source_${@{bundle}.version}.jar" dest="${target}/source/plugins/@{bundle}_${@{bundle}.version}.jar" ignoreerrors="true" />
        </sequential>
    </macrodef>
	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: unzipped
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="unzipped">
    	<attribute name="package" />
    	<attribute name="bundle" />
        <sequential>
        	<copy file="${target}/unpack/@{package}/plugins/@{bundle}_${@{bundle}.version}.jar" todir="${target}/source/plugins" />
        	<copy file="${target}/unpack/@{package}/plugins/@{bundle}.source_${@{bundle}.version}.jar" todir="${target}/source/plugins" failonerror="false" />
        </sequential>
    </macrodef>
	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: localized
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="localized">
    	<attribute name="bundle" />
    	<attribute name="version" default="${@{bundle}.version}"/>
        <sequential>
        	<local name="versionedDirectory" />
        	<available file="${local.root}/@{bundle}/@{version}/target/@{bundle}-@{version}.jar" property="versionedDirectory" />

        	<copy
    			if:set="versionedDirectory"
        		file="${local.root}/@{bundle}/@{version}/target/@{bundle}-@{version}.jar" todir="${target}/source/plugins" />
        	
    		<copy
    			unless:set="versionedDirectory"
        		file="${local.root}/@{bundle}/target/@{bundle}-@{version}.jar" todir="${target}/source/plugins" />
        	
        </sequential>
    </macrodef>
	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: checkedin
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="checkedin">
    	<attribute name="bundle" />
        <sequential>
        	<copy file="${local.root}/p2-repos/lib/@{bundle}_${@{bundle}.version}.jar" todir="${target}/source/plugins" />
        </sequential>
    </macrodef>
	
	<scriptdef name="normalizeFileName" language="javascript">
		<attribute name="file"/>
		<![CDATA[
		var file = new java.io.File(attributes.get("file"));
		var jar = new java.util.jar.JarFile(file);
		var attrs = jar.getManifest().getMainAttributes();
		jar.close ();
		var bsn = attrs.getValue("Bundle-SymbolicName").split(";", 2)[0];
		var version = attrs.getValue("Bundle-Version");
		var name = bsn + "-" + version + ".jar";
		
		if ( file.getName() != name ) {
			java.nio.file.Files.move ( file.toPath (), new java.io.File(file.getParentFile(), name).toPath(), java.nio.file.StandardCopyOption.REPLACE_EXISTING );
		}
		]]>
	</scriptdef>
	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: maven
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="maven">
        <attribute name="groupId" />
    	<attribute name="artifactId" />
    	<attribute name="version" default="${@{artifactId}.version}" />
        <sequential>
        	<fetch src="http://repo1.maven.org/maven2/@{groupId}/@{artifactId}/@{version}/@{artifactId}-@{version}.jar" dest="${target}/source/plugins/@{artifactId}-@{version}.jar" />
        	<normalizeFileName file="${target}/source/plugins/@{artifactId}-@{version}.jar" />
        </sequential>
    </macrodef>
	
</project>
